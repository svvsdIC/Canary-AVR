
Canary Software Package.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001dc  00800100  0000254e  000025e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000254e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000042b  008002dc  008002dc  000027be  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000281c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  00002860  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000049c2  00000000  00000000  00002ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000164e  00000000  00000000  00007482  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001af4  00000000  00000000  00008ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006c8  00000000  00000000  0000a5c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cc1  00000000  00000000  0000ac8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b3e  00000000  00000000  0000b94d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  0000d48b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	96 c0       	rjmp	.+300    	; 0x12e <__ctors_end>
       2:	00 00       	nop
       4:	b3 c0       	rjmp	.+358    	; 0x16c <__bad_interrupt>
       6:	00 00       	nop
       8:	b1 c0       	rjmp	.+354    	; 0x16c <__bad_interrupt>
       a:	00 00       	nop
       c:	af c0       	rjmp	.+350    	; 0x16c <__bad_interrupt>
       e:	00 00       	nop
      10:	ad c0       	rjmp	.+346    	; 0x16c <__bad_interrupt>
      12:	00 00       	nop
      14:	ab c0       	rjmp	.+342    	; 0x16c <__bad_interrupt>
      16:	00 00       	nop
      18:	a9 c0       	rjmp	.+338    	; 0x16c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a7 c0       	rjmp	.+334    	; 0x16c <__bad_interrupt>
      1e:	00 00       	nop
      20:	a5 c0       	rjmp	.+330    	; 0x16c <__bad_interrupt>
      22:	00 00       	nop
      24:	a3 c0       	rjmp	.+326    	; 0x16c <__bad_interrupt>
      26:	00 00       	nop
      28:	a1 c0       	rjmp	.+322    	; 0x16c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9f c0       	rjmp	.+318    	; 0x16c <__bad_interrupt>
      2e:	00 00       	nop
      30:	9d c0       	rjmp	.+314    	; 0x16c <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 6b 0c 	jmp	0x18d6	; 0x18d6 <__vector_13>
      38:	99 c0       	rjmp	.+306    	; 0x16c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	97 c0       	rjmp	.+302    	; 0x16c <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 6a 0c 	jmp	0x18d4	; 0x18d4 <__vector_16>
      44:	93 c0       	rjmp	.+294    	; 0x16c <__bad_interrupt>
      46:	00 00       	nop
      48:	91 c0       	rjmp	.+290    	; 0x16c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8f c0       	rjmp	.+286    	; 0x16c <__bad_interrupt>
      4e:	00 00       	nop
      50:	8d c0       	rjmp	.+282    	; 0x16c <__bad_interrupt>
      52:	00 00       	nop
      54:	0c 94 89 0d 	jmp	0x1b12	; 0x1b12 <__vector_21>
      58:	89 c0       	rjmp	.+274    	; 0x16c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	87 c0       	rjmp	.+270    	; 0x16c <__bad_interrupt>
      5e:	00 00       	nop
      60:	85 c0       	rjmp	.+266    	; 0x16c <__bad_interrupt>
      62:	00 00       	nop
      64:	83 c0       	rjmp	.+262    	; 0x16c <__bad_interrupt>
      66:	00 00       	nop
      68:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__vector_26>
      6c:	7f c0       	rjmp	.+254    	; 0x16c <__bad_interrupt>
      6e:	00 00       	nop
      70:	0c 94 cb 0d 	jmp	0x1b96	; 0x1b96 <__vector_28>
      74:	7b c0       	rjmp	.+246    	; 0x16c <__bad_interrupt>
      76:	00 00       	nop
      78:	79 c0       	rjmp	.+242    	; 0x16c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	77 c0       	rjmp	.+238    	; 0x16c <__bad_interrupt>
      7e:	00 00       	nop
      80:	75 c0       	rjmp	.+234    	; 0x16c <__bad_interrupt>
      82:	00 00       	nop
      84:	73 c0       	rjmp	.+230    	; 0x16c <__bad_interrupt>
      86:	00 00       	nop
      88:	71 c0       	rjmp	.+226    	; 0x16c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f5 0c       	add	r15, r5
      8e:	47 0d       	add	r20, r7
      90:	47 0d       	add	r20, r7
      92:	47 0d       	add	r20, r7
      94:	47 0d       	add	r20, r7
      96:	47 0d       	add	r20, r7
      98:	47 0d       	add	r20, r7
      9a:	47 0d       	add	r20, r7
      9c:	f5 0c       	add	r15, r5
      9e:	47 0d       	add	r20, r7
      a0:	47 0d       	add	r20, r7
      a2:	47 0d       	add	r20, r7
      a4:	47 0d       	add	r20, r7
      a6:	47 0d       	add	r20, r7
      a8:	47 0d       	add	r20, r7
      aa:	47 0d       	add	r20, r7
      ac:	f7 0c       	add	r15, r7
      ae:	47 0d       	add	r20, r7
      b0:	47 0d       	add	r20, r7
      b2:	47 0d       	add	r20, r7
      b4:	47 0d       	add	r20, r7
      b6:	47 0d       	add	r20, r7
      b8:	47 0d       	add	r20, r7
      ba:	47 0d       	add	r20, r7
      bc:	47 0d       	add	r20, r7
      be:	47 0d       	add	r20, r7
      c0:	47 0d       	add	r20, r7
      c2:	47 0d       	add	r20, r7
      c4:	47 0d       	add	r20, r7
      c6:	47 0d       	add	r20, r7
      c8:	47 0d       	add	r20, r7
      ca:	47 0d       	add	r20, r7
      cc:	f7 0c       	add	r15, r7
      ce:	47 0d       	add	r20, r7
      d0:	47 0d       	add	r20, r7
      d2:	47 0d       	add	r20, r7
      d4:	47 0d       	add	r20, r7
      d6:	47 0d       	add	r20, r7
      d8:	47 0d       	add	r20, r7
      da:	47 0d       	add	r20, r7
      dc:	47 0d       	add	r20, r7
      de:	47 0d       	add	r20, r7
      e0:	47 0d       	add	r20, r7
      e2:	47 0d       	add	r20, r7
      e4:	47 0d       	add	r20, r7
      e6:	47 0d       	add	r20, r7
      e8:	47 0d       	add	r20, r7
      ea:	47 0d       	add	r20, r7
      ec:	43 0d       	add	r20, r3
      ee:	47 0d       	add	r20, r7
      f0:	47 0d       	add	r20, r7
      f2:	47 0d       	add	r20, r7
      f4:	47 0d       	add	r20, r7
      f6:	47 0d       	add	r20, r7
      f8:	47 0d       	add	r20, r7
      fa:	47 0d       	add	r20, r7
      fc:	20 0d       	add	r18, r0
      fe:	47 0d       	add	r20, r7
     100:	47 0d       	add	r20, r7
     102:	47 0d       	add	r20, r7
     104:	47 0d       	add	r20, r7
     106:	47 0d       	add	r20, r7
     108:	47 0d       	add	r20, r7
     10a:	47 0d       	add	r20, r7
     10c:	47 0d       	add	r20, r7
     10e:	47 0d       	add	r20, r7
     110:	47 0d       	add	r20, r7
     112:	47 0d       	add	r20, r7
     114:	47 0d       	add	r20, r7
     116:	47 0d       	add	r20, r7
     118:	47 0d       	add	r20, r7
     11a:	47 0d       	add	r20, r7
     11c:	14 0d       	add	r17, r4
     11e:	47 0d       	add	r20, r7
     120:	47 0d       	add	r20, r7
     122:	47 0d       	add	r20, r7
     124:	47 0d       	add	r20, r7
     126:	47 0d       	add	r20, r7
     128:	47 0d       	add	r20, r7
     12a:	47 0d       	add	r20, r7
     12c:	32 0d       	add	r19, r2

0000012e <__ctors_end>:
     12e:	11 24       	eor	r1, r1
     130:	1f be       	out	0x3f, r1	; 63
     132:	cf ef       	ldi	r28, 0xFF	; 255
     134:	d0 e4       	ldi	r29, 0x40	; 64
     136:	de bf       	out	0x3e, r29	; 62
     138:	cd bf       	out	0x3d, r28	; 61

0000013a <__do_copy_data>:
     13a:	12 e0       	ldi	r17, 0x02	; 2
     13c:	a0 e0       	ldi	r26, 0x00	; 0
     13e:	b1 e0       	ldi	r27, 0x01	; 1
     140:	ee e4       	ldi	r30, 0x4E	; 78
     142:	f5 e2       	ldi	r31, 0x25	; 37
     144:	00 e0       	ldi	r16, 0x00	; 0
     146:	0b bf       	out	0x3b, r16	; 59
     148:	02 c0       	rjmp	.+4      	; 0x14e <__do_copy_data+0x14>
     14a:	07 90       	elpm	r0, Z+
     14c:	0d 92       	st	X+, r0
     14e:	ac 3d       	cpi	r26, 0xDC	; 220
     150:	b1 07       	cpc	r27, r17
     152:	d9 f7       	brne	.-10     	; 0x14a <__do_copy_data+0x10>

00000154 <__do_clear_bss>:
     154:	27 e0       	ldi	r18, 0x07	; 7
     156:	ac ed       	ldi	r26, 0xDC	; 220
     158:	b2 e0       	ldi	r27, 0x02	; 2
     15a:	01 c0       	rjmp	.+2      	; 0x15e <.do_clear_bss_start>

0000015c <.do_clear_bss_loop>:
     15c:	1d 92       	st	X+, r1

0000015e <.do_clear_bss_start>:
     15e:	a7 30       	cpi	r26, 0x07	; 7
     160:	b2 07       	cpc	r27, r18
     162:	e1 f7       	brne	.-8      	; 0x15c <.do_clear_bss_loop>
     164:	0e 94 14 0b 	call	0x1628	; 0x1628 <main>
     168:	0c 94 a5 12 	jmp	0x254a	; 0x254a <_exit>

0000016c <__bad_interrupt>:
     16c:	0c 94 55 0c 	jmp	0x18aa	; 0x18aa <__vector_default>

00000170 <ADC_SetMux>:
     170:	ec e7       	ldi	r30, 0x7C	; 124
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	90 81       	ld	r25, Z
     176:	90 7e       	andi	r25, 0xE0	; 224
     178:	90 83       	st	Z, r25
     17a:	90 81       	ld	r25, Z
     17c:	89 2b       	or	r24, r25
     17e:	80 83       	st	Z, r24
     180:	08 95       	ret

00000182 <ADC_init>:
     182:	cf 93       	push	r28
     184:	df 93       	push	r29
     186:	ec e7       	ldi	r30, 0x7C	; 124
     188:	f0 e0       	ldi	r31, 0x00	; 0
     18a:	80 81       	ld	r24, Z
     18c:	80 64       	ori	r24, 0x40	; 64
     18e:	80 83       	st	Z, r24
     190:	ca e7       	ldi	r28, 0x7A	; 122
     192:	d0 e0       	ldi	r29, 0x00	; 0
     194:	88 81       	ld	r24, Y
     196:	81 60       	ori	r24, 0x01	; 1
     198:	88 83       	st	Y, r24
     19a:	88 81       	ld	r24, Y
     19c:	82 60       	ori	r24, 0x02	; 2
     19e:	88 83       	st	Y, r24
     1a0:	88 81       	ld	r24, Y
     1a2:	84 60       	ori	r24, 0x04	; 4
     1a4:	88 83       	st	Y, r24
     1a6:	a4 e6       	ldi	r26, 0x64	; 100
     1a8:	b0 e0       	ldi	r27, 0x00	; 0
     1aa:	8c 91       	ld	r24, X
     1ac:	8e 7f       	andi	r24, 0xFE	; 254
     1ae:	8c 93       	st	X, r24
     1b0:	80 81       	ld	r24, Z
     1b2:	8f 7d       	andi	r24, 0xDF	; 223
     1b4:	80 83       	st	Z, r24
     1b6:	8f e3       	ldi	r24, 0x3F	; 63
     1b8:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
     1bc:	88 81       	ld	r24, Y
     1be:	80 68       	ori	r24, 0x80	; 128
     1c0:	88 83       	st	Y, r24
     1c2:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
     1c6:	8f e1       	ldi	r24, 0x1F	; 31
     1c8:	d3 df       	rcall	.-90     	; 0x170 <ADC_SetMux>
     1ca:	88 81       	ld	r24, Y
     1cc:	80 64       	ori	r24, 0x40	; 64
     1ce:	88 83       	st	Y, r24
     1d0:	ea e7       	ldi	r30, 0x7A	; 122
     1d2:	f0 e0       	ldi	r31, 0x00	; 0
     1d4:	80 81       	ld	r24, Z
     1d6:	84 ff       	sbrs	r24, 4
     1d8:	fd cf       	rjmp	.-6      	; 0x1d4 <ADC_init+0x52>
     1da:	ea e7       	ldi	r30, 0x7A	; 122
     1dc:	f0 e0       	ldi	r31, 0x00	; 0
     1de:	80 81       	ld	r24, Z
     1e0:	80 64       	ori	r24, 0x40	; 64
     1e2:	80 83       	st	Z, r24
     1e4:	80 81       	ld	r24, Z
     1e6:	84 ff       	sbrs	r24, 4
     1e8:	fd cf       	rjmp	.-6      	; 0x1e4 <ADC_init+0x62>
     1ea:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <__data_end+0x1>
     1f4:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <__data_end>
     1f8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     1fc:	20 91 dc 02 	lds	r18, 0x02DC	; 0x8002dc <__data_end>
     200:	30 91 dd 02 	lds	r19, 0x02DD	; 0x8002dd <__data_end+0x1>
     204:	89 2f       	mov	r24, r25
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	98 2f       	mov	r25, r24
     20a:	88 27       	eor	r24, r24
     20c:	82 0f       	add	r24, r18
     20e:	93 1f       	adc	r25, r19
     210:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <__data_end+0x1>
     214:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <__data_end>
     218:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <__data_end>
     21c:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <__data_end+0x1>
     220:	99 23       	and	r25, r25
     222:	1c f4       	brge	.+6      	; 0x22a <ADC_init+0xa8>
     224:	91 95       	neg	r25
     226:	81 95       	neg	r24
     228:	91 09       	sbc	r25, r1
     22a:	05 97       	sbiw	r24, 0x05	; 5
     22c:	2c f0       	brlt	.+10     	; 0x238 <ADC_init+0xb6>
     22e:	80 91 cc 04 	lds	r24, 0x04CC	; 0x8004cc <gas_sensor_initialization_errors>
     232:	81 60       	ori	r24, 0x01	; 1
     234:	80 93 cc 04 	sts	0x04CC, r24	; 0x8004cc <gas_sensor_initialization_errors>
     238:	8e e1       	ldi	r24, 0x1E	; 30
     23a:	9a df       	rcall	.-204    	; 0x170 <ADC_SetMux>
     23c:	ea e7       	ldi	r30, 0x7A	; 122
     23e:	f0 e0       	ldi	r31, 0x00	; 0
     240:	80 81       	ld	r24, Z
     242:	80 64       	ori	r24, 0x40	; 64
     244:	80 83       	st	Z, r24
     246:	80 81       	ld	r24, Z
     248:	84 ff       	sbrs	r24, 4
     24a:	fd cf       	rjmp	.-6      	; 0x246 <ADC_init+0xc4>
     24c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <__data_end+0x1>
     256:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <__data_end>
     25a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     25e:	20 91 dc 02 	lds	r18, 0x02DC	; 0x8002dc <__data_end>
     262:	30 91 dd 02 	lds	r19, 0x02DD	; 0x8002dd <__data_end+0x1>
     266:	89 2f       	mov	r24, r25
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	98 2f       	mov	r25, r24
     26c:	88 27       	eor	r24, r24
     26e:	82 0f       	add	r24, r18
     270:	93 1f       	adc	r25, r19
     272:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <__data_end+0x1>
     276:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <__data_end>
     27a:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <__data_end>
     27e:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <__data_end+0x1>
     282:	81 5e       	subi	r24, 0xE1	; 225
     284:	91 09       	sbc	r25, r1
     286:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <__data_end+0x1>
     28a:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <__data_end>
     28e:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <__data_end>
     292:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <__data_end+0x1>
     296:	99 23       	and	r25, r25
     298:	1c f4       	brge	.+6      	; 0x2a0 <ADC_init+0x11e>
     29a:	91 95       	neg	r25
     29c:	81 95       	neg	r24
     29e:	91 09       	sbc	r25, r1
     2a0:	05 97       	sbiw	r24, 0x05	; 5
     2a2:	2c f0       	brlt	.+10     	; 0x2ae <ADC_init+0x12c>
     2a4:	80 91 cc 04 	lds	r24, 0x04CC	; 0x8004cc <gas_sensor_initialization_errors>
     2a8:	82 60       	ori	r24, 0x02	; 2
     2aa:	80 93 cc 04 	sts	0x04CC, r24	; 0x8004cc <gas_sensor_initialization_errors>
     2ae:	ea e7       	ldi	r30, 0x7A	; 122
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	8f 77       	andi	r24, 0x7F	; 127
     2b6:	80 83       	st	Z, r24
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <BME_read_correction_coefficients>:
     2be:	ff 92       	push	r15
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     2cc:	88 23       	and	r24, r24
     2ce:	59 f1       	breq	.+86     	; 0x326 <BME_read_correction_coefficients+0x68>
     2d0:	c5 e1       	ldi	r28, 0x15	; 21
     2d2:	d4 e0       	ldi	r29, 0x04	; 4
     2d4:	0f 2e       	mov	r0, r31
     2d6:	fc ee       	ldi	r31, 0xEC	; 236
     2d8:	ff 2e       	mov	r15, r31
     2da:	f0 2d       	mov	r31, r0
     2dc:	03 ef       	ldi	r16, 0xF3	; 243
     2de:	1d ee       	ldi	r17, 0xED	; 237
     2e0:	f8 82       	st	Y, r15
     2e2:	09 83       	std	Y+1, r16	; 0x01
     2e4:	62 e0       	ldi	r22, 0x02	; 2
     2e6:	ce 01       	movw	r24, r28
     2e8:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     2ec:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     2f0:	81 11       	cpse	r24, r1
     2f2:	fc cf       	rjmp	.-8      	; 0x2ec <BME_read_correction_coefficients+0x2e>
     2f4:	18 83       	st	Y, r17
     2f6:	6a e1       	ldi	r22, 0x1A	; 26
     2f8:	ce 01       	movw	r24, r28
     2fa:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     2fe:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     302:	81 11       	cpse	r24, r1
     304:	fc cf       	rjmp	.-8      	; 0x2fe <BME_read_correction_coefficients+0x40>
     306:	6a e1       	ldi	r22, 0x1A	; 26
     308:	ce 01       	movw	r24, r28
     30a:	0e 94 ba 0c 	call	0x1974	; 0x1974 <TWI_Get_Data_From_Transceiver>
     30e:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <TWI_XFER_STATUS>
     312:	89 81       	ldd	r24, Y+1	; 0x01
     314:	83 fb       	bst	r24, 3
     316:	88 27       	eor	r24, r24
     318:	80 f9       	bld	r24, 0
     31a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     31e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     322:	81 11       	cpse	r24, r1
     324:	dd cf       	rjmp	.-70     	; 0x2e0 <BME_read_correction_coefficients+0x22>
     326:	e5 e1       	ldi	r30, 0x15	; 21
     328:	f4 e0       	ldi	r31, 0x04	; 4
     32a:	8c ee       	ldi	r24, 0xEC	; 236
     32c:	80 83       	st	Z, r24
     32e:	88 e8       	ldi	r24, 0x88	; 136
     330:	81 83       	std	Z+1, r24	; 0x01
     332:	62 e0       	ldi	r22, 0x02	; 2
     334:	cf 01       	movw	r24, r30
     336:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     33a:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     33e:	81 11       	cpse	r24, r1
     340:	fc cf       	rjmp	.-8      	; 0x33a <BME_read_correction_coefficients+0x7c>
     342:	8d ee       	ldi	r24, 0xED	; 237
     344:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <BMEmessageBuf>
     348:	6b e1       	ldi	r22, 0x1B	; 27
     34a:	85 e1       	ldi	r24, 0x15	; 21
     34c:	94 e0       	ldi	r25, 0x04	; 4
     34e:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     352:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     356:	81 11       	cpse	r24, r1
     358:	fc cf       	rjmp	.-8      	; 0x352 <BME_read_correction_coefficients+0x94>
     35a:	6b e1       	ldi	r22, 0x1B	; 27
     35c:	85 e1       	ldi	r24, 0x15	; 21
     35e:	94 e0       	ldi	r25, 0x04	; 4
     360:	0e 94 ba 0c 	call	0x1974	; 0x1974 <TWI_Get_Data_From_Transceiver>
     364:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <TWI_XFER_STATUS>
     368:	c6 e1       	ldi	r28, 0x16	; 22
     36a:	d4 e0       	ldi	r29, 0x04	; 4
     36c:	01 e4       	ldi	r16, 0x41	; 65
     36e:	14 e0       	ldi	r17, 0x04	; 4
     370:	21 e3       	ldi	r18, 0x31	; 49
     372:	34 e0       	ldi	r19, 0x04	; 4
     374:	d8 01       	movw	r26, r16
     376:	fe 01       	movw	r30, r28
     378:	81 91       	ld	r24, Z+
     37a:	8d 93       	st	X+, r24
     37c:	e2 17       	cp	r30, r18
     37e:	f3 07       	cpc	r31, r19
     380:	d9 f7       	brne	.-10     	; 0x378 <BME_read_correction_coefficients+0xba>
     382:	8b e1       	ldi	r24, 0x1B	; 27
     384:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <i.2323>
     388:	e1 e4       	ldi	r30, 0x41	; 65
     38a:	f4 e0       	ldi	r31, 0x04	; 4
     38c:	81 81       	ldd	r24, Z+1	; 0x01
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	98 2f       	mov	r25, r24
     392:	88 27       	eor	r24, r24
     394:	20 81       	ld	r18, Z
     396:	82 2b       	or	r24, r18
     398:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <dig_T1+0x1>
     39c:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <dig_T1>
     3a0:	83 81       	ldd	r24, Z+3	; 0x03
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	98 2f       	mov	r25, r24
     3a6:	88 27       	eor	r24, r24
     3a8:	22 81       	ldd	r18, Z+2	; 0x02
     3aa:	82 2b       	or	r24, r18
     3ac:	90 93 40 04 	sts	0x0440, r25	; 0x800440 <dig_T2+0x1>
     3b0:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <dig_T2>
     3b4:	85 81       	ldd	r24, Z+5	; 0x05
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	98 2f       	mov	r25, r24
     3ba:	88 27       	eor	r24, r24
     3bc:	24 81       	ldd	r18, Z+4	; 0x04
     3be:	82 2b       	or	r24, r18
     3c0:	90 93 e0 04 	sts	0x04E0, r25	; 0x8004e0 <dig_T3+0x1>
     3c4:	80 93 df 04 	sts	0x04DF, r24	; 0x8004df <dig_T3>
     3c8:	87 81       	ldd	r24, Z+7	; 0x07
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	98 2f       	mov	r25, r24
     3ce:	88 27       	eor	r24, r24
     3d0:	26 81       	ldd	r18, Z+6	; 0x06
     3d2:	82 2b       	or	r24, r18
     3d4:	90 93 ce 04 	sts	0x04CE, r25	; 0x8004ce <dig_P1+0x1>
     3d8:	80 93 cd 04 	sts	0x04CD, r24	; 0x8004cd <dig_P1>
     3dc:	81 85       	ldd	r24, Z+9	; 0x09
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	98 2f       	mov	r25, r24
     3e2:	88 27       	eor	r24, r24
     3e4:	20 85       	ldd	r18, Z+8	; 0x08
     3e6:	82 2b       	or	r24, r18
     3e8:	90 93 87 04 	sts	0x0487, r25	; 0x800487 <dig_P2+0x1>
     3ec:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <dig_P2>
     3f0:	83 85       	ldd	r24, Z+11	; 0x0b
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	98 2f       	mov	r25, r24
     3f6:	88 27       	eor	r24, r24
     3f8:	22 85       	ldd	r18, Z+10	; 0x0a
     3fa:	82 2b       	or	r24, r18
     3fc:	90 93 d0 04 	sts	0x04D0, r25	; 0x8004d0 <dig_P3+0x1>
     400:	80 93 cf 04 	sts	0x04CF, r24	; 0x8004cf <dig_P3>
     404:	85 85       	ldd	r24, Z+13	; 0x0d
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	98 2f       	mov	r25, r24
     40a:	88 27       	eor	r24, r24
     40c:	24 85       	ldd	r18, Z+12	; 0x0c
     40e:	82 2b       	or	r24, r18
     410:	90 93 89 04 	sts	0x0489, r25	; 0x800489 <dig_P4+0x1>
     414:	80 93 88 04 	sts	0x0488, r24	; 0x800488 <dig_P4>
     418:	87 85       	ldd	r24, Z+15	; 0x0f
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	98 2f       	mov	r25, r24
     41e:	88 27       	eor	r24, r24
     420:	26 85       	ldd	r18, Z+14	; 0x0e
     422:	82 2b       	or	r24, r18
     424:	90 93 a9 04 	sts	0x04A9, r25	; 0x8004a9 <dig_P5+0x1>
     428:	80 93 a8 04 	sts	0x04A8, r24	; 0x8004a8 <dig_P5>
     42c:	81 89       	ldd	r24, Z+17	; 0x11
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	98 2f       	mov	r25, r24
     432:	88 27       	eor	r24, r24
     434:	20 89       	ldd	r18, Z+16	; 0x10
     436:	82 2b       	or	r24, r18
     438:	90 93 e2 04 	sts	0x04E2, r25	; 0x8004e2 <dig_P6+0x1>
     43c:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <dig_P6>
     440:	83 89       	ldd	r24, Z+19	; 0x13
     442:	90 e0       	ldi	r25, 0x00	; 0
     444:	98 2f       	mov	r25, r24
     446:	88 27       	eor	r24, r24
     448:	22 89       	ldd	r18, Z+18	; 0x12
     44a:	82 2b       	or	r24, r18
     44c:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <dig_P7+0x1>
     450:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <dig_P7>
     454:	85 89       	ldd	r24, Z+21	; 0x15
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	98 2f       	mov	r25, r24
     45a:	88 27       	eor	r24, r24
     45c:	24 89       	ldd	r18, Z+20	; 0x14
     45e:	82 2b       	or	r24, r18
     460:	90 93 d2 04 	sts	0x04D2, r25	; 0x8004d2 <dig_P8+0x1>
     464:	80 93 d1 04 	sts	0x04D1, r24	; 0x8004d1 <dig_P8>
     468:	87 89       	ldd	r24, Z+23	; 0x17
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	98 2f       	mov	r25, r24
     46e:	88 27       	eor	r24, r24
     470:	26 89       	ldd	r18, Z+22	; 0x16
     472:	82 2b       	or	r24, r18
     474:	90 93 de 04 	sts	0x04DE, r25	; 0x8004de <dig_P9+0x1>
     478:	80 93 dd 04 	sts	0x04DD, r24	; 0x8004dd <dig_P9>
     47c:	81 8d       	ldd	r24, Z+25	; 0x19
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	90 93 70 04 	sts	0x0470, r25	; 0x800470 <dig_H1+0x1>
     484:	80 93 6f 04 	sts	0x046F, r24	; 0x80046f <dig_H1>
     488:	e5 e1       	ldi	r30, 0x15	; 21
     48a:	f4 e0       	ldi	r31, 0x04	; 4
     48c:	8c ee       	ldi	r24, 0xEC	; 236
     48e:	80 83       	st	Z, r24
     490:	81 ee       	ldi	r24, 0xE1	; 225
     492:	81 83       	std	Z+1, r24	; 0x01
     494:	62 e0       	ldi	r22, 0x02	; 2
     496:	cf 01       	movw	r24, r30
     498:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     49c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     4a0:	81 11       	cpse	r24, r1
     4a2:	fc cf       	rjmp	.-8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     4a4:	8d ee       	ldi	r24, 0xED	; 237
     4a6:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <BMEmessageBuf>
     4aa:	68 e0       	ldi	r22, 0x08	; 8
     4ac:	85 e1       	ldi	r24, 0x15	; 21
     4ae:	94 e0       	ldi	r25, 0x04	; 4
     4b0:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     4b4:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     4b8:	81 11       	cpse	r24, r1
     4ba:	fc cf       	rjmp	.-8      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     4bc:	68 e0       	ldi	r22, 0x08	; 8
     4be:	85 e1       	ldi	r24, 0x15	; 21
     4c0:	94 e0       	ldi	r25, 0x04	; 4
     4c2:	0e 94 ba 0c 	call	0x1974	; 0x1974 <TWI_Get_Data_From_Transceiver>
     4c6:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <TWI_XFER_STATUS>
     4ca:	2d e1       	ldi	r18, 0x1D	; 29
     4cc:	34 e0       	ldi	r19, 0x04	; 4
     4ce:	89 91       	ld	r24, Y+
     4d0:	f8 01       	movw	r30, r16
     4d2:	81 93       	st	Z+, r24
     4d4:	8f 01       	movw	r16, r30
     4d6:	c2 17       	cp	r28, r18
     4d8:	d3 07       	cpc	r29, r19
     4da:	c9 f7       	brne	.-14     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4dc:	87 e0       	ldi	r24, 0x07	; 7
     4de:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <i.2323>
     4e2:	e1 e4       	ldi	r30, 0x41	; 65
     4e4:	f4 e0       	ldi	r31, 0x04	; 4
     4e6:	82 81       	ldd	r24, Z+2	; 0x02
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	98 2f       	mov	r25, r24
     4ec:	88 27       	eor	r24, r24
     4ee:	21 81       	ldd	r18, Z+1	; 0x01
     4f0:	82 2b       	or	r24, r18
     4f2:	90 93 e4 04 	sts	0x04E4, r25	; 0x8004e4 <dig_H2+0x1>
     4f6:	80 93 e3 04 	sts	0x04E3, r24	; 0x8004e3 <dig_H2>
     4fa:	83 81       	ldd	r24, Z+3	; 0x03
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	90 93 d8 04 	sts	0x04D8, r25	; 0x8004d8 <dig_H3+0x1>
     502:	80 93 d7 04 	sts	0x04D7, r24	; 0x8004d7 <dig_H3>
     506:	85 81       	ldd	r24, Z+5	; 0x05
     508:	82 95       	swap	r24
     50a:	86 95       	lsr	r24
     50c:	87 70       	andi	r24, 0x07	; 7
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	24 81       	ldd	r18, Z+4	; 0x04
     512:	40 e1       	ldi	r20, 0x10	; 16
     514:	24 9f       	mul	r18, r20
     516:	90 01       	movw	r18, r0
     518:	11 24       	eor	r1, r1
     51a:	28 2b       	or	r18, r24
     51c:	39 2b       	or	r19, r25
     51e:	30 93 3e 04 	sts	0x043E, r19	; 0x80043e <dig_H4+0x1>
     522:	20 93 3d 04 	sts	0x043D, r18	; 0x80043d <dig_H4>
     526:	26 81       	ldd	r18, Z+6	; 0x06
     528:	40 e1       	ldi	r20, 0x10	; 16
     52a:	24 9f       	mul	r18, r20
     52c:	90 01       	movw	r18, r0
     52e:	11 24       	eor	r1, r1
     530:	82 2b       	or	r24, r18
     532:	93 2b       	or	r25, r19
     534:	90 93 d5 04 	sts	0x04D5, r25	; 0x8004d5 <dig_H5+0x1>
     538:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <dig_H5>
     53c:	87 81       	ldd	r24, Z+7	; 0x07
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	90 93 96 04 	sts	0x0496, r25	; 0x800496 <dig_H6+0x1>
     544:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <dig_H6>
     548:	df 91       	pop	r29
     54a:	cf 91       	pop	r28
     54c:	1f 91       	pop	r17
     54e:	0f 91       	pop	r16
     550:	ff 90       	pop	r15
     552:	08 95       	ret

00000554 <bme280basic_init>:
     554:	e5 e1       	ldi	r30, 0x15	; 21
     556:	f4 e0       	ldi	r31, 0x04	; 4
     558:	8c ee       	ldi	r24, 0xEC	; 236
     55a:	80 83       	st	Z, r24
     55c:	80 ee       	ldi	r24, 0xE0	; 224
     55e:	81 83       	std	Z+1, r24	; 0x01
     560:	86 eb       	ldi	r24, 0xB6	; 182
     562:	82 83       	std	Z+2, r24	; 0x02
     564:	63 e0       	ldi	r22, 0x03	; 3
     566:	cf 01       	movw	r24, r30
     568:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     56c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     570:	81 11       	cpse	r24, r1
     572:	fc cf       	rjmp	.-8      	; 0x56c <bme280basic_init+0x18>
     574:	e5 e1       	ldi	r30, 0x15	; 21
     576:	f4 e0       	ldi	r31, 0x04	; 4
     578:	8c ee       	ldi	r24, 0xEC	; 236
     57a:	80 83       	st	Z, r24
     57c:	80 ed       	ldi	r24, 0xD0	; 208
     57e:	81 83       	std	Z+1, r24	; 0x01
     580:	62 e0       	ldi	r22, 0x02	; 2
     582:	cf 01       	movw	r24, r30
     584:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     588:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     58c:	81 11       	cpse	r24, r1
     58e:	fc cf       	rjmp	.-8      	; 0x588 <bme280basic_init+0x34>
     590:	8d ee       	ldi	r24, 0xED	; 237
     592:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <BMEmessageBuf>
     596:	62 e0       	ldi	r22, 0x02	; 2
     598:	85 e1       	ldi	r24, 0x15	; 21
     59a:	94 e0       	ldi	r25, 0x04	; 4
     59c:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     5a0:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     5a4:	81 11       	cpse	r24, r1
     5a6:	fc cf       	rjmp	.-8      	; 0x5a0 <bme280basic_init+0x4c>
     5a8:	62 e0       	ldi	r22, 0x02	; 2
     5aa:	85 e1       	ldi	r24, 0x15	; 21
     5ac:	94 e0       	ldi	r25, 0x04	; 4
     5ae:	0e 94 ba 0c 	call	0x1974	; 0x1974 <TWI_Get_Data_From_Transceiver>
     5b2:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <TWI_XFER_STATUS>
     5b6:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <BMEmessageBuf+0x1>
     5ba:	80 36       	cpi	r24, 0x60	; 96
     5bc:	99 f5       	brne	.+102    	; 0x624 <bme280basic_init+0xd0>
     5be:	e5 e1       	ldi	r30, 0x15	; 21
     5c0:	f4 e0       	ldi	r31, 0x04	; 4
     5c2:	8c ee       	ldi	r24, 0xEC	; 236
     5c4:	80 83       	st	Z, r24
     5c6:	82 ef       	ldi	r24, 0xF2	; 242
     5c8:	81 83       	std	Z+1, r24	; 0x01
     5ca:	81 e0       	ldi	r24, 0x01	; 1
     5cc:	82 83       	std	Z+2, r24	; 0x02
     5ce:	63 e0       	ldi	r22, 0x03	; 3
     5d0:	cf 01       	movw	r24, r30
     5d2:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     5d6:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     5da:	81 11       	cpse	r24, r1
     5dc:	fc cf       	rjmp	.-8      	; 0x5d6 <bme280basic_init+0x82>
     5de:	e5 e1       	ldi	r30, 0x15	; 21
     5e0:	f4 e0       	ldi	r31, 0x04	; 4
     5e2:	8c ee       	ldi	r24, 0xEC	; 236
     5e4:	80 83       	st	Z, r24
     5e6:	85 ef       	ldi	r24, 0xF5	; 245
     5e8:	81 83       	std	Z+1, r24	; 0x01
     5ea:	80 e1       	ldi	r24, 0x10	; 16
     5ec:	82 83       	std	Z+2, r24	; 0x02
     5ee:	63 e0       	ldi	r22, 0x03	; 3
     5f0:	cf 01       	movw	r24, r30
     5f2:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     5f6:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     5fa:	81 11       	cpse	r24, r1
     5fc:	fc cf       	rjmp	.-8      	; 0x5f6 <bme280basic_init+0xa2>
     5fe:	5f de       	rcall	.-834    	; 0x2be <BME_read_correction_coefficients>
     600:	81 e3       	ldi	r24, 0x31	; 49
     602:	80 93 8a 04 	sts	0x048A, r24	; 0x80048a <BMEtriggerbyte>
     606:	e5 e1       	ldi	r30, 0x15	; 21
     608:	f4 e0       	ldi	r31, 0x04	; 4
     60a:	9c ee       	ldi	r25, 0xEC	; 236
     60c:	90 83       	st	Z, r25
     60e:	94 ef       	ldi	r25, 0xF4	; 244
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	82 83       	std	Z+2, r24	; 0x02
     614:	63 e0       	ldi	r22, 0x03	; 3
     616:	cf 01       	movw	r24, r30
     618:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     61c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     620:	81 11       	cpse	r24, r1
     622:	fc cf       	rjmp	.-8      	; 0x61c <bme280basic_init+0xc8>
     624:	08 95       	ret

00000626 <bme280basic_bulk_data_read>:
     626:	ff 92       	push	r15
     628:	0f 93       	push	r16
     62a:	1f 93       	push	r17
     62c:	cf 93       	push	r28
     62e:	df 93       	push	r29
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <BMEbusy.2377>
     636:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <BMEbusy.2377>
     63a:	88 23       	and	r24, r24
     63c:	59 f1       	breq	.+86     	; 0x694 <bme280basic_bulk_data_read+0x6e>
     63e:	c5 e1       	ldi	r28, 0x15	; 21
     640:	d4 e0       	ldi	r29, 0x04	; 4
     642:	0f 2e       	mov	r0, r31
     644:	fc ee       	ldi	r31, 0xEC	; 236
     646:	ff 2e       	mov	r15, r31
     648:	f0 2d       	mov	r31, r0
     64a:	03 ef       	ldi	r16, 0xF3	; 243
     64c:	1d ee       	ldi	r17, 0xED	; 237
     64e:	f8 82       	st	Y, r15
     650:	09 83       	std	Y+1, r16	; 0x01
     652:	62 e0       	ldi	r22, 0x02	; 2
     654:	ce 01       	movw	r24, r28
     656:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     65a:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     65e:	81 11       	cpse	r24, r1
     660:	fc cf       	rjmp	.-8      	; 0x65a <bme280basic_bulk_data_read+0x34>
     662:	18 83       	st	Y, r17
     664:	62 e0       	ldi	r22, 0x02	; 2
     666:	ce 01       	movw	r24, r28
     668:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     66c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     670:	81 11       	cpse	r24, r1
     672:	fc cf       	rjmp	.-8      	; 0x66c <bme280basic_bulk_data_read+0x46>
     674:	62 e0       	ldi	r22, 0x02	; 2
     676:	ce 01       	movw	r24, r28
     678:	0e 94 ba 0c 	call	0x1974	; 0x1974 <TWI_Get_Data_From_Transceiver>
     67c:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <TWI_XFER_STATUS>
     680:	89 81       	ldd	r24, Y+1	; 0x01
     682:	83 fb       	bst	r24, 3
     684:	88 27       	eor	r24, r24
     686:	80 f9       	bld	r24, 0
     688:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <BMEbusy.2377>
     68c:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <BMEbusy.2377>
     690:	81 11       	cpse	r24, r1
     692:	dd cf       	rjmp	.-70     	; 0x64e <bme280basic_bulk_data_read+0x28>
     694:	e5 e1       	ldi	r30, 0x15	; 21
     696:	f4 e0       	ldi	r31, 0x04	; 4
     698:	8c ee       	ldi	r24, 0xEC	; 236
     69a:	80 83       	st	Z, r24
     69c:	87 ef       	ldi	r24, 0xF7	; 247
     69e:	81 83       	std	Z+1, r24	; 0x01
     6a0:	62 e0       	ldi	r22, 0x02	; 2
     6a2:	cf 01       	movw	r24, r30
     6a4:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     6a8:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     6ac:	81 11       	cpse	r24, r1
     6ae:	fc cf       	rjmp	.-8      	; 0x6a8 <bme280basic_bulk_data_read+0x82>
     6b0:	8d ee       	ldi	r24, 0xED	; 237
     6b2:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <BMEmessageBuf>
     6b6:	69 e0       	ldi	r22, 0x09	; 9
     6b8:	85 e1       	ldi	r24, 0x15	; 21
     6ba:	94 e0       	ldi	r25, 0x04	; 4
     6bc:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     6c0:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     6c4:	81 11       	cpse	r24, r1
     6c6:	fc cf       	rjmp	.-8      	; 0x6c0 <bme280basic_bulk_data_read+0x9a>
     6c8:	69 e0       	ldi	r22, 0x09	; 9
     6ca:	85 e1       	ldi	r24, 0x15	; 21
     6cc:	94 e0       	ldi	r25, 0x04	; 4
     6ce:	0e 94 ba 0c 	call	0x1974	; 0x1974 <TWI_Get_Data_From_Transceiver>
     6d2:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <TWI_XFER_STATUS>
     6d6:	e6 e1       	ldi	r30, 0x16	; 22
     6d8:	f4 e0       	ldi	r31, 0x04	; 4
     6da:	a1 e4       	ldi	r26, 0x41	; 65
     6dc:	b4 e0       	ldi	r27, 0x04	; 4
     6de:	2e e1       	ldi	r18, 0x1E	; 30
     6e0:	34 e0       	ldi	r19, 0x04	; 4
     6e2:	81 91       	ld	r24, Z+
     6e4:	8d 93       	st	X+, r24
     6e6:	e2 17       	cp	r30, r18
     6e8:	f3 07       	cpc	r31, r19
     6ea:	d9 f7       	brne	.-10     	; 0x6e2 <bme280basic_bulk_data_read+0xbc>
     6ec:	e1 e4       	ldi	r30, 0x41	; 65
     6ee:	f4 e0       	ldi	r31, 0x04	; 4
     6f0:	81 81       	ldd	r24, Z+1	; 0x01
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e0       	ldi	r27, 0x00	; 0
     6f8:	88 0f       	add	r24, r24
     6fa:	99 1f       	adc	r25, r25
     6fc:	aa 1f       	adc	r26, r26
     6fe:	bb 1f       	adc	r27, r27
     700:	88 0f       	add	r24, r24
     702:	99 1f       	adc	r25, r25
     704:	aa 1f       	adc	r26, r26
     706:	bb 1f       	adc	r27, r27
     708:	88 0f       	add	r24, r24
     70a:	99 1f       	adc	r25, r25
     70c:	aa 1f       	adc	r26, r26
     70e:	bb 1f       	adc	r27, r27
     710:	88 0f       	add	r24, r24
     712:	99 1f       	adc	r25, r25
     714:	aa 1f       	adc	r26, r26
     716:	bb 1f       	adc	r27, r27
     718:	40 81       	ld	r20, Z
     71a:	50 e0       	ldi	r21, 0x00	; 0
     71c:	60 e0       	ldi	r22, 0x00	; 0
     71e:	70 e0       	ldi	r23, 0x00	; 0
     720:	03 2e       	mov	r0, r19
     722:	3c e0       	ldi	r19, 0x0C	; 12
     724:	44 0f       	add	r20, r20
     726:	55 1f       	adc	r21, r21
     728:	66 1f       	adc	r22, r22
     72a:	77 1f       	adc	r23, r23
     72c:	3a 95       	dec	r19
     72e:	d1 f7       	brne	.-12     	; 0x724 <bme280basic_bulk_data_read+0xfe>
     730:	30 2d       	mov	r19, r0
     732:	84 2b       	or	r24, r20
     734:	95 2b       	or	r25, r21
     736:	a6 2b       	or	r26, r22
     738:	b7 2b       	or	r27, r23
     73a:	22 81       	ldd	r18, Z+2	; 0x02
     73c:	22 95       	swap	r18
     73e:	2f 70       	andi	r18, 0x0F	; 15
     740:	82 2b       	or	r24, r18
     742:	80 93 aa 04 	sts	0x04AA, r24	; 0x8004aa <rawPress>
     746:	90 93 ab 04 	sts	0x04AB, r25	; 0x8004ab <rawPress+0x1>
     74a:	a0 93 ac 04 	sts	0x04AC, r26	; 0x8004ac <rawPress+0x2>
     74e:	b0 93 ad 04 	sts	0x04AD, r27	; 0x8004ad <rawPress+0x3>
     752:	84 81       	ldd	r24, Z+4	; 0x04
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	a0 e0       	ldi	r26, 0x00	; 0
     758:	b0 e0       	ldi	r27, 0x00	; 0
     75a:	88 0f       	add	r24, r24
     75c:	99 1f       	adc	r25, r25
     75e:	aa 1f       	adc	r26, r26
     760:	bb 1f       	adc	r27, r27
     762:	88 0f       	add	r24, r24
     764:	99 1f       	adc	r25, r25
     766:	aa 1f       	adc	r26, r26
     768:	bb 1f       	adc	r27, r27
     76a:	88 0f       	add	r24, r24
     76c:	99 1f       	adc	r25, r25
     76e:	aa 1f       	adc	r26, r26
     770:	bb 1f       	adc	r27, r27
     772:	88 0f       	add	r24, r24
     774:	99 1f       	adc	r25, r25
     776:	aa 1f       	adc	r26, r26
     778:	bb 1f       	adc	r27, r27
     77a:	43 81       	ldd	r20, Z+3	; 0x03
     77c:	50 e0       	ldi	r21, 0x00	; 0
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	03 2e       	mov	r0, r19
     784:	3c e0       	ldi	r19, 0x0C	; 12
     786:	44 0f       	add	r20, r20
     788:	55 1f       	adc	r21, r21
     78a:	66 1f       	adc	r22, r22
     78c:	77 1f       	adc	r23, r23
     78e:	3a 95       	dec	r19
     790:	d1 f7       	brne	.-12     	; 0x786 <bme280basic_bulk_data_read+0x160>
     792:	30 2d       	mov	r19, r0
     794:	84 2b       	or	r24, r20
     796:	95 2b       	or	r25, r21
     798:	a6 2b       	or	r26, r22
     79a:	b7 2b       	or	r27, r23
     79c:	25 81       	ldd	r18, Z+5	; 0x05
     79e:	22 95       	swap	r18
     7a0:	2f 70       	andi	r18, 0x0F	; 15
     7a2:	82 2b       	or	r24, r18
     7a4:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <rawTemp>
     7a8:	90 93 73 04 	sts	0x0473, r25	; 0x800473 <rawTemp+0x1>
     7ac:	a0 93 74 04 	sts	0x0474, r26	; 0x800474 <rawTemp+0x2>
     7b0:	b0 93 75 04 	sts	0x0475, r27	; 0x800475 <rawTemp+0x3>
     7b4:	86 81       	ldd	r24, Z+6	; 0x06
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	a0 e0       	ldi	r26, 0x00	; 0
     7ba:	b0 e0       	ldi	r27, 0x00	; 0
     7bc:	ba 2f       	mov	r27, r26
     7be:	a9 2f       	mov	r26, r25
     7c0:	98 2f       	mov	r25, r24
     7c2:	88 27       	eor	r24, r24
     7c4:	27 81       	ldd	r18, Z+7	; 0x07
     7c6:	82 2b       	or	r24, r18
     7c8:	80 93 ae 04 	sts	0x04AE, r24	; 0x8004ae <rawHum>
     7cc:	90 93 af 04 	sts	0x04AF, r25	; 0x8004af <rawHum+0x1>
     7d0:	a0 93 b0 04 	sts	0x04B0, r26	; 0x8004b0 <rawHum+0x2>
     7d4:	b0 93 b1 04 	sts	0x04B1, r27	; 0x8004b1 <rawHum+0x3>
     7d8:	e5 e1       	ldi	r30, 0x15	; 21
     7da:	f4 e0       	ldi	r31, 0x04	; 4
     7dc:	8c ee       	ldi	r24, 0xEC	; 236
     7de:	80 83       	st	Z, r24
     7e0:	84 ef       	ldi	r24, 0xF4	; 244
     7e2:	81 83       	std	Z+1, r24	; 0x01
     7e4:	81 e3       	ldi	r24, 0x31	; 49
     7e6:	82 83       	std	Z+2, r24	; 0x02
     7e8:	63 e0       	ldi	r22, 0x03	; 3
     7ea:	cf 01       	movw	r24, r30
     7ec:	0e 94 8e 0c 	call	0x191c	; 0x191c <TWI_Start_Transceiver_With_Data>
     7f0:	0e 94 8a 0c 	call	0x1914	; 0x1914 <TWI_Transceiver_Busy>
     7f4:	81 11       	cpse	r24, r1
     7f6:	fc cf       	rjmp	.-8      	; 0x7f0 <bme280basic_bulk_data_read+0x1ca>
     7f8:	df 91       	pop	r29
     7fa:	cf 91       	pop	r28
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	08 95       	ret

00000804 <BME280_compensate_T_int32>:
     804:	8f 92       	push	r8
     806:	9f 92       	push	r9
     808:	af 92       	push	r10
     80a:	bf 92       	push	r11
     80c:	cf 92       	push	r12
     80e:	df 92       	push	r13
     810:	ef 92       	push	r14
     812:	ff 92       	push	r15
     814:	20 91 13 04 	lds	r18, 0x0413	; 0x800413 <dig_T1>
     818:	30 91 14 04 	lds	r19, 0x0414	; 0x800414 <dig_T1+0x1>
     81c:	6b 01       	movw	r12, r22
     81e:	7c 01       	movw	r14, r24
     820:	68 94       	set
     822:	13 f8       	bld	r1, 3
     824:	f5 94       	asr	r15
     826:	e7 94       	ror	r14
     828:	d7 94       	ror	r13
     82a:	c7 94       	ror	r12
     82c:	16 94       	lsr	r1
     82e:	d1 f7       	brne	.-12     	; 0x824 <BME280_compensate_T_int32+0x20>
     830:	c2 1a       	sub	r12, r18
     832:	d3 0a       	sbc	r13, r19
     834:	e1 08       	sbc	r14, r1
     836:	f1 08       	sbc	r15, r1
     838:	dc 01       	movw	r26, r24
     83a:	cb 01       	movw	r24, r22
     83c:	68 94       	set
     83e:	12 f8       	bld	r1, 2
     840:	b5 95       	asr	r27
     842:	a7 95       	ror	r26
     844:	97 95       	ror	r25
     846:	87 95       	ror	r24
     848:	16 94       	lsr	r1
     84a:	d1 f7       	brne	.-12     	; 0x840 <BME280_compensate_T_int32+0x3c>
     84c:	22 0f       	add	r18, r18
     84e:	33 1f       	adc	r19, r19
     850:	4c 01       	movw	r8, r24
     852:	5d 01       	movw	r10, r26
     854:	82 1a       	sub	r8, r18
     856:	93 0a       	sbc	r9, r19
     858:	a1 08       	sbc	r10, r1
     85a:	b1 08       	sbc	r11, r1
     85c:	a5 01       	movw	r20, r10
     85e:	94 01       	movw	r18, r8
     860:	a0 91 3f 04 	lds	r26, 0x043F	; 0x80043f <dig_T2>
     864:	b0 91 40 04 	lds	r27, 0x0440	; 0x800440 <dig_T2+0x1>
     868:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <__mulshisi3>
     86c:	4b 01       	movw	r8, r22
     86e:	5c 01       	movw	r10, r24
     870:	07 2e       	mov	r0, r23
     872:	7b e0       	ldi	r23, 0x0B	; 11
     874:	b5 94       	asr	r11
     876:	a7 94       	ror	r10
     878:	97 94       	ror	r9
     87a:	87 94       	ror	r8
     87c:	7a 95       	dec	r23
     87e:	d1 f7       	brne	.-12     	; 0x874 <BME280_compensate_T_int32+0x70>
     880:	70 2d       	mov	r23, r0
     882:	a7 01       	movw	r20, r14
     884:	96 01       	movw	r18, r12
     886:	c7 01       	movw	r24, r14
     888:	b6 01       	movw	r22, r12
     88a:	0e 94 22 0e 	call	0x1c44	; 0x1c44 <__mulsi3>
     88e:	9b 01       	movw	r18, r22
     890:	ac 01       	movw	r20, r24
     892:	01 2e       	mov	r0, r17
     894:	1c e0       	ldi	r17, 0x0C	; 12
     896:	55 95       	asr	r21
     898:	47 95       	ror	r20
     89a:	37 95       	ror	r19
     89c:	27 95       	ror	r18
     89e:	1a 95       	dec	r17
     8a0:	d1 f7       	brne	.-12     	; 0x896 <BME280_compensate_T_int32+0x92>
     8a2:	10 2d       	mov	r17, r0
     8a4:	a0 91 df 04 	lds	r26, 0x04DF	; 0x8004df <dig_T3>
     8a8:	b0 91 e0 04 	lds	r27, 0x04E0	; 0x8004e0 <dig_T3+0x1>
     8ac:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <__mulshisi3>
     8b0:	dc 01       	movw	r26, r24
     8b2:	cb 01       	movw	r24, r22
     8b4:	07 2e       	mov	r0, r23
     8b6:	7e e0       	ldi	r23, 0x0E	; 14
     8b8:	b5 95       	asr	r27
     8ba:	a7 95       	ror	r26
     8bc:	97 95       	ror	r25
     8be:	87 95       	ror	r24
     8c0:	7a 95       	dec	r23
     8c2:	d1 f7       	brne	.-12     	; 0x8b8 <BME280_compensate_T_int32+0xb4>
     8c4:	70 2d       	mov	r23, r0
     8c6:	88 0d       	add	r24, r8
     8c8:	99 1d       	adc	r25, r9
     8ca:	aa 1d       	adc	r26, r10
     8cc:	bb 1d       	adc	r27, r11
     8ce:	80 93 e5 04 	sts	0x04E5, r24	; 0x8004e5 <t_fine>
     8d2:	90 93 e6 04 	sts	0x04E6, r25	; 0x8004e6 <t_fine+0x1>
     8d6:	a0 93 e7 04 	sts	0x04E7, r26	; 0x8004e7 <t_fine+0x2>
     8da:	b0 93 e8 04 	sts	0x04E8, r27	; 0x8004e8 <t_fine+0x3>
     8de:	6c 01       	movw	r12, r24
     8e0:	7d 01       	movw	r14, r26
     8e2:	cc 0c       	add	r12, r12
     8e4:	dd 1c       	adc	r13, r13
     8e6:	ee 1c       	adc	r14, r14
     8e8:	ff 1c       	adc	r15, r15
     8ea:	cc 0c       	add	r12, r12
     8ec:	dd 1c       	adc	r13, r13
     8ee:	ee 1c       	adc	r14, r14
     8f0:	ff 1c       	adc	r15, r15
     8f2:	8c 0d       	add	r24, r12
     8f4:	9d 1d       	adc	r25, r13
     8f6:	ae 1d       	adc	r26, r14
     8f8:	bf 1d       	adc	r27, r15
     8fa:	80 58       	subi	r24, 0x80	; 128
     8fc:	9f 4f       	sbci	r25, 0xFF	; 255
     8fe:	af 4f       	sbci	r26, 0xFF	; 255
     900:	bf 4f       	sbci	r27, 0xFF	; 255
     902:	69 2f       	mov	r22, r25
     904:	7a 2f       	mov	r23, r26
     906:	8b 2f       	mov	r24, r27
     908:	99 27       	eor	r25, r25
     90a:	87 fd       	sbrc	r24, 7
     90c:	9a 95       	dec	r25
     90e:	ff 90       	pop	r15
     910:	ef 90       	pop	r14
     912:	df 90       	pop	r13
     914:	cf 90       	pop	r12
     916:	bf 90       	pop	r11
     918:	af 90       	pop	r10
     91a:	9f 90       	pop	r9
     91c:	8f 90       	pop	r8
     91e:	08 95       	ret

00000920 <BME280_compensate_P_int64>:
     920:	2f 92       	push	r2
     922:	3f 92       	push	r3
     924:	4f 92       	push	r4
     926:	5f 92       	push	r5
     928:	6f 92       	push	r6
     92a:	7f 92       	push	r7
     92c:	8f 92       	push	r8
     92e:	9f 92       	push	r9
     930:	af 92       	push	r10
     932:	bf 92       	push	r11
     934:	cf 92       	push	r12
     936:	df 92       	push	r13
     938:	ef 92       	push	r14
     93a:	ff 92       	push	r15
     93c:	0f 93       	push	r16
     93e:	1f 93       	push	r17
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
     944:	cd b7       	in	r28, 0x3d	; 61
     946:	de b7       	in	r29, 0x3e	; 62
     948:	6e 97       	sbiw	r28, 0x1e	; 30
     94a:	0f b6       	in	r0, 0x3f	; 63
     94c:	f8 94       	cli
     94e:	de bf       	out	0x3e, r29	; 62
     950:	0f be       	out	0x3f, r0	; 63
     952:	cd bf       	out	0x3d, r28	; 61
     954:	6e 8b       	std	Y+22, r22	; 0x16
     956:	7f 8b       	std	Y+23, r23	; 0x17
     958:	88 8f       	std	Y+24, r24	; 0x18
     95a:	99 8f       	std	Y+25, r25	; 0x19
     95c:	80 91 e5 04 	lds	r24, 0x04E5	; 0x8004e5 <t_fine>
     960:	90 91 e6 04 	lds	r25, 0x04E6	; 0x8004e6 <t_fine+0x1>
     964:	a0 91 e7 04 	lds	r26, 0x04E7	; 0x8004e7 <t_fine+0x2>
     968:	b0 91 e8 04 	lds	r27, 0x04E8	; 0x8004e8 <t_fine+0x3>
     96c:	8c 01       	movw	r16, r24
     96e:	9d 01       	movw	r18, r26
     970:	14 5f       	subi	r17, 0xF4	; 244
     972:	21 40       	sbci	r18, 0x01	; 1
     974:	31 09       	sbc	r19, r1
     976:	09 83       	std	Y+1, r16	; 0x01
     978:	1a 83       	std	Y+2, r17	; 0x02
     97a:	2b 83       	std	Y+3, r18	; 0x03
     97c:	3c 83       	std	Y+4, r19	; 0x04
     97e:	33 0f       	add	r19, r19
     980:	00 0b       	sbc	r16, r16
     982:	10 2f       	mov	r17, r16
     984:	98 01       	movw	r18, r16
     986:	0d 83       	std	Y+5, r16	; 0x05
     988:	1e 83       	std	Y+6, r17	; 0x06
     98a:	2f 83       	std	Y+7, r18	; 0x07
     98c:	38 87       	std	Y+8, r19	; 0x08
     98e:	a9 80       	ldd	r10, Y+1	; 0x01
     990:	ba 80       	ldd	r11, Y+2	; 0x02
     992:	cb 80       	ldd	r12, Y+3	; 0x03
     994:	dc 80       	ldd	r13, Y+4	; 0x04
     996:	ed 80       	ldd	r14, Y+5	; 0x05
     998:	fe 2c       	mov	r15, r14
     99a:	0e 2d       	mov	r16, r14
     99c:	1e 2d       	mov	r17, r14
     99e:	2a 2d       	mov	r18, r10
     9a0:	3b 2d       	mov	r19, r11
     9a2:	4c 2d       	mov	r20, r12
     9a4:	5d 2d       	mov	r21, r13
     9a6:	60 2f       	mov	r22, r16
     9a8:	70 2f       	mov	r23, r16
     9aa:	80 2f       	mov	r24, r16
     9ac:	9e 2d       	mov	r25, r14
     9ae:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     9b2:	2d 87       	std	Y+13, r18	; 0x0d
     9b4:	3e 87       	std	Y+14, r19	; 0x0e
     9b6:	4f 87       	std	Y+15, r20	; 0x0f
     9b8:	58 8b       	std	Y+16, r21	; 0x10
     9ba:	69 8b       	std	Y+17, r22	; 0x11
     9bc:	7a 8b       	std	Y+18, r23	; 0x12
     9be:	8b 8b       	std	Y+19, r24	; 0x13
     9c0:	9c 8b       	std	Y+20, r25	; 0x14
     9c2:	10 91 e1 04 	lds	r17, 0x04E1	; 0x8004e1 <dig_P6>
     9c6:	1a 8f       	std	Y+26, r17	; 0x1a
     9c8:	20 91 e2 04 	lds	r18, 0x04E2	; 0x8004e2 <dig_P6+0x1>
     9cc:	2e 8f       	std	Y+30, r18	; 0x1e
     9ce:	30 91 a8 04 	lds	r19, 0x04A8	; 0x8004a8 <dig_P5>
     9d2:	3b 8f       	std	Y+27, r19	; 0x1b
     9d4:	40 91 a9 04 	lds	r20, 0x04A9	; 0x8004a9 <dig_P5+0x1>
     9d8:	4d 8f       	std	Y+29, r20	; 0x1d
     9da:	50 91 88 04 	lds	r21, 0x0488	; 0x800488 <dig_P4>
     9de:	5c 8f       	std	Y+28, r21	; 0x1c
     9e0:	80 91 89 04 	lds	r24, 0x0489	; 0x800489 <dig_P4+0x1>
     9e4:	8d 8b       	std	Y+21, r24	; 0x15
     9e6:	30 91 87 04 	lds	r19, 0x0487	; 0x800487 <dig_P2+0x1>
     9ea:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <dig_P2>
     9ee:	93 2f       	mov	r25, r19
     9f0:	99 0f       	add	r25, r25
     9f2:	99 0b       	sbc	r25, r25
     9f4:	fe 2c       	mov	r15, r14
     9f6:	0e 2d       	mov	r16, r14
     9f8:	1e 2d       	mov	r17, r14
     9fa:	49 2f       	mov	r20, r25
     9fc:	59 2f       	mov	r21, r25
     9fe:	69 2f       	mov	r22, r25
     a00:	79 2f       	mov	r23, r25
     a02:	89 2f       	mov	r24, r25
     a04:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     a08:	0c e0       	ldi	r16, 0x0C	; 12
     a0a:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     a0e:	42 2e       	mov	r4, r18
     a10:	53 2e       	mov	r5, r19
     a12:	64 2e       	mov	r6, r20
     a14:	75 2e       	mov	r7, r21
     a16:	86 2e       	mov	r8, r22
     a18:	97 2e       	mov	r9, r23
     a1a:	28 2e       	mov	r2, r24
     a1c:	39 2e       	mov	r3, r25
     a1e:	b0 90 d0 04 	lds	r11, 0x04D0	; 0x8004d0 <dig_P3+0x1>
     a22:	a0 90 cf 04 	lds	r10, 0x04CF	; 0x8004cf <dig_P3>
     a26:	1b 2d       	mov	r17, r11
     a28:	11 0f       	add	r17, r17
     a2a:	11 0b       	sbc	r17, r17
     a2c:	c1 2e       	mov	r12, r17
     a2e:	d1 2e       	mov	r13, r17
     a30:	e1 2e       	mov	r14, r17
     a32:	f1 2e       	mov	r15, r17
     a34:	01 2f       	mov	r16, r17
     a36:	2d 85       	ldd	r18, Y+13	; 0x0d
     a38:	3e 85       	ldd	r19, Y+14	; 0x0e
     a3a:	4f 85       	ldd	r20, Y+15	; 0x0f
     a3c:	58 89       	ldd	r21, Y+16	; 0x10
     a3e:	69 89       	ldd	r22, Y+17	; 0x11
     a40:	7a 89       	ldd	r23, Y+18	; 0x12
     a42:	8b 89       	ldd	r24, Y+19	; 0x13
     a44:	9c 89       	ldd	r25, Y+20	; 0x14
     a46:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     a4a:	08 e0       	ldi	r16, 0x08	; 8
     a4c:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__ashrdi3>
     a50:	a4 2c       	mov	r10, r4
     a52:	b5 2c       	mov	r11, r5
     a54:	c6 2c       	mov	r12, r6
     a56:	d7 2c       	mov	r13, r7
     a58:	e8 2c       	mov	r14, r8
     a5a:	f9 2c       	mov	r15, r9
     a5c:	02 2d       	mov	r16, r2
     a5e:	13 2d       	mov	r17, r3
     a60:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <__adddi3>
     a64:	70 58       	subi	r23, 0x80	; 128
     a66:	8f 4f       	sbci	r24, 0xFF	; 255
     a68:	9f 4f       	sbci	r25, 0xFF	; 255
     a6a:	20 90 cd 04 	lds	r2, 0x04CD	; 0x8004cd <dig_P1>
     a6e:	30 90 ce 04 	lds	r3, 0x04CE	; 0x8004ce <dig_P1+0x1>
     a72:	a2 2c       	mov	r10, r2
     a74:	b3 2c       	mov	r11, r3
     a76:	c1 2c       	mov	r12, r1
     a78:	d1 2c       	mov	r13, r1
     a7a:	e1 2c       	mov	r14, r1
     a7c:	f1 2c       	mov	r15, r1
     a7e:	00 e0       	ldi	r16, 0x00	; 0
     a80:	10 e0       	ldi	r17, 0x00	; 0
     a82:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     a86:	01 e2       	ldi	r16, 0x21	; 33
     a88:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__ashrdi3>
     a8c:	29 87       	std	Y+9, r18	; 0x09
     a8e:	3a 87       	std	Y+10, r19	; 0x0a
     a90:	4b 87       	std	Y+11, r20	; 0x0b
     a92:	45 2e       	mov	r4, r21
     a94:	56 2e       	mov	r5, r22
     a96:	7c 87       	std	Y+12, r23	; 0x0c
     a98:	38 2e       	mov	r3, r24
     a9a:	29 2e       	mov	r2, r25
     a9c:	65 2d       	mov	r22, r5
     a9e:	83 2d       	mov	r24, r3
     aa0:	92 2d       	mov	r25, r2
     aa2:	a0 e0       	ldi	r26, 0x00	; 0
     aa4:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__cmpdi2_s8>
     aa8:	09 f4       	brne	.+2      	; 0xaac <BME280_compensate_P_int64+0x18c>
     aaa:	87 c1       	rjmp	.+782    	; 0xdba <BME280_compensate_P_int64+0x49a>
     aac:	aa 8c       	ldd	r10, Y+26	; 0x1a
     aae:	1e 8d       	ldd	r17, Y+30	; 0x1e
     ab0:	11 0f       	add	r17, r17
     ab2:	11 0b       	sbc	r17, r17
     ab4:	be 8c       	ldd	r11, Y+30	; 0x1e
     ab6:	c1 2e       	mov	r12, r17
     ab8:	d1 2e       	mov	r13, r17
     aba:	e1 2e       	mov	r14, r17
     abc:	f1 2e       	mov	r15, r17
     abe:	01 2f       	mov	r16, r17
     ac0:	2d 85       	ldd	r18, Y+13	; 0x0d
     ac2:	3e 85       	ldd	r19, Y+14	; 0x0e
     ac4:	4f 85       	ldd	r20, Y+15	; 0x0f
     ac6:	58 89       	ldd	r21, Y+16	; 0x10
     ac8:	69 89       	ldd	r22, Y+17	; 0x11
     aca:	7a 89       	ldd	r23, Y+18	; 0x12
     acc:	8b 89       	ldd	r24, Y+19	; 0x13
     ace:	9c 89       	ldd	r25, Y+20	; 0x14
     ad0:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     ad4:	2d 87       	std	Y+13, r18	; 0x0d
     ad6:	3e 87       	std	Y+14, r19	; 0x0e
     ad8:	64 2e       	mov	r6, r20
     ada:	75 2e       	mov	r7, r21
     adc:	86 2e       	mov	r8, r22
     ade:	97 2e       	mov	r9, r23
     ae0:	88 8b       	std	Y+16, r24	; 0x10
     ae2:	9f 87       	std	Y+15, r25	; 0x0f
     ae4:	2b 8d       	ldd	r18, Y+27	; 0x1b
     ae6:	9d 8d       	ldd	r25, Y+29	; 0x1d
     ae8:	99 0f       	add	r25, r25
     aea:	99 0b       	sbc	r25, r25
     aec:	a9 80       	ldd	r10, Y+1	; 0x01
     aee:	ba 80       	ldd	r11, Y+2	; 0x02
     af0:	cb 80       	ldd	r12, Y+3	; 0x03
     af2:	dc 80       	ldd	r13, Y+4	; 0x04
     af4:	ed 80       	ldd	r14, Y+5	; 0x05
     af6:	fe 2c       	mov	r15, r14
     af8:	0e 2d       	mov	r16, r14
     afa:	1e 2d       	mov	r17, r14
     afc:	3d 8d       	ldd	r19, Y+29	; 0x1d
     afe:	49 2f       	mov	r20, r25
     b00:	59 2f       	mov	r21, r25
     b02:	69 2f       	mov	r22, r25
     b04:	79 2f       	mov	r23, r25
     b06:	89 2f       	mov	r24, r25
     b08:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     b0c:	01 e1       	ldi	r16, 0x11	; 17
     b0e:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     b12:	ad 84       	ldd	r10, Y+13	; 0x0d
     b14:	be 84       	ldd	r11, Y+14	; 0x0e
     b16:	c6 2c       	mov	r12, r6
     b18:	d7 2c       	mov	r13, r7
     b1a:	e8 2c       	mov	r14, r8
     b1c:	f9 2c       	mov	r15, r9
     b1e:	08 89       	ldd	r16, Y+16	; 0x10
     b20:	1f 85       	ldd	r17, Y+15	; 0x0f
     b22:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <__adddi3>
     b26:	a2 2e       	mov	r10, r18
     b28:	b3 2e       	mov	r11, r19
     b2a:	c4 2e       	mov	r12, r20
     b2c:	d5 2e       	mov	r13, r21
     b2e:	e6 2e       	mov	r14, r22
     b30:	f7 2e       	mov	r15, r23
     b32:	e8 2f       	mov	r30, r24
     b34:	19 2f       	mov	r17, r25
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	a0 e1       	ldi	r26, 0x10	; 16
     b3c:	b0 e0       	ldi	r27, 0x00	; 0
     b3e:	2e 89       	ldd	r18, Y+22	; 0x16
     b40:	3f 89       	ldd	r19, Y+23	; 0x17
     b42:	48 8d       	ldd	r20, Y+24	; 0x18
     b44:	59 8d       	ldd	r21, Y+25	; 0x19
     b46:	82 1b       	sub	r24, r18
     b48:	93 0b       	sbc	r25, r19
     b4a:	a4 0b       	sbc	r26, r20
     b4c:	b5 0b       	sbc	r27, r21
     b4e:	3c 01       	movw	r6, r24
     b50:	4d 01       	movw	r8, r26
     b52:	99 0c       	add	r9, r9
     b54:	66 08       	sbc	r6, r6
     b56:	76 2c       	mov	r7, r6
     b58:	43 01       	movw	r8, r6
     b5a:	28 2f       	mov	r18, r24
     b5c:	39 2f       	mov	r19, r25
     b5e:	4a 2f       	mov	r20, r26
     b60:	5b 2f       	mov	r21, r27
     b62:	66 2d       	mov	r22, r6
     b64:	76 2d       	mov	r23, r6
     b66:	86 2d       	mov	r24, r6
     b68:	96 2d       	mov	r25, r6
     b6a:	0f e1       	ldi	r16, 0x1F	; 31
     b6c:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     b70:	82 2e       	mov	r8, r18
     b72:	93 2e       	mov	r9, r19
     b74:	f4 2f       	mov	r31, r20
     b76:	75 2e       	mov	r7, r21
     b78:	b6 2f       	mov	r27, r22
     b7a:	a7 2f       	mov	r26, r23
     b7c:	68 2e       	mov	r6, r24
     b7e:	9d 83       	std	Y+5, r25	; 0x05
     b80:	2c 8d       	ldd	r18, Y+28	; 0x1c
     b82:	9d 89       	ldd	r25, Y+21	; 0x15
     b84:	99 0f       	add	r25, r25
     b86:	99 0b       	sbc	r25, r25
     b88:	3d 89       	ldd	r19, Y+21	; 0x15
     b8a:	49 2f       	mov	r20, r25
     b8c:	59 2f       	mov	r21, r25
     b8e:	69 2f       	mov	r22, r25
     b90:	79 2f       	mov	r23, r25
     b92:	89 2f       	mov	r24, r25
     b94:	03 e2       	ldi	r16, 0x23	; 35
     b96:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     b9a:	0e 2f       	mov	r16, r30
     b9c:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <__adddi3>
     ba0:	a2 2e       	mov	r10, r18
     ba2:	b3 2e       	mov	r11, r19
     ba4:	c4 2e       	mov	r12, r20
     ba6:	d5 2e       	mov	r13, r21
     ba8:	e6 2e       	mov	r14, r22
     baa:	f7 2e       	mov	r15, r23
     bac:	08 2f       	mov	r16, r24
     bae:	19 2f       	mov	r17, r25
     bb0:	28 2d       	mov	r18, r8
     bb2:	39 2d       	mov	r19, r9
     bb4:	4f 2f       	mov	r20, r31
     bb6:	57 2d       	mov	r21, r7
     bb8:	6b 2f       	mov	r22, r27
     bba:	7a 2f       	mov	r23, r26
     bbc:	86 2d       	mov	r24, r6
     bbe:	9d 81       	ldd	r25, Y+5	; 0x05
     bc0:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     bc4:	82 2e       	mov	r8, r18
     bc6:	93 2e       	mov	r9, r19
     bc8:	49 83       	std	Y+1, r20	; 0x01
     bca:	65 2e       	mov	r6, r21
     bcc:	b6 2f       	mov	r27, r22
     bce:	a7 2f       	mov	r26, r23
     bd0:	f8 2f       	mov	r31, r24
     bd2:	e9 2f       	mov	r30, r25
     bd4:	03 e0       	ldi	r16, 0x03	; 3
     bd6:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     bda:	a8 2c       	mov	r10, r8
     bdc:	b9 2c       	mov	r11, r9
     bde:	c9 80       	ldd	r12, Y+1	; 0x01
     be0:	d6 2c       	mov	r13, r6
     be2:	eb 2e       	mov	r14, r27
     be4:	fa 2e       	mov	r15, r26
     be6:	0f 2f       	mov	r16, r31
     be8:	1e 2f       	mov	r17, r30
     bea:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     bee:	a2 2e       	mov	r10, r18
     bf0:	b3 2e       	mov	r11, r19
     bf2:	c4 2e       	mov	r12, r20
     bf4:	d5 2e       	mov	r13, r21
     bf6:	e6 2e       	mov	r14, r22
     bf8:	f7 2e       	mov	r15, r23
     bfa:	78 2e       	mov	r7, r24
     bfc:	19 2f       	mov	r17, r25
     bfe:	03 e0       	ldi	r16, 0x03	; 3
     c00:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     c04:	07 2d       	mov	r16, r7
     c06:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     c0a:	03 e0       	ldi	r16, 0x03	; 3
     c0c:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     c10:	a8 2c       	mov	r10, r8
     c12:	b9 2c       	mov	r11, r9
     c14:	c9 80       	ldd	r12, Y+1	; 0x01
     c16:	d6 2c       	mov	r13, r6
     c18:	eb 2e       	mov	r14, r27
     c1a:	fa 2e       	mov	r15, r26
     c1c:	0f 2f       	mov	r16, r31
     c1e:	1e 2f       	mov	r17, r30
     c20:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     c24:	02 e0       	ldi	r16, 0x02	; 2
     c26:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     c2a:	0f 2f       	mov	r16, r31
     c2c:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     c30:	01 e0       	ldi	r16, 0x01	; 1
     c32:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     c36:	0f 2f       	mov	r16, r31
     c38:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     c3c:	a9 84       	ldd	r10, Y+9	; 0x09
     c3e:	ba 84       	ldd	r11, Y+10	; 0x0a
     c40:	cb 84       	ldd	r12, Y+11	; 0x0b
     c42:	d4 2c       	mov	r13, r4
     c44:	e5 2c       	mov	r14, r5
     c46:	fc 84       	ldd	r15, Y+12	; 0x0c
     c48:	03 2d       	mov	r16, r3
     c4a:	12 2d       	mov	r17, r2
     c4c:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <__divdi3>
     c50:	2e 87       	std	Y+14, r18	; 0x0e
     c52:	3d 87       	std	Y+13, r19	; 0x0d
     c54:	49 83       	std	Y+1, r20	; 0x01
     c56:	5d 83       	std	Y+5, r21	; 0x05
     c58:	69 87       	std	Y+9, r22	; 0x09
     c5a:	7a 87       	std	Y+10, r23	; 0x0a
     c5c:	8b 87       	std	Y+11, r24	; 0x0b
     c5e:	9c 87       	std	Y+12, r25	; 0x0c
     c60:	0d e0       	ldi	r16, 0x0D	; 13
     c62:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__ashrdi3>
     c66:	82 2e       	mov	r8, r18
     c68:	93 2e       	mov	r9, r19
     c6a:	74 2e       	mov	r7, r20
     c6c:	65 2e       	mov	r6, r21
     c6e:	56 2e       	mov	r5, r22
     c70:	47 2e       	mov	r4, r23
     c72:	38 2e       	mov	r3, r24
     c74:	29 2e       	mov	r2, r25
     c76:	30 91 de 04 	lds	r19, 0x04DE	; 0x8004de <dig_P9+0x1>
     c7a:	20 91 dd 04 	lds	r18, 0x04DD	; 0x8004dd <dig_P9>
     c7e:	93 2f       	mov	r25, r19
     c80:	99 0f       	add	r25, r25
     c82:	99 0b       	sbc	r25, r25
     c84:	a8 2c       	mov	r10, r8
     c86:	b9 2c       	mov	r11, r9
     c88:	c7 2c       	mov	r12, r7
     c8a:	d6 2c       	mov	r13, r6
     c8c:	e5 2c       	mov	r14, r5
     c8e:	f4 2c       	mov	r15, r4
     c90:	03 2d       	mov	r16, r3
     c92:	12 2d       	mov	r17, r2
     c94:	49 2f       	mov	r20, r25
     c96:	59 2f       	mov	r21, r25
     c98:	69 2f       	mov	r22, r25
     c9a:	79 2f       	mov	r23, r25
     c9c:	89 2f       	mov	r24, r25
     c9e:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <__muldi3>
     ca2:	a2 2e       	mov	r10, r18
     ca4:	b3 2e       	mov	r11, r19
     ca6:	c4 2e       	mov	r12, r20
     ca8:	d5 2e       	mov	r13, r21
     caa:	e6 2e       	mov	r14, r22
     cac:	f7 2e       	mov	r15, r23
     cae:	08 2f       	mov	r16, r24
     cb0:	19 2f       	mov	r17, r25
     cb2:	28 2d       	mov	r18, r8
     cb4:	39 2d       	mov	r19, r9
     cb6:	47 2d       	mov	r20, r7
     cb8:	56 2d       	mov	r21, r6
     cba:	65 2d       	mov	r22, r5
     cbc:	74 2d       	mov	r23, r4
     cbe:	83 2d       	mov	r24, r3
     cc0:	92 2d       	mov	r25, r2
     cc2:	fc d7       	rcall	.+4088   	; 0x1cbc <__muldi3>
     cc4:	09 e1       	ldi	r16, 0x19	; 25
     cc6:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__ashrdi3>
     cca:	a2 2e       	mov	r10, r18
     ccc:	b3 2e       	mov	r11, r19
     cce:	c4 2e       	mov	r12, r20
     cd0:	d5 2e       	mov	r13, r21
     cd2:	e6 2e       	mov	r14, r22
     cd4:	f7 2e       	mov	r15, r23
     cd6:	08 2f       	mov	r16, r24
     cd8:	19 2f       	mov	r17, r25
     cda:	2e 85       	ldd	r18, Y+14	; 0x0e
     cdc:	3d 85       	ldd	r19, Y+13	; 0x0d
     cde:	49 81       	ldd	r20, Y+1	; 0x01
     ce0:	5d 81       	ldd	r21, Y+5	; 0x05
     ce2:	69 85       	ldd	r22, Y+9	; 0x09
     ce4:	7a 85       	ldd	r23, Y+10	; 0x0a
     ce6:	8b 85       	ldd	r24, Y+11	; 0x0b
     ce8:	9c 85       	ldd	r25, Y+12	; 0x0c
     cea:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <__adddi3>
     cee:	22 2e       	mov	r2, r18
     cf0:	33 2e       	mov	r3, r19
     cf2:	44 2e       	mov	r4, r20
     cf4:	55 2e       	mov	r5, r21
     cf6:	66 2e       	mov	r6, r22
     cf8:	77 2e       	mov	r7, r23
     cfa:	88 2e       	mov	r8, r24
     cfc:	99 2e       	mov	r9, r25
     cfe:	30 91 d2 04 	lds	r19, 0x04D2	; 0x8004d2 <dig_P8+0x1>
     d02:	20 91 d1 04 	lds	r18, 0x04D1	; 0x8004d1 <dig_P8>
     d06:	93 2f       	mov	r25, r19
     d08:	99 0f       	add	r25, r25
     d0a:	99 0b       	sbc	r25, r25
     d0c:	ae 84       	ldd	r10, Y+14	; 0x0e
     d0e:	bd 84       	ldd	r11, Y+13	; 0x0d
     d10:	c9 80       	ldd	r12, Y+1	; 0x01
     d12:	dd 80       	ldd	r13, Y+5	; 0x05
     d14:	e9 84       	ldd	r14, Y+9	; 0x09
     d16:	fa 84       	ldd	r15, Y+10	; 0x0a
     d18:	0b 85       	ldd	r16, Y+11	; 0x0b
     d1a:	1c 85       	ldd	r17, Y+12	; 0x0c
     d1c:	49 2f       	mov	r20, r25
     d1e:	59 2f       	mov	r21, r25
     d20:	69 2f       	mov	r22, r25
     d22:	79 2f       	mov	r23, r25
     d24:	89 2f       	mov	r24, r25
     d26:	ca d7       	rcall	.+3988   	; 0x1cbc <__muldi3>
     d28:	03 e1       	ldi	r16, 0x13	; 19
     d2a:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__ashrdi3>
     d2e:	a2 2e       	mov	r10, r18
     d30:	b3 2e       	mov	r11, r19
     d32:	c4 2e       	mov	r12, r20
     d34:	d5 2e       	mov	r13, r21
     d36:	e6 2e       	mov	r14, r22
     d38:	f7 2e       	mov	r15, r23
     d3a:	08 2f       	mov	r16, r24
     d3c:	19 2f       	mov	r17, r25
     d3e:	22 2d       	mov	r18, r2
     d40:	33 2d       	mov	r19, r3
     d42:	44 2d       	mov	r20, r4
     d44:	55 2d       	mov	r21, r5
     d46:	66 2d       	mov	r22, r6
     d48:	77 2d       	mov	r23, r7
     d4a:	88 2d       	mov	r24, r8
     d4c:	99 2d       	mov	r25, r9
     d4e:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <__adddi3>
     d52:	08 e0       	ldi	r16, 0x08	; 8
     d54:	0e 94 98 0f 	call	0x1f30	; 0x1f30 <__ashrdi3>
     d58:	40 90 11 04 	lds	r4, 0x0411	; 0x800411 <dig_P7>
     d5c:	50 90 12 04 	lds	r5, 0x0412	; 0x800412 <dig_P7+0x1>
     d60:	05 2c       	mov	r0, r5
     d62:	00 0c       	add	r0, r0
     d64:	66 08       	sbc	r6, r6
     d66:	77 08       	sbc	r7, r7
     d68:	44 0c       	add	r4, r4
     d6a:	55 1c       	adc	r5, r5
     d6c:	66 1c       	adc	r6, r6
     d6e:	77 1c       	adc	r7, r7
     d70:	44 0c       	add	r4, r4
     d72:	55 1c       	adc	r5, r5
     d74:	66 1c       	adc	r6, r6
     d76:	77 1c       	adc	r7, r7
     d78:	44 0c       	add	r4, r4
     d7a:	55 1c       	adc	r5, r5
     d7c:	66 1c       	adc	r6, r6
     d7e:	77 1c       	adc	r7, r7
     d80:	44 0c       	add	r4, r4
     d82:	55 1c       	adc	r5, r5
     d84:	66 1c       	adc	r6, r6
     d86:	77 1c       	adc	r7, r7
     d88:	83 01       	movw	r16, r6
     d8a:	72 01       	movw	r14, r4
     d8c:	11 0f       	add	r17, r17
     d8e:	ee 08       	sbc	r14, r14
     d90:	fe 2c       	mov	r15, r14
     d92:	87 01       	movw	r16, r14
     d94:	e9 82       	std	Y+1, r14	; 0x01
     d96:	fa 82       	std	Y+2, r15	; 0x02
     d98:	0b 83       	std	Y+3, r16	; 0x03
     d9a:	1c 83       	std	Y+4, r17	; 0x04
     d9c:	a4 2c       	mov	r10, r4
     d9e:	b5 2c       	mov	r11, r5
     da0:	c6 2c       	mov	r12, r6
     da2:	d7 2c       	mov	r13, r7
     da4:	e9 80       	ldd	r14, Y+1	; 0x01
     da6:	fe 2c       	mov	r15, r14
     da8:	0e 2d       	mov	r16, r14
     daa:	1e 2d       	mov	r17, r14
     dac:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <__adddi3>
     db0:	62 2f       	mov	r22, r18
     db2:	73 2f       	mov	r23, r19
     db4:	84 2f       	mov	r24, r20
     db6:	95 2f       	mov	r25, r21
     db8:	04 c0       	rjmp	.+8      	; 0xdc2 <BME280_compensate_P_int64+0x4a2>
     dba:	60 e0       	ldi	r22, 0x00	; 0
     dbc:	70 e0       	ldi	r23, 0x00	; 0
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	6e 96       	adiw	r28, 0x1e	; 30
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	f8 94       	cli
     dc8:	de bf       	out	0x3e, r29	; 62
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	cd bf       	out	0x3d, r28	; 61
     dce:	df 91       	pop	r29
     dd0:	cf 91       	pop	r28
     dd2:	1f 91       	pop	r17
     dd4:	0f 91       	pop	r16
     dd6:	ff 90       	pop	r15
     dd8:	ef 90       	pop	r14
     dda:	df 90       	pop	r13
     ddc:	cf 90       	pop	r12
     dde:	bf 90       	pop	r11
     de0:	af 90       	pop	r10
     de2:	9f 90       	pop	r9
     de4:	8f 90       	pop	r8
     de6:	7f 90       	pop	r7
     de8:	6f 90       	pop	r6
     dea:	5f 90       	pop	r5
     dec:	4f 90       	pop	r4
     dee:	3f 90       	pop	r3
     df0:	2f 90       	pop	r2
     df2:	08 95       	ret

00000df4 <bme280_compensate_H_int32>:
     df4:	2f 92       	push	r2
     df6:	3f 92       	push	r3
     df8:	4f 92       	push	r4
     dfa:	5f 92       	push	r5
     dfc:	6f 92       	push	r6
     dfe:	7f 92       	push	r7
     e00:	8f 92       	push	r8
     e02:	9f 92       	push	r9
     e04:	af 92       	push	r10
     e06:	bf 92       	push	r11
     e08:	cf 92       	push	r12
     e0a:	df 92       	push	r13
     e0c:	ef 92       	push	r14
     e0e:	ff 92       	push	r15
     e10:	0f 93       	push	r16
     e12:	1f 93       	push	r17
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	cd b7       	in	r28, 0x3d	; 61
     e1a:	de b7       	in	r29, 0x3e	; 62
     e1c:	67 97       	sbiw	r28, 0x17	; 23
     e1e:	0f b6       	in	r0, 0x3f	; 63
     e20:	f8 94       	cli
     e22:	de bf       	out	0x3e, r29	; 62
     e24:	0f be       	out	0x3f, r0	; 63
     e26:	cd bf       	out	0x3d, r28	; 61
     e28:	2b 01       	movw	r4, r22
     e2a:	3c 01       	movw	r6, r24
     e2c:	80 91 e5 04 	lds	r24, 0x04E5	; 0x8004e5 <t_fine>
     e30:	90 91 e6 04 	lds	r25, 0x04E6	; 0x8004e6 <t_fine+0x1>
     e34:	a0 91 e7 04 	lds	r26, 0x04E7	; 0x8004e7 <t_fine+0x2>
     e38:	b0 91 e8 04 	lds	r27, 0x04E8	; 0x8004e8 <t_fine+0x3>
     e3c:	6c 01       	movw	r12, r24
     e3e:	7d 01       	movw	r14, r26
     e40:	ff 0c       	add	r15, r15
     e42:	cc 08       	sbc	r12, r12
     e44:	dc 2c       	mov	r13, r12
     e46:	76 01       	movw	r14, r12
     e48:	28 2f       	mov	r18, r24
     e4a:	39 2f       	mov	r19, r25
     e4c:	4a 2f       	mov	r20, r26
     e4e:	5b 2f       	mov	r21, r27
     e50:	6c 2d       	mov	r22, r12
     e52:	7c 2d       	mov	r23, r12
     e54:	8c 2d       	mov	r24, r12
     e56:	9c 2d       	mov	r25, r12
     e58:	3c 52       	subi	r19, 0x2C	; 44
     e5a:	41 40       	sbci	r20, 0x01	; 1
     e5c:	51 09       	sbc	r21, r1
     e5e:	61 09       	sbc	r22, r1
     e60:	71 09       	sbc	r23, r1
     e62:	81 09       	sbc	r24, r1
     e64:	91 09       	sbc	r25, r1
     e66:	2f 8b       	std	Y+23, r18	; 0x17
     e68:	3e 8b       	std	Y+22, r19	; 0x16
     e6a:	49 83       	std	Y+1, r20	; 0x01
     e6c:	59 87       	std	Y+9, r21	; 0x09
     e6e:	6a 87       	std	Y+10, r22	; 0x0a
     e70:	7b 87       	std	Y+11, r23	; 0x0b
     e72:	8c 87       	std	Y+12, r24	; 0x0c
     e74:	9d 87       	std	Y+13, r25	; 0x0d
     e76:	03 2e       	mov	r0, r19
     e78:	3e e0       	ldi	r19, 0x0E	; 14
     e7a:	44 0c       	add	r4, r4
     e7c:	55 1c       	adc	r5, r5
     e7e:	66 1c       	adc	r6, r6
     e80:	77 1c       	adc	r7, r7
     e82:	3a 95       	dec	r19
     e84:	d1 f7       	brne	.-12     	; 0xe7a <bme280_compensate_H_int32+0x86>
     e86:	30 2d       	mov	r19, r0
     e88:	53 01       	movw	r10, r6
     e8a:	42 01       	movw	r8, r4
     e8c:	bb 0c       	add	r11, r11
     e8e:	88 08       	sbc	r8, r8
     e90:	98 2c       	mov	r9, r8
     e92:	54 01       	movw	r10, r8
     e94:	30 91 3e 04 	lds	r19, 0x043E	; 0x80043e <dig_H4+0x1>
     e98:	20 91 3d 04 	lds	r18, 0x043D	; 0x80043d <dig_H4>
     e9c:	93 2f       	mov	r25, r19
     e9e:	99 0f       	add	r25, r25
     ea0:	99 0b       	sbc	r25, r25
     ea2:	49 2f       	mov	r20, r25
     ea4:	59 2f       	mov	r21, r25
     ea6:	69 2f       	mov	r22, r25
     ea8:	79 2f       	mov	r23, r25
     eaa:	89 2f       	mov	r24, r25
     eac:	04 e1       	ldi	r16, 0x14	; 20
     eae:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ashldi3>
     eb2:	f2 2f       	mov	r31, r18
     eb4:	e3 2f       	mov	r30, r19
     eb6:	c4 2e       	mov	r12, r20
     eb8:	d5 2e       	mov	r13, r21
     eba:	e6 2e       	mov	r14, r22
     ebc:	f7 2e       	mov	r15, r23
     ebe:	08 2f       	mov	r16, r24
     ec0:	19 2f       	mov	r17, r25
     ec2:	24 2d       	mov	r18, r4
     ec4:	35 2d       	mov	r19, r5
     ec6:	46 2d       	mov	r20, r6
     ec8:	57 2d       	mov	r21, r7
     eca:	68 2d       	mov	r22, r8
     ecc:	78 2d       	mov	r23, r8
     ece:	88 2d       	mov	r24, r8
     ed0:	98 2d       	mov	r25, r8
     ed2:	af 2e       	mov	r10, r31
     ed4:	be 2e       	mov	r11, r30
     ed6:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     eda:	22 2e       	mov	r2, r18
     edc:	33 2e       	mov	r3, r19
     ede:	44 2e       	mov	r4, r20
     ee0:	55 2e       	mov	r5, r21
     ee2:	66 2e       	mov	r6, r22
     ee4:	77 2e       	mov	r7, r23
     ee6:	88 2e       	mov	r8, r24
     ee8:	99 2e       	mov	r9, r25
     eea:	30 91 d5 04 	lds	r19, 0x04D5	; 0x8004d5 <dig_H5+0x1>
     eee:	20 91 d4 04 	lds	r18, 0x04D4	; 0x8004d4 <dig_H5>
     ef2:	93 2f       	mov	r25, r19
     ef4:	99 0f       	add	r25, r25
     ef6:	99 0b       	sbc	r25, r25
     ef8:	af 88       	ldd	r10, Y+23	; 0x17
     efa:	be 88       	ldd	r11, Y+22	; 0x16
     efc:	c9 80       	ldd	r12, Y+1	; 0x01
     efe:	d9 84       	ldd	r13, Y+9	; 0x09
     f00:	ea 84       	ldd	r14, Y+10	; 0x0a
     f02:	fb 84       	ldd	r15, Y+11	; 0x0b
     f04:	0c 85       	ldd	r16, Y+12	; 0x0c
     f06:	1d 85       	ldd	r17, Y+13	; 0x0d
     f08:	49 2f       	mov	r20, r25
     f0a:	59 2f       	mov	r21, r25
     f0c:	69 2f       	mov	r22, r25
     f0e:	79 2f       	mov	r23, r25
     f10:	89 2f       	mov	r24, r25
     f12:	d4 d6       	rcall	.+3496   	; 0x1cbc <__muldi3>
     f14:	a2 2e       	mov	r10, r18
     f16:	b3 2e       	mov	r11, r19
     f18:	c4 2e       	mov	r12, r20
     f1a:	d5 2e       	mov	r13, r21
     f1c:	e6 2e       	mov	r14, r22
     f1e:	f7 2e       	mov	r15, r23
     f20:	08 2f       	mov	r16, r24
     f22:	19 2f       	mov	r17, r25
     f24:	22 2d       	mov	r18, r2
     f26:	33 2d       	mov	r19, r3
     f28:	44 2d       	mov	r20, r4
     f2a:	55 2d       	mov	r21, r5
     f2c:	66 2d       	mov	r22, r6
     f2e:	77 2d       	mov	r23, r7
     f30:	88 2d       	mov	r24, r8
     f32:	99 2d       	mov	r25, r9
     f34:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__subdi3>
     f38:	30 5c       	subi	r19, 0xC0	; 192
     f3a:	4f 4f       	sbci	r20, 0xFF	; 255
     f3c:	5f 4f       	sbci	r21, 0xFF	; 255
     f3e:	6f 4f       	sbci	r22, 0xFF	; 255
     f40:	7f 4f       	sbci	r23, 0xFF	; 255
     f42:	8f 4f       	sbci	r24, 0xFF	; 255
     f44:	9f 4f       	sbci	r25, 0xFF	; 255
     f46:	0f e0       	ldi	r16, 0x0F	; 15
     f48:	f3 d7       	rcall	.+4070   	; 0x1f30 <__ashrdi3>
     f4a:	2e 87       	std	Y+14, r18	; 0x0e
     f4c:	3f 87       	std	Y+15, r19	; 0x0f
     f4e:	48 8b       	std	Y+16, r20	; 0x10
     f50:	59 8b       	std	Y+17, r21	; 0x11
     f52:	6a 8b       	std	Y+18, r22	; 0x12
     f54:	7b 8b       	std	Y+19, r23	; 0x13
     f56:	8c 8b       	std	Y+20, r24	; 0x14
     f58:	9d 8b       	std	Y+21, r25	; 0x15
     f5a:	30 91 96 04 	lds	r19, 0x0496	; 0x800496 <dig_H6+0x1>
     f5e:	20 91 95 04 	lds	r18, 0x0495	; 0x800495 <dig_H6>
     f62:	93 2f       	mov	r25, r19
     f64:	99 0f       	add	r25, r25
     f66:	99 0b       	sbc	r25, r25
     f68:	af 88       	ldd	r10, Y+23	; 0x17
     f6a:	be 88       	ldd	r11, Y+22	; 0x16
     f6c:	c9 80       	ldd	r12, Y+1	; 0x01
     f6e:	d9 84       	ldd	r13, Y+9	; 0x09
     f70:	ea 84       	ldd	r14, Y+10	; 0x0a
     f72:	fb 84       	ldd	r15, Y+11	; 0x0b
     f74:	0c 85       	ldd	r16, Y+12	; 0x0c
     f76:	1d 85       	ldd	r17, Y+13	; 0x0d
     f78:	49 2f       	mov	r20, r25
     f7a:	59 2f       	mov	r21, r25
     f7c:	69 2f       	mov	r22, r25
     f7e:	79 2f       	mov	r23, r25
     f80:	89 2f       	mov	r24, r25
     f82:	9c d6       	rcall	.+3384   	; 0x1cbc <__muldi3>
     f84:	0a e0       	ldi	r16, 0x0A	; 10
     f86:	d4 d7       	rcall	.+4008   	; 0x1f30 <__ashrdi3>
     f88:	82 2e       	mov	r8, r18
     f8a:	93 2e       	mov	r9, r19
     f8c:	74 2e       	mov	r7, r20
     f8e:	65 2e       	mov	r6, r21
     f90:	56 2e       	mov	r5, r22
     f92:	47 2e       	mov	r4, r23
     f94:	38 2e       	mov	r3, r24
     f96:	29 2e       	mov	r2, r25
     f98:	40 91 d7 04 	lds	r20, 0x04D7	; 0x8004d7 <dig_H3>
     f9c:	50 91 d8 04 	lds	r21, 0x04D8	; 0x8004d8 <dig_H3+0x1>
     fa0:	0c 85       	ldd	r16, Y+12	; 0x0c
     fa2:	24 2f       	mov	r18, r20
     fa4:	35 2f       	mov	r19, r21
     fa6:	40 e0       	ldi	r20, 0x00	; 0
     fa8:	50 e0       	ldi	r21, 0x00	; 0
     faa:	60 e0       	ldi	r22, 0x00	; 0
     fac:	70 e0       	ldi	r23, 0x00	; 0
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	84 d6       	rcall	.+3336   	; 0x1cbc <__muldi3>
     fb4:	0b e0       	ldi	r16, 0x0B	; 11
     fb6:	bc d7       	rcall	.+3960   	; 0x1f30 <__ashrdi3>
     fb8:	30 58       	subi	r19, 0x80	; 128
     fba:	4f 4f       	sbci	r20, 0xFF	; 255
     fbc:	5f 4f       	sbci	r21, 0xFF	; 255
     fbe:	6f 4f       	sbci	r22, 0xFF	; 255
     fc0:	7f 4f       	sbci	r23, 0xFF	; 255
     fc2:	8f 4f       	sbci	r24, 0xFF	; 255
     fc4:	9f 4f       	sbci	r25, 0xFF	; 255
     fc6:	a2 2e       	mov	r10, r18
     fc8:	b3 2e       	mov	r11, r19
     fca:	c4 2e       	mov	r12, r20
     fcc:	d5 2e       	mov	r13, r21
     fce:	e6 2e       	mov	r14, r22
     fd0:	f7 2e       	mov	r15, r23
     fd2:	08 2f       	mov	r16, r24
     fd4:	19 2f       	mov	r17, r25
     fd6:	28 2d       	mov	r18, r8
     fd8:	39 2d       	mov	r19, r9
     fda:	47 2d       	mov	r20, r7
     fdc:	56 2d       	mov	r21, r6
     fde:	65 2d       	mov	r22, r5
     fe0:	74 2d       	mov	r23, r4
     fe2:	83 2d       	mov	r24, r3
     fe4:	92 2d       	mov	r25, r2
     fe6:	6a d6       	rcall	.+3284   	; 0x1cbc <__muldi3>
     fe8:	0a e0       	ldi	r16, 0x0A	; 10
     fea:	a2 d7       	rcall	.+3908   	; 0x1f30 <__ashrdi3>
     fec:	40 5e       	subi	r20, 0xE0	; 224
     fee:	5f 4f       	sbci	r21, 0xFF	; 255
     ff0:	6f 4f       	sbci	r22, 0xFF	; 255
     ff2:	7f 4f       	sbci	r23, 0xFF	; 255
     ff4:	8f 4f       	sbci	r24, 0xFF	; 255
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	b0 90 e4 04 	lds	r11, 0x04E4	; 0x8004e4 <dig_H2+0x1>
     ffc:	a0 90 e3 04 	lds	r10, 0x04E3	; 0x8004e3 <dig_H2>
    1000:	1b 2d       	mov	r17, r11
    1002:	11 0f       	add	r17, r17
    1004:	11 0b       	sbc	r17, r17
    1006:	c1 2e       	mov	r12, r17
    1008:	d1 2e       	mov	r13, r17
    100a:	e1 2e       	mov	r14, r17
    100c:	f1 2e       	mov	r15, r17
    100e:	01 2f       	mov	r16, r17
    1010:	55 d6       	rcall	.+3242   	; 0x1cbc <__muldi3>
    1012:	30 5e       	subi	r19, 0xE0	; 224
    1014:	4f 4f       	sbci	r20, 0xFF	; 255
    1016:	5f 4f       	sbci	r21, 0xFF	; 255
    1018:	6f 4f       	sbci	r22, 0xFF	; 255
    101a:	7f 4f       	sbci	r23, 0xFF	; 255
    101c:	8f 4f       	sbci	r24, 0xFF	; 255
    101e:	9f 4f       	sbci	r25, 0xFF	; 255
    1020:	0e e0       	ldi	r16, 0x0E	; 14
    1022:	86 d7       	rcall	.+3852   	; 0x1f30 <__ashrdi3>
    1024:	a2 2e       	mov	r10, r18
    1026:	b3 2e       	mov	r11, r19
    1028:	c4 2e       	mov	r12, r20
    102a:	d5 2e       	mov	r13, r21
    102c:	e6 2e       	mov	r14, r22
    102e:	f7 2e       	mov	r15, r23
    1030:	08 2f       	mov	r16, r24
    1032:	19 2f       	mov	r17, r25
    1034:	2e 85       	ldd	r18, Y+14	; 0x0e
    1036:	3f 85       	ldd	r19, Y+15	; 0x0f
    1038:	48 89       	ldd	r20, Y+16	; 0x10
    103a:	59 89       	ldd	r21, Y+17	; 0x11
    103c:	6a 89       	ldd	r22, Y+18	; 0x12
    103e:	7b 89       	ldd	r23, Y+19	; 0x13
    1040:	8c 89       	ldd	r24, Y+20	; 0x14
    1042:	9d 89       	ldd	r25, Y+21	; 0x15
    1044:	3b d6       	rcall	.+3190   	; 0x1cbc <__muldi3>
    1046:	42 2e       	mov	r4, r18
    1048:	53 2e       	mov	r5, r19
    104a:	64 2e       	mov	r6, r20
    104c:	75 2e       	mov	r7, r21
    104e:	86 2e       	mov	r8, r22
    1050:	97 2e       	mov	r9, r23
    1052:	28 2e       	mov	r2, r24
    1054:	39 2e       	mov	r3, r25
    1056:	0f e0       	ldi	r16, 0x0F	; 15
    1058:	6b d7       	rcall	.+3798   	; 0x1f30 <__ashrdi3>
    105a:	a2 2e       	mov	r10, r18
    105c:	b3 2e       	mov	r11, r19
    105e:	c4 2e       	mov	r12, r20
    1060:	d5 2e       	mov	r13, r21
    1062:	e6 2e       	mov	r14, r22
    1064:	f7 2e       	mov	r15, r23
    1066:	08 2f       	mov	r16, r24
    1068:	19 2f       	mov	r17, r25
    106a:	28 d6       	rcall	.+3152   	; 0x1cbc <__muldi3>
    106c:	07 e0       	ldi	r16, 0x07	; 7
    106e:	60 d7       	rcall	.+3776   	; 0x1f30 <__ashrdi3>
    1070:	e0 91 6f 04 	lds	r30, 0x046F	; 0x80046f <dig_H1>
    1074:	f0 91 70 04 	lds	r31, 0x0470	; 0x800470 <dig_H1+0x1>
    1078:	5f 01       	movw	r10, r30
    107a:	c1 2c       	mov	r12, r1
    107c:	d1 2c       	mov	r13, r1
    107e:	e1 2c       	mov	r14, r1
    1080:	f1 2c       	mov	r15, r1
    1082:	87 01       	movw	r16, r14
    1084:	e9 83       	std	Y+1, r30	; 0x01
    1086:	ba 82       	std	Y+2, r11	; 0x02
    1088:	cb 82       	std	Y+3, r12	; 0x03
    108a:	dc 82       	std	Y+4, r13	; 0x04
    108c:	ed 82       	std	Y+5, r14	; 0x05
    108e:	fe 82       	std	Y+6, r15	; 0x06
    1090:	0f 83       	std	Y+7, r16	; 0x07
    1092:	18 87       	std	Y+8, r17	; 0x08
    1094:	c1 2c       	mov	r12, r1
    1096:	d1 2c       	mov	r13, r1
    1098:	e1 2c       	mov	r14, r1
    109a:	f1 2c       	mov	r15, r1
    109c:	00 e0       	ldi	r16, 0x00	; 0
    109e:	10 e0       	ldi	r17, 0x00	; 0
    10a0:	0d d6       	rcall	.+3098   	; 0x1cbc <__muldi3>
    10a2:	04 e0       	ldi	r16, 0x04	; 4
    10a4:	45 d7       	rcall	.+3722   	; 0x1f30 <__ashrdi3>
    10a6:	a2 2e       	mov	r10, r18
    10a8:	b3 2e       	mov	r11, r19
    10aa:	c4 2e       	mov	r12, r20
    10ac:	d5 2e       	mov	r13, r21
    10ae:	e6 2e       	mov	r14, r22
    10b0:	f7 2e       	mov	r15, r23
    10b2:	08 2f       	mov	r16, r24
    10b4:	19 2f       	mov	r17, r25
    10b6:	24 2d       	mov	r18, r4
    10b8:	35 2d       	mov	r19, r5
    10ba:	46 2d       	mov	r20, r6
    10bc:	57 2d       	mov	r21, r7
    10be:	68 2d       	mov	r22, r8
    10c0:	79 2d       	mov	r23, r9
    10c2:	82 2d       	mov	r24, r2
    10c4:	93 2d       	mov	r25, r3
    10c6:	5b d7       	rcall	.+3766   	; 0x1f7e <__subdi3>
    10c8:	f2 2e       	mov	r15, r18
    10ca:	03 2f       	mov	r16, r19
    10cc:	14 2f       	mov	r17, r20
    10ce:	65 2e       	mov	r6, r21
    10d0:	76 2e       	mov	r7, r22
    10d2:	b7 2f       	mov	r27, r23
    10d4:	f8 2f       	mov	r31, r24
    10d6:	e9 2f       	mov	r30, r25
    10d8:	a0 e0       	ldi	r26, 0x00	; 0
    10da:	5a d7       	rcall	.+3764   	; 0x1f90 <__cmpdi2_s8>
    10dc:	44 f4       	brge	.+16     	; 0x10ee <bme280_compensate_H_int32+0x2fa>
    10de:	f1 2c       	mov	r15, r1
    10e0:	00 e0       	ldi	r16, 0x00	; 0
    10e2:	10 e0       	ldi	r17, 0x00	; 0
    10e4:	61 2c       	mov	r6, r1
    10e6:	71 2c       	mov	r7, r1
    10e8:	b0 e0       	ldi	r27, 0x00	; 0
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	e0 e0       	ldi	r30, 0x00	; 0
    10ee:	8f 2c       	mov	r8, r15
    10f0:	90 2e       	mov	r9, r16
    10f2:	a1 2e       	mov	r10, r17
    10f4:	b6 2c       	mov	r11, r6
    10f6:	c7 2c       	mov	r12, r7
    10f8:	db 2e       	mov	r13, r27
    10fa:	ef 2e       	mov	r14, r31
    10fc:	ae 2f       	mov	r26, r30
    10fe:	2f 2d       	mov	r18, r15
    1100:	30 2f       	mov	r19, r16
    1102:	41 2f       	mov	r20, r17
    1104:	56 2d       	mov	r21, r6
    1106:	67 2d       	mov	r22, r7
    1108:	7b 2f       	mov	r23, r27
    110a:	8f 2f       	mov	r24, r31
    110c:	9e 2f       	mov	r25, r30
    110e:	21 15       	cp	r18, r1
    1110:	31 05       	cpc	r19, r1
    1112:	41 05       	cpc	r20, r1
    1114:	59 41       	sbci	r21, 0x19	; 25
    1116:	61 05       	cpc	r22, r1
    1118:	71 05       	cpc	r23, r1
    111a:	81 05       	cpc	r24, r1
    111c:	91 05       	cpc	r25, r1
    111e:	61 f0       	breq	.+24     	; 0x1138 <bme280_compensate_H_int32+0x344>
    1120:	5c f0       	brlt	.+22     	; 0x1138 <bme280_compensate_H_int32+0x344>
    1122:	81 2c       	mov	r8, r1
    1124:	91 2c       	mov	r9, r1
    1126:	a1 2c       	mov	r10, r1
    1128:	0f 2e       	mov	r0, r31
    112a:	f9 e1       	ldi	r31, 0x19	; 25
    112c:	bf 2e       	mov	r11, r31
    112e:	f0 2d       	mov	r31, r0
    1130:	c1 2c       	mov	r12, r1
    1132:	d1 2c       	mov	r13, r1
    1134:	e1 2c       	mov	r14, r1
    1136:	a0 e0       	ldi	r26, 0x00	; 0
    1138:	28 2d       	mov	r18, r8
    113a:	39 2d       	mov	r19, r9
    113c:	4a 2d       	mov	r20, r10
    113e:	5b 2d       	mov	r21, r11
    1140:	6c 2d       	mov	r22, r12
    1142:	7d 2d       	mov	r23, r13
    1144:	8e 2d       	mov	r24, r14
    1146:	9a 2f       	mov	r25, r26
    1148:	0c e0       	ldi	r16, 0x0C	; 12
    114a:	f2 d6       	rcall	.+3556   	; 0x1f30 <__ashrdi3>
    114c:	62 2f       	mov	r22, r18
    114e:	73 2f       	mov	r23, r19
    1150:	84 2f       	mov	r24, r20
    1152:	95 2f       	mov	r25, r21
    1154:	67 96       	adiw	r28, 0x17	; 23
    1156:	0f b6       	in	r0, 0x3f	; 63
    1158:	f8 94       	cli
    115a:	de bf       	out	0x3e, r29	; 62
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	cd bf       	out	0x3d, r28	; 61
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	1f 91       	pop	r17
    1166:	0f 91       	pop	r16
    1168:	ff 90       	pop	r15
    116a:	ef 90       	pop	r14
    116c:	df 90       	pop	r13
    116e:	cf 90       	pop	r12
    1170:	bf 90       	pop	r11
    1172:	af 90       	pop	r10
    1174:	9f 90       	pop	r9
    1176:	8f 90       	pop	r8
    1178:	7f 90       	pop	r7
    117a:	6f 90       	pop	r6
    117c:	5f 90       	pop	r5
    117e:	4f 90       	pop	r4
    1180:	3f 90       	pop	r3
    1182:	2f 90       	pop	r2
    1184:	08 95       	ret

00001186 <canary_io_pin_initialization>:
    1186:	87 e0       	ldi	r24, 0x07	; 7
    1188:	84 b9       	out	0x04, r24	; 4
    118a:	85 b1       	in	r24, 0x05	; 5
    118c:	15 b8       	out	0x05, r1	; 5
    118e:	2b 9a       	sbi	0x05, 3	; 5
    1190:	38 9a       	sbi	0x07, 0	; 7
    1192:	39 9a       	sbi	0x07, 1	; 7
    1194:	40 9a       	sbi	0x08, 0	; 8
    1196:	41 9a       	sbi	0x08, 1	; 8
    1198:	08 95       	ret

0000119a <get_gas_sensor_limits>:
#include "gas_sensors.h"

/********************************************************************************
						Functions
********************************************************************************/
void get_gas_sensor_limits(void) {
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	90 e0       	ldi	r25, 0x00	; 0
	This just sets some upper and lower bounds for the initialization code to use.
	Actual values will need to be derived empirically (using the UCAR test chamber) */
	for (ii=0; ii<5; ii++)
	{
		gas_sensor_boundaries[ii][0] = 0;
		gas_sensor_boundaries[ii][1] = 1023;
    119e:	2f ef       	ldi	r18, 0xFF	; 255
    11a0:	33 e0       	ldi	r19, 0x03	; 3
	/* THIS IS A TEMPORARY ROUTINE, to be replaced by the EEPROM read commented out below.
	This just sets some upper and lower bounds for the initialization code to use.
	Actual values will need to be derived empirically (using the UCAR test chamber) */
	for (ii=0; ii<5; ii++)
	{
		gas_sensor_boundaries[ii][0] = 0;
    11a2:	fc 01       	movw	r30, r24
    11a4:	ee 0f       	add	r30, r30
    11a6:	ff 1f       	adc	r31, r31
    11a8:	ee 0f       	add	r30, r30
    11aa:	ff 1f       	adc	r31, r31
    11ac:	ea 5d       	subi	r30, 0xDA	; 218
    11ae:	fb 4f       	sbci	r31, 0xFB	; 251
    11b0:	11 82       	std	Z+1, r1	; 0x01
    11b2:	10 82       	st	Z, r1
		gas_sensor_boundaries[ii][1] = 1023;
    11b4:	33 83       	std	Z+3, r19	; 0x03
    11b6:	22 83       	std	Z+2, r18	; 0x02
    11b8:	01 96       	adiw	r24, 0x01	; 1
void get_gas_sensor_limits(void) {
	uint8_t ii;
	/* THIS IS A TEMPORARY ROUTINE, to be replaced by the EEPROM read commented out below.
	This just sets some upper and lower bounds for the initialization code to use.
	Actual values will need to be derived empirically (using the UCAR test chamber) */
	for (ii=0; ii<5; ii++)
    11ba:	85 30       	cpi	r24, 0x05	; 5
    11bc:	91 05       	cpc	r25, r1
    11be:	89 f7       	brne	.-30     	; 0x11a2 <get_gas_sensor_limits+0x8>
	{
		gas_sensor_boundaries[ii][0] = 0;
		gas_sensor_boundaries[ii][1] = 1023;
	}
}
    11c0:	08 95       	ret

000011c2 <get_gas_sensor_limits_from_EEPROM>:

void get_gas_sensor_limits_from_EEPROM(void) {
    11c2:	ef 92       	push	r14
    11c4:	ff 92       	push	r15
    11c6:	0f 93       	push	r16
    11c8:	1f 93       	push	r17
    11ca:	cf 93       	push	r28
    11cc:	df 93       	push	r29
    11ce:	0f 2e       	mov	r0, r31
    11d0:	fc ef       	ldi	r31, 0xFC	; 252
    11d2:	ef 2e       	mov	r14, r31
    11d4:	f3 e0       	ldi	r31, 0x03	; 3
    11d6:	ff 2e       	mov	r15, r31
    11d8:	f0 2d       	mov	r31, r0
    11da:	00 e0       	ldi	r16, 0x00	; 0
    11dc:	10 e0       	ldi	r17, 0x00	; 0
	// This routine reads the empirically derived upper and lower limits
	// for the gas sensors from EEPROM.  We can also use defined constants
	// if we need to...
	for (ii=0; ii<5; ii++)
	{
		gas_sensor_boundaries[ii][0] = eeprom_read_word(&gas_sensor_boundary_constants[ii][0]);
    11de:	c7 01       	movw	r24, r14
    11e0:	0e 94 90 12 	call	0x2520	; 0x2520 <eeprom_read_word>
    11e4:	e8 01       	movw	r28, r16
    11e6:	cc 0f       	add	r28, r28
    11e8:	dd 1f       	adc	r29, r29
    11ea:	cc 0f       	add	r28, r28
    11ec:	dd 1f       	adc	r29, r29
    11ee:	ca 5d       	subi	r28, 0xDA	; 218
    11f0:	db 4f       	sbci	r29, 0xFB	; 251
    11f2:	99 83       	std	Y+1, r25	; 0x01
    11f4:	88 83       	st	Y, r24
		gas_sensor_boundaries[ii][1] = eeprom_read_word(&gas_sensor_boundary_constants[ii][1]);
    11f6:	c7 01       	movw	r24, r14
    11f8:	02 96       	adiw	r24, 0x02	; 2
    11fa:	0e 94 90 12 	call	0x2520	; 0x2520 <eeprom_read_word>
    11fe:	9b 83       	std	Y+3, r25	; 0x03
    1200:	8a 83       	std	Y+2, r24	; 0x02
    1202:	0f 5f       	subi	r16, 0xFF	; 255
    1204:	1f 4f       	sbci	r17, 0xFF	; 255
    1206:	84 e0       	ldi	r24, 0x04	; 4
    1208:	e8 0e       	add	r14, r24
    120a:	f1 1c       	adc	r15, r1
void get_gas_sensor_limits_from_EEPROM(void) {
	uint8_t ii;
	// This routine reads the empirically derived upper and lower limits
	// for the gas sensors from EEPROM.  We can also use defined constants
	// if we need to...
	for (ii=0; ii<5; ii++)
    120c:	05 30       	cpi	r16, 0x05	; 5
    120e:	11 05       	cpc	r17, r1
    1210:	31 f7       	brne	.-52     	; 0x11de <get_gas_sensor_limits_from_EEPROM+0x1c>
	{
		gas_sensor_boundaries[ii][0] = eeprom_read_word(&gas_sensor_boundary_constants[ii][0]);
		gas_sensor_boundaries[ii][1] = eeprom_read_word(&gas_sensor_boundary_constants[ii][1]);
	}
}
    1212:	df 91       	pop	r29
    1214:	cf 91       	pop	r28
    1216:	1f 91       	pop	r17
    1218:	0f 91       	pop	r16
    121a:	ff 90       	pop	r15
    121c:	ef 90       	pop	r14
    121e:	08 95       	ret

00001220 <gas_sensors_init>:

void gas_sensors_init(void)
{
    1220:	af 92       	push	r10
    1222:	bf 92       	push	r11
    1224:	cf 92       	push	r12
    1226:	df 92       	push	r13
    1228:	ef 92       	push	r14
    122a:	ff 92       	push	r15
    122c:	0f 93       	push	r16
    122e:	1f 93       	push	r17
    1230:	cf 93       	push	r28
    1232:	df 93       	push	r29
    1234:	1f 92       	push	r1
    1236:	cd b7       	in	r28, 0x3d	; 61
    1238:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t sensor_id;
	int16_t ADC_result;
	
	// Clear our error trackers
	gas_sensor_initialization_errors=0; // Keeps track (by bit) of errors we've encountered.
    123a:	10 92 cc 04 	sts	0x04CC, r1	; 0x8004cc <gas_sensor_initialization_errors>
	gas_sensor_operational_errors=0;  // Keeps track (by bit) of errors we've encountered.
    123e:	10 92 9b 04 	sts	0x049B, r1	; 0x80049b <gas_sensor_operational_errors>
	// Get the upper and lower boundaries on the gas sensors...
	// The first cal is just to test the EEPROM code
	get_gas_sensor_limits_from_EEPROM();
    1242:	bf df       	rcall	.-130    	; 0x11c2 <get_gas_sensor_limits_from_EEPROM>
	// This second cal is temporary and simply initializes the array to usable values...
	get_gas_sensor_limits();
    1244:	aa df       	rcall	.-172    	; 0x119a <get_gas_sensor_limits>
	
	// Enable the ADC
	SetBit(ADCSRA, ADEN);
    1246:	ea e7       	ldi	r30, 0x7A	; 122
    1248:	f0 e0       	ldi	r31, 0x00	; 0
    124a:	80 81       	ld	r24, Z
    124c:	80 68       	ori	r24, 0x80	; 128
    124e:	80 83       	st	Z, r24
	
	//Read initial value from the sensors
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
    1250:	19 82       	std	Y+1, r1	; 0x01
    1252:	89 81       	ldd	r24, Y+1	; 0x01
    1254:	85 30       	cpi	r24, 0x05	; 5
    1256:	08 f0       	brcs	.+2      	; 0x125a <gas_sensors_init+0x3a>
    1258:	52 c0       	rjmp	.+164    	; 0x12fe <gas_sensors_init+0xde>
	{
		ADC_SetMux(sensor_id);
		// Start conversion
		SetBit(ADCSRA, ADSC);
    125a:	0a e7       	ldi	r16, 0x7A	; 122
    125c:	10 e0       	ldi	r17, 0x00	; 0
		while (BitIsClear(ADCSRA, ADIF))
		{
			// Wait for conversion to be complete
		}
		// Read result
		ADC_result = ADC;
    125e:	0f 2e       	mov	r0, r31
    1260:	f8 e7       	ldi	r31, 0x78	; 120
    1262:	ef 2e       	mov	r14, r31
    1264:	f1 2c       	mov	r15, r1
    1266:	f0 2d       	mov	r31, r0
		// sen0 = ADC_result;
		// Test the reading to ensure it is within acceptable boundaries
		if ((ADC_result < gas_sensor_boundaries[sensor_id][0])|(ADC_result > gas_sensor_boundaries[sensor_id][1]))
    1268:	bb 24       	eor	r11, r11
    126a:	b3 94       	inc	r11
    126c:	a1 2c       	mov	r10, r1
		{
			SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
    126e:	cc 24       	eor	r12, r12
    1270:	c3 94       	inc	r12
    1272:	d1 2c       	mov	r13, r1
	SetBit(ADCSRA, ADEN);
	
	//Read initial value from the sensors
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
	{
		ADC_SetMux(sensor_id);
    1274:	89 81       	ldd	r24, Y+1	; 0x01
    1276:	0e 94 b8 00 	call	0x170	; 0x170 <ADC_SetMux>
		// Start conversion
		SetBit(ADCSRA, ADSC);
    127a:	f8 01       	movw	r30, r16
    127c:	80 81       	ld	r24, Z
    127e:	80 64       	ori	r24, 0x40	; 64
    1280:	80 83       	st	Z, r24
		while (BitIsClear(ADCSRA, ADIF))
    1282:	f8 01       	movw	r30, r16
    1284:	80 81       	ld	r24, Z
    1286:	84 ff       	sbrs	r24, 4
    1288:	fc cf       	rjmp	.-8      	; 0x1282 <gas_sensors_init+0x62>
		{
			// Wait for conversion to be complete
		}
		// Read result
		ADC_result = ADC;
    128a:	f7 01       	movw	r30, r14
    128c:	80 81       	ld	r24, Z
    128e:	91 81       	ldd	r25, Z+1	; 0x01
		// sen0 = ADC_result;
		// Test the reading to ensure it is within acceptable boundaries
		if ((ADC_result < gas_sensor_boundaries[sensor_id][0])|(ADC_result > gas_sensor_boundaries[sensor_id][1]))
    1290:	e9 81       	ldd	r30, Y+1	; 0x01
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	ee 0f       	add	r30, r30
    1296:	ff 1f       	adc	r31, r31
    1298:	ee 0f       	add	r30, r30
    129a:	ff 1f       	adc	r31, r31
    129c:	ea 5d       	subi	r30, 0xDA	; 218
    129e:	fb 4f       	sbci	r31, 0xFB	; 251
    12a0:	20 81       	ld	r18, Z
    12a2:	31 81       	ldd	r19, Z+1	; 0x01
    12a4:	e9 81       	ldd	r30, Y+1	; 0x01
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	ee 0f       	add	r30, r30
    12aa:	ff 1f       	adc	r31, r31
    12ac:	ee 0f       	add	r30, r30
    12ae:	ff 1f       	adc	r31, r31
    12b0:	ea 5d       	subi	r30, 0xDA	; 218
    12b2:	fb 4f       	sbci	r31, 0xFB	; 251
    12b4:	62 81       	ldd	r22, Z+2	; 0x02
    12b6:	73 81       	ldd	r23, Z+3	; 0x03
    12b8:	4b 2d       	mov	r20, r11
    12ba:	68 17       	cp	r22, r24
    12bc:	79 07       	cpc	r23, r25
    12be:	08 f0       	brcs	.+2      	; 0x12c2 <gas_sensors_init+0xa2>
    12c0:	4a 2d       	mov	r20, r10
    12c2:	41 11       	cpse	r20, r1
    12c4:	07 c0       	rjmp	.+14     	; 0x12d4 <gas_sensors_init+0xb4>
    12c6:	4b 2d       	mov	r20, r11
    12c8:	82 17       	cp	r24, r18
    12ca:	93 07       	cpc	r25, r19
    12cc:	08 f0       	brcs	.+2      	; 0x12d0 <gas_sensors_init+0xb0>
    12ce:	4a 2d       	mov	r20, r10
    12d0:	44 23       	and	r20, r20
    12d2:	71 f0       	breq	.+28     	; 0x12f0 <gas_sensors_init+0xd0>
		{
			SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
    12d4:	99 81       	ldd	r25, Y+1	; 0x01
    12d6:	20 91 cc 04 	lds	r18, 0x04CC	; 0x8004cc <gas_sensor_initialization_errors>
    12da:	9d 5f       	subi	r25, 0xFD	; 253
    12dc:	a6 01       	movw	r20, r12
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <gas_sensors_init+0xc4>
    12e0:	44 0f       	add	r20, r20
    12e2:	55 1f       	adc	r21, r21
    12e4:	9a 95       	dec	r25
    12e6:	e2 f7       	brpl	.-8      	; 0x12e0 <gas_sensors_init+0xc0>
    12e8:	ca 01       	movw	r24, r20
    12ea:	82 2b       	or	r24, r18
    12ec:	80 93 cc 04 	sts	0x04CC, r24	; 0x8004cc <gas_sensor_initialization_errors>
	
	// Enable the ADC
	SetBit(ADCSRA, ADEN);
	
	//Read initial value from the sensors
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	8f 5f       	subi	r24, 0xFF	; 255
    12f4:	89 83       	std	Y+1, r24	; 0x01
    12f6:	89 81       	ldd	r24, Y+1	; 0x01
    12f8:	85 30       	cpi	r24, 0x05	; 5
    12fa:	08 f4       	brcc	.+2      	; 0x12fe <gas_sensors_init+0xde>
    12fc:	bb cf       	rjmp	.-138    	; 0x1274 <gas_sensors_init+0x54>
		if ((ADC_result < gas_sensor_boundaries[sensor_id][0])|(ADC_result > gas_sensor_boundaries[sensor_id][1]))
		{
			SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
		}		
	}
	ClearBit(ADCSRA, ADEN);  //Disable the ADC until we go operational
    12fe:	ea e7       	ldi	r30, 0x7A	; 122
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	80 81       	ld	r24, Z
    1304:	8f 77       	andi	r24, 0x7F	; 127
    1306:	80 83       	st	Z, r24
	// Report status via the LED that the gas sensors are ready (or not)
	//display_status(gas_sensors, gas_sensor_initialization_errors);
}
    1308:	0f 90       	pop	r0
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	ff 90       	pop	r15
    1314:	ef 90       	pop	r14
    1316:	df 90       	pop	r13
    1318:	cf 90       	pop	r12
    131a:	bf 90       	pop	r11
    131c:	af 90       	pop	r10
    131e:	08 95       	ret

00001320 <start_gas_sensor_read>:

void start_gas_sensor_read(void)
{
    1320:	8f 92       	push	r8
    1322:	9f 92       	push	r9
    1324:	af 92       	push	r10
    1326:	bf 92       	push	r11
    1328:	cf 92       	push	r12
    132a:	df 92       	push	r13
    132c:	ef 92       	push	r14
    132e:	ff 92       	push	r15
    1330:	0f 93       	push	r16
    1332:	1f 93       	push	r17
    1334:	cf 93       	push	r28
    1336:	df 93       	push	r29
    1338:	00 d0       	rcall	.+0      	; 0x133a <start_gas_sensor_read+0x1a>
    133a:	1f 92       	push	r1
    133c:	cd b7       	in	r28, 0x3d	; 61
    133e:	de b7       	in	r29, 0x3e	; 62
	int16_t ADC_result;
	volatile int16_t total;
	int16_t gas_average;
	
	// Enable the ADC
	SetBit(ADCSRA, ADEN);
    1340:	ea e7       	ldi	r30, 0x7A	; 122
    1342:	f0 e0       	ldi	r31, 0x00	; 0
    1344:	80 81       	ld	r24, Z
    1346:	80 68       	ori	r24, 0x80	; 128
    1348:	80 83       	st	Z, r24
	//Read initial value from the sensors
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
    134a:	19 82       	std	Y+1, r1	; 0x01
    134c:	89 81       	ldd	r24, Y+1	; 0x01
    134e:	85 30       	cpi	r24, 0x05	; 5
    1350:	08 f0       	brcs	.+2      	; 0x1354 <start_gas_sensor_read+0x34>
    1352:	77 c0       	rjmp	.+238    	; 0x1442 <start_gas_sensor_read+0x122>
	{
		ADC_SetMux(sensor_id);
		total = 0;	// re-zero the average
    1354:	68 94       	set
    1356:	88 24       	eor	r8, r8
    1358:	82 f8       	bld	r8, 2
    135a:	91 2c       	mov	r9, r1
		
		for(int i = 0; i < max_gas_sample_count; i++)
		{
			// Start conversion
			SetBit(ADCSRA, ADSC);
    135c:	0a e7       	ldi	r16, 0x7A	; 122
    135e:	10 e0       	ldi	r17, 0x00	; 0
			{
				// Wait for conversion to be complete
				// NOTE: In production version, we should wait for the interrupt and process in the background
			}
			// Read result
			ADC_result = ADC;
    1360:	0f 2e       	mov	r0, r31
    1362:	f8 e7       	ldi	r31, 0x78	; 120
    1364:	ef 2e       	mov	r14, r31
    1366:	f1 2c       	mov	r15, r1
    1368:	f0 2d       	mov	r31, r0
			// Test the reading to ensure it is within acceptable boundaries
			if ((ADC_result < gas_sensor_boundaries[sensor_id][0])|(ADC_result > gas_sensor_boundaries[sensor_id][1]))
			{
				SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
    136a:	cc 24       	eor	r12, r12
    136c:	c3 94       	inc	r12
    136e:	d1 2c       	mov	r13, r1
				// NOTE: In production version, we should wait for the interrupt and process in the background
			}
			// Read result
			ADC_result = ADC;
			// Test the reading to ensure it is within acceptable boundaries
			if ((ADC_result < gas_sensor_boundaries[sensor_id][0])|(ADC_result > gas_sensor_boundaries[sensor_id][1]))
    1370:	bb 24       	eor	r11, r11
    1372:	b3 94       	inc	r11
    1374:	a1 2c       	mov	r10, r1
	// Enable the ADC
	SetBit(ADCSRA, ADEN);
	//Read initial value from the sensors
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
	{
		ADC_SetMux(sensor_id);
    1376:	89 81       	ldd	r24, Y+1	; 0x01
    1378:	0e 94 b8 00 	call	0x170	; 0x170 <ADC_SetMux>
		total = 0;	// re-zero the average
    137c:	1b 82       	std	Y+3, r1	; 0x03
    137e:	1a 82       	std	Y+2, r1	; 0x02
    1380:	28 2d       	mov	r18, r8
    1382:	39 2d       	mov	r19, r9
		
		for(int i = 0; i < max_gas_sample_count; i++)
		{
			// Start conversion
			SetBit(ADCSRA, ADSC);
    1384:	f8 01       	movw	r30, r16
    1386:	80 81       	ld	r24, Z
    1388:	80 64       	ori	r24, 0x40	; 64
    138a:	80 83       	st	Z, r24
			while (BitIsClear(ADCSRA, ADIF))
    138c:	f8 01       	movw	r30, r16
    138e:	80 81       	ld	r24, Z
    1390:	84 ff       	sbrs	r24, 4
    1392:	fc cf       	rjmp	.-8      	; 0x138c <start_gas_sensor_read+0x6c>
			{
				// Wait for conversion to be complete
				// NOTE: In production version, we should wait for the interrupt and process in the background
			}
			// Read result
			ADC_result = ADC;
    1394:	f7 01       	movw	r30, r14
    1396:	80 81       	ld	r24, Z
    1398:	91 81       	ldd	r25, Z+1	; 0x01
			// Test the reading to ensure it is within acceptable boundaries
			if ((ADC_result < gas_sensor_boundaries[sensor_id][0])|(ADC_result > gas_sensor_boundaries[sensor_id][1]))
    139a:	e9 81       	ldd	r30, Y+1	; 0x01
    139c:	f0 e0       	ldi	r31, 0x00	; 0
    139e:	ee 0f       	add	r30, r30
    13a0:	ff 1f       	adc	r31, r31
    13a2:	ee 0f       	add	r30, r30
    13a4:	ff 1f       	adc	r31, r31
    13a6:	ea 5d       	subi	r30, 0xDA	; 218
    13a8:	fb 4f       	sbci	r31, 0xFB	; 251
    13aa:	40 81       	ld	r20, Z
    13ac:	51 81       	ldd	r21, Z+1	; 0x01
    13ae:	e9 81       	ldd	r30, Y+1	; 0x01
    13b0:	f0 e0       	ldi	r31, 0x00	; 0
    13b2:	ee 0f       	add	r30, r30
    13b4:	ff 1f       	adc	r31, r31
    13b6:	ee 0f       	add	r30, r30
    13b8:	ff 1f       	adc	r31, r31
    13ba:	ea 5d       	subi	r30, 0xDA	; 218
    13bc:	fb 4f       	sbci	r31, 0xFB	; 251
    13be:	62 81       	ldd	r22, Z+2	; 0x02
    13c0:	73 81       	ldd	r23, Z+3	; 0x03
    13c2:	eb 2d       	mov	r30, r11
    13c4:	68 17       	cp	r22, r24
    13c6:	79 07       	cpc	r23, r25
    13c8:	08 f0       	brcs	.+2      	; 0x13cc <start_gas_sensor_read+0xac>
    13ca:	ea 2d       	mov	r30, r10
    13cc:	e1 11       	cpse	r30, r1
    13ce:	07 c0       	rjmp	.+14     	; 0x13de <start_gas_sensor_read+0xbe>
    13d0:	6b 2d       	mov	r22, r11
    13d2:	84 17       	cp	r24, r20
    13d4:	95 07       	cpc	r25, r21
    13d6:	08 f0       	brcs	.+2      	; 0x13da <start_gas_sensor_read+0xba>
    13d8:	6a 2d       	mov	r22, r10
    13da:	66 23       	and	r22, r22
    13dc:	71 f0       	breq	.+28     	; 0x13fa <start_gas_sensor_read+0xda>
			{
				SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
    13de:	59 81       	ldd	r21, Y+1	; 0x01
    13e0:	60 91 cc 04 	lds	r22, 0x04CC	; 0x8004cc <gas_sensor_initialization_errors>
    13e4:	5d 5f       	subi	r21, 0xFD	; 253
    13e6:	f6 01       	movw	r30, r12
    13e8:	02 c0       	rjmp	.+4      	; 0x13ee <start_gas_sensor_read+0xce>
    13ea:	ee 0f       	add	r30, r30
    13ec:	ff 1f       	adc	r31, r31
    13ee:	5a 95       	dec	r21
    13f0:	e2 f7       	brpl	.-8      	; 0x13ea <start_gas_sensor_read+0xca>
    13f2:	af 01       	movw	r20, r30
    13f4:	46 2b       	or	r20, r22
    13f6:	40 93 cc 04 	sts	0x04CC, r20	; 0x8004cc <gas_sensor_initialization_errors>
			}
			total += ADC_result;
    13fa:	4a 81       	ldd	r20, Y+2	; 0x02
    13fc:	5b 81       	ldd	r21, Y+3	; 0x03
    13fe:	84 0f       	add	r24, r20
    1400:	95 1f       	adc	r25, r21
    1402:	9b 83       	std	Y+3, r25	; 0x03
    1404:	8a 83       	std	Y+2, r24	; 0x02
    1406:	21 50       	subi	r18, 0x01	; 1
    1408:	31 09       	sbc	r19, r1
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
	{
		ADC_SetMux(sensor_id);
		total = 0;	// re-zero the average
		
		for(int i = 0; i < max_gas_sample_count; i++)
    140a:	09 f0       	breq	.+2      	; 0x140e <start_gas_sensor_read+0xee>
    140c:	bb cf       	rjmp	.-138    	; 0x1384 <start_gas_sensor_read+0x64>
			{
				SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
			}
			total += ADC_result;
		}
		gas_average = total / max_gas_sample_count;
    140e:	8a 81       	ldd	r24, Y+2	; 0x02
    1410:	9b 81       	ldd	r25, Y+3	; 0x03
		raw_gas_vector[sensor_id] = gas_average;
    1412:	e9 81       	ldd	r30, Y+1	; 0x01
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	ee 0f       	add	r30, r30
    1418:	ff 1f       	adc	r31, r31
    141a:	e4 56       	subi	r30, 0x64	; 100
    141c:	fb 4f       	sbci	r31, 0xFB	; 251
			{
				SetBit(gas_sensor_initialization_errors,(sensor_id+3));  // If not, report an error
			}
			total += ADC_result;
		}
		gas_average = total / max_gas_sample_count;
    141e:	9c 01       	movw	r18, r24
    1420:	99 23       	and	r25, r25
    1422:	14 f4       	brge	.+4      	; 0x1428 <start_gas_sensor_read+0x108>
    1424:	2d 5f       	subi	r18, 0xFD	; 253
    1426:	3f 4f       	sbci	r19, 0xFF	; 255
    1428:	35 95       	asr	r19
    142a:	27 95       	ror	r18
    142c:	35 95       	asr	r19
    142e:	27 95       	ror	r18
		raw_gas_vector[sensor_id] = gas_average;
    1430:	31 83       	std	Z+1, r19	; 0x01
    1432:	20 83       	st	Z, r18
	int16_t gas_average;
	
	// Enable the ADC
	SetBit(ADCSRA, ADEN);
	//Read initial value from the sensors
	for(sensor_id = 0; sensor_id < 5; sensor_id++)
    1434:	89 81       	ldd	r24, Y+1	; 0x01
    1436:	8f 5f       	subi	r24, 0xFF	; 255
    1438:	89 83       	std	Y+1, r24	; 0x01
    143a:	89 81       	ldd	r24, Y+1	; 0x01
    143c:	85 30       	cpi	r24, 0x05	; 5
    143e:	08 f4       	brcc	.+2      	; 0x1442 <start_gas_sensor_read+0x122>
    1440:	9a cf       	rjmp	.-204    	; 0x1376 <start_gas_sensor_read+0x56>
			total += ADC_result;
		}
		gas_average = total / max_gas_sample_count;
		raw_gas_vector[sensor_id] = gas_average;
	}
}
    1442:	0f 90       	pop	r0
    1444:	0f 90       	pop	r0
    1446:	0f 90       	pop	r0
    1448:	df 91       	pop	r29
    144a:	cf 91       	pop	r28
    144c:	1f 91       	pop	r17
    144e:	0f 91       	pop	r16
    1450:	ff 90       	pop	r15
    1452:	ef 90       	pop	r14
    1454:	df 90       	pop	r13
    1456:	cf 90       	pop	r12
    1458:	bf 90       	pop	r11
    145a:	af 90       	pop	r10
    145c:	9f 90       	pop	r9
    145e:	8f 90       	pop	r8
    1460:	08 95       	ret

00001462 <binary_search>:

void binary_search(int array[], int top, int bottom, int number) //return value directly above & below number
{
    1462:	cf 93       	push	r28
    1464:	df 93       	push	r29
	if ((number > array[top]) && (number < array[bottom]))
    1466:	fb 01       	movw	r30, r22
    1468:	ee 0f       	add	r30, r30
    146a:	ff 1f       	adc	r31, r31
    146c:	e8 0f       	add	r30, r24
    146e:	f9 1f       	adc	r31, r25
    1470:	01 90       	ld	r0, Z+
    1472:	f0 81       	ld	r31, Z
    1474:	e0 2d       	mov	r30, r0
    1476:	e2 17       	cp	r30, r18
    1478:	f3 07       	cpc	r31, r19
    147a:	cc f5       	brge	.+114    	; 0x14ee <binary_search+0x8c>
    147c:	fa 01       	movw	r30, r20
    147e:	ee 0f       	add	r30, r30
    1480:	ff 1f       	adc	r31, r31
    1482:	e8 0f       	add	r30, r24
    1484:	f9 1f       	adc	r31, r25
    1486:	01 90       	ld	r0, Z+
    1488:	f0 81       	ld	r31, Z
    148a:	e0 2d       	mov	r30, r0
    148c:	2e 17       	cp	r18, r30
    148e:	3f 07       	cpc	r19, r31
    1490:	74 f5       	brge	.+92     	; 0x14ee <binary_search+0x8c>
	{
		int mid = bottom + (top - bottom)/2;
    1492:	db 01       	movw	r26, r22
    1494:	a4 1b       	sub	r26, r20
    1496:	b5 0b       	sbc	r27, r21
    1498:	fd 01       	movw	r30, r26
    149a:	0a f4       	brpl	.+2      	; 0x149e <binary_search+0x3c>
    149c:	31 96       	adiw	r30, 0x01	; 1
    149e:	f5 95       	asr	r31
    14a0:	e7 95       	ror	r30
    14a2:	e4 0f       	add	r30, r20
    14a4:	f5 1f       	adc	r31, r21
		
		// If the element is closest to the middle
		if (number >= array[mid] && number <= array [mid + 1])
    14a6:	df 01       	movw	r26, r30
    14a8:	aa 0f       	add	r26, r26
    14aa:	bb 1f       	adc	r27, r27
    14ac:	ec 01       	movw	r28, r24
    14ae:	ca 0f       	add	r28, r26
    14b0:	db 1f       	adc	r29, r27
    14b2:	09 90       	ld	r0, Y+
    14b4:	d8 81       	ld	r29, Y
    14b6:	c0 2d       	mov	r28, r0
    14b8:	2c 17       	cp	r18, r28
    14ba:	3d 07       	cpc	r19, r29
    14bc:	8c f0       	brlt	.+34     	; 0x14e0 <binary_search+0x7e>
    14be:	a8 0f       	add	r26, r24
    14c0:	b9 1f       	adc	r27, r25
    14c2:	12 96       	adiw	r26, 0x02	; 2
    14c4:	4d 91       	ld	r20, X+
    14c6:	5c 91       	ld	r21, X
    14c8:	13 97       	sbiw	r26, 0x03	; 3
    14ca:	42 17       	cp	r20, r18
    14cc:	53 07       	cpc	r21, r19
    14ce:	5c f0       	brlt	.+22     	; 0x14e6 <binary_search+0x84>
		{
			valueOfIndex = mid + 1;
    14d0:	af 01       	movw	r20, r30
    14d2:	4f 5f       	subi	r20, 0xFF	; 255
    14d4:	5f 4f       	sbci	r21, 0xFF	; 255
    14d6:	50 93 fa 04 	sts	0x04FA, r21	; 0x8004fa <valueOfIndex+0x1>
    14da:	40 93 f9 04 	sts	0x04F9, r20	; 0x8004f9 <valueOfIndex>
    14de:	03 c0       	rjmp	.+6      	; 0x14e6 <binary_search+0x84>
		}
		
		// If element is smaller than mid, then
		// it can only be present in left subarray
		else if (number < array[mid])
		return binary_search(array, mid, bottom, number);
    14e0:	bf 01       	movw	r22, r30
    14e2:	bf df       	rcall	.-130    	; 0x1462 <binary_search>
    14e4:	04 c0       	rjmp	.+8      	; 0x14ee <binary_search+0x8c>
		
		// Else the element can only be present
		// in right subarray
		return binary_search(array, top, mid+1, number);
    14e6:	af 01       	movw	r20, r30
    14e8:	4f 5f       	subi	r20, 0xFF	; 255
    14ea:	5f 4f       	sbci	r21, 0xFF	; 255
    14ec:	ba df       	rcall	.-140    	; 0x1462 <binary_search>
		return 0;
	}
	// We reach here when element is not
	// present in array
	//printf('value not in array');
}
    14ee:	df 91       	pop	r29
    14f0:	cf 91       	pop	r28
    14f2:	08 95       	ret

000014f4 <convert_to_ppm>:

uint16_t convert_to_ppm(uint8_t sensor_id)
{
    14f4:	cf 93       	push	r28
    14f6:	df 93       	push	r29
    14f8:	cd b7       	in	r28, 0x3d	; 61
    14fa:	de b7       	in	r29, 0x3e	; 62
    14fc:	da 95       	dec	r29
    14fe:	0f b6       	in	r0, 0x3f	; 63
    1500:	f8 94       	cli
    1502:	de bf       	out	0x3e, r29	; 62
    1504:	0f be       	out	0x3f, r0	; 63
    1506:	cd bf       	out	0x3d, r28	; 61
	int R0_VALS_GAS_SENSORS[6] = {381, 508, 308, 405, 38, 0}; //all R0 values. We may have a 6th sensor but it is currently not in existence
	int R0_RATIOS_CO[2][64] = {{101, 99, 98, 96, 95, 93, 92, 90, 89, 87, 86, 84, 83, 81, 80, 78, 77, 75, 74, 72, 71, 69, 67, 66, 64, 63, 61, 60,
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	ea e3       	ldi	r30, 0x3A	; 58
    150c:	f1 e0       	ldi	r31, 0x01	; 1
    150e:	de 01       	movw	r26, r28
    1510:	11 96       	adiw	r26, 0x01	; 1
    1512:	01 90       	ld	r0, Z+
    1514:	0d 92       	st	X+, r0
    1516:	8a 95       	dec	r24
    1518:	e1 f7       	brne	.-8      	; 0x1512 <convert_to_ppm+0x1e>
	58, 57, 55, 54, 52, 51, 49, 48, 46, 45, 43, 42, 40, 39, 37, 35, 34, 32, 31, 29, 28, 26, 25, 23, 22, 20, 19, 17, 16, 14, 13, 11, 10, 8, 7, 5}, //R0 ratio corresponding to certain ppm val
	{44, 52, 53, 54, 55, 57, 57, 59, 60, 62, 64, 66, 67, 70, 71, 74, 75, 78, 80, 83, 85, 88, 92, 94, 99, 102, 107, 110, 116, 119, 125, 128,
	135, 139, 146, 150, 159, 163, 174, 180, 192, 200, 216, 233, 243, 264, 278, 306, 323, 359, 381, 432, 466, 542, 586, 699, 779, 980, 1101, 1434, 1684, 2409, 2955, 4563}};//PPM values
	baseIndexToTable = 0;
    151a:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <baseIndexToTable+0x1>
    151e:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <baseIndexToTable>
	interpolationNum = 0;
    1522:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <interpolationNum+0x1>
    1526:	10 92 6d 04 	sts	0x046D, r1	; 0x80046d <interpolationNum>
	numTimes256 = 0;
    152a:	10 92 8c 04 	sts	0x048C, r1	; 0x80048c <numTimes256+0x1>
    152e:	10 92 8b 04 	sts	0x048B, r1	; 0x80048b <numTimes256>
	valueOfIndex = 0;
    1532:	10 92 fa 04 	sts	0x04FA, r1	; 0x8004fa <valueOfIndex+0x1>
    1536:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <valueOfIndex>
	
	//Per sensor - make look-up table w/ values corresponding to out put. 
	//Get approx ppm
	//write equation
	//First sensor is CO
	numTimes256 = (raw_gas_vector[0]<<8)/(R0_VALS_GAS_SENSORS[0]); //temporary routine while there is only 1 sensor, will be put into a loop later
    153a:	80 e0       	ldi	r24, 0x00	; 0
    153c:	90 91 9c 04 	lds	r25, 0x049C	; 0x80049c <raw_gas_vector>
    1540:	6d e7       	ldi	r22, 0x7D	; 125
    1542:	71 e0       	ldi	r23, 0x01	; 1
    1544:	8e d3       	rcall	.+1820   	; 0x1c62 <__udivmodhi4>
    1546:	70 93 8c 04 	sts	0x048C, r23	; 0x80048c <numTimes256+0x1>
    154a:	60 93 8b 04 	sts	0x048B, r22	; 0x80048b <numTimes256>
	interpolationNum = 0x03 || numTimes256;
    154e:	81 e0       	ldi	r24, 0x01	; 1
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	90 93 6e 04 	sts	0x046E, r25	; 0x80046e <interpolationNum+0x1>
    1556:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <interpolationNum>
	baseIndexToTable = numTimes256 >> 2;
    155a:	80 91 8b 04 	lds	r24, 0x048B	; 0x80048b <numTimes256>
    155e:	90 91 8c 04 	lds	r25, 0x048C	; 0x80048c <numTimes256+0x1>
    1562:	95 95       	asr	r25
    1564:	87 95       	ror	r24
    1566:	95 95       	asr	r25
    1568:	87 95       	ror	r24
    156a:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <baseIndexToTable+0x1>
    156e:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <baseIndexToTable>
	binary_search(R0_RATIOS_CO[0], 0, 63, baseIndexToTable);
    1572:	20 91 91 04 	lds	r18, 0x0491	; 0x800491 <baseIndexToTable>
    1576:	30 91 92 04 	lds	r19, 0x0492	; 0x800492 <baseIndexToTable+0x1>
    157a:	4f e3       	ldi	r20, 0x3F	; 63
    157c:	50 e0       	ldi	r21, 0x00	; 0
    157e:	60 e0       	ldi	r22, 0x00	; 0
    1580:	70 e0       	ldi	r23, 0x00	; 0
    1582:	ce 01       	movw	r24, r28
    1584:	01 96       	adiw	r24, 0x01	; 1
    1586:	6d df       	rcall	.-294    	; 0x1462 <binary_search>
	ppmValue[0] = (((R0_RATIOS_CO[1][valueOfIndex] - R0_RATIOS_CO[1][valueOfIndex-1])*interpolationNum)>>4) + R0_RATIOS_CO[1][valueOfIndex-1];
    1588:	80 91 f9 04 	lds	r24, 0x04F9	; 0x8004f9 <valueOfIndex>
    158c:	90 91 fa 04 	lds	r25, 0x04FA	; 0x8004fa <valueOfIndex+0x1>
    1590:	a0 91 f9 04 	lds	r26, 0x04F9	; 0x8004f9 <valueOfIndex>
    1594:	b0 91 fa 04 	lds	r27, 0x04FA	; 0x8004fa <valueOfIndex+0x1>
    1598:	20 91 6d 04 	lds	r18, 0x046D	; 0x80046d <interpolationNum>
    159c:	30 91 6e 04 	lds	r19, 0x046E	; 0x80046e <interpolationNum+0x1>
    15a0:	60 91 f9 04 	lds	r22, 0x04F9	; 0x8004f9 <valueOfIndex>
    15a4:	70 91 fa 04 	lds	r23, 0x04FA	; 0x8004fa <valueOfIndex+0x1>
    15a8:	80 5c       	subi	r24, 0xC0	; 192
    15aa:	9f 4f       	sbci	r25, 0xFF	; 255
    15ac:	88 0f       	add	r24, r24
    15ae:	99 1f       	adc	r25, r25
    15b0:	41 e0       	ldi	r20, 0x01	; 1
    15b2:	50 e0       	ldi	r21, 0x00	; 0
    15b4:	4c 0f       	add	r20, r28
    15b6:	5d 1f       	adc	r21, r29
    15b8:	84 0f       	add	r24, r20
    15ba:	95 1f       	adc	r25, r21
    15bc:	df 96       	adiw	r26, 0x3f	; 63
    15be:	aa 0f       	add	r26, r26
    15c0:	bb 1f       	adc	r27, r27
    15c2:	a4 0f       	add	r26, r20
    15c4:	b5 1f       	adc	r27, r21
    15c6:	fc 01       	movw	r30, r24
    15c8:	40 81       	ld	r20, Z
    15ca:	51 81       	ldd	r21, Z+1	; 0x01
    15cc:	8d 91       	ld	r24, X+
    15ce:	9c 91       	ld	r25, X
    15d0:	48 1b       	sub	r20, r24
    15d2:	59 0b       	sbc	r21, r25
    15d4:	42 9f       	mul	r20, r18
    15d6:	c0 01       	movw	r24, r0
    15d8:	43 9f       	mul	r20, r19
    15da:	90 0d       	add	r25, r0
    15dc:	52 9f       	mul	r21, r18
    15de:	90 0d       	add	r25, r0
    15e0:	11 24       	eor	r1, r1
    15e2:	95 95       	asr	r25
    15e4:	87 95       	ror	r24
    15e6:	95 95       	asr	r25
    15e8:	87 95       	ror	r24
    15ea:	95 95       	asr	r25
    15ec:	87 95       	ror	r24
    15ee:	95 95       	asr	r25
    15f0:	87 95       	ror	r24
    15f2:	fb 01       	movw	r30, r22
    15f4:	ff 96       	adiw	r30, 0x3f	; 63
    15f6:	ee 0f       	add	r30, r30
    15f8:	ff 1f       	adc	r31, r31
    15fa:	21 e0       	ldi	r18, 0x01	; 1
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	2c 0f       	add	r18, r28
    1600:	3d 1f       	adc	r19, r29
    1602:	e2 0f       	add	r30, r18
    1604:	f3 1f       	adc	r31, r19
    1606:	20 81       	ld	r18, Z
    1608:	31 81       	ldd	r19, Z+1	; 0x01
    160a:	82 0f       	add	r24, r18
    160c:	93 1f       	adc	r25, r19
    160e:	90 93 7b 04 	sts	0x047B, r25	; 0x80047b <ppmValue+0x1>
    1612:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <ppmValue>

}
    1616:	d3 95       	inc	r29
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	f8 94       	cli
    161c:	de bf       	out	0x3e, r29	; 62
    161e:	0f be       	out	0x3f, r0	; 63
    1620:	cd bf       	out	0x3d, r28	; 61
    1622:	df 91       	pop	r29
    1624:	cf 91       	pop	r28
    1626:	08 95       	ret

00001628 <main>:
    1628:	ae dd       	rcall	.-1188   	; 0x1186 <canary_io_pin_initialization>
    162a:	10 92 00 05 	sts	0x0500, r1	; 0x800500 <seconds+0x1>
    162e:	10 92 ff 04 	sts	0x04FF, r1	; 0x8004ff <seconds>
    1632:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <ItsTime>
    1636:	8b e2       	ldi	r24, 0x2B	; 43
    1638:	91 e0       	ldi	r25, 0x01	; 1
    163a:	90 93 04 07 	sts	0x0704, r25	; 0x800704 <__iob+0x3>
    163e:	80 93 03 07 	sts	0x0703, r24	; 0x800703 <__iob+0x2>
    1642:	3e d1       	rcall	.+636    	; 0x18c0 <initialize_timer_counter_1>
    1644:	81 e8       	ldi	r24, 0x81	; 129
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	38 d2       	rcall	.+1136   	; 0x1aba <USART0_init>
    164a:	81 e8       	ldi	r24, 0x81	; 129
    164c:	90 e0       	ldi	r25, 0x00	; 0
    164e:	90 d2       	rcall	.+1312   	; 0x1b70 <USART1_init>
    1650:	57 d1       	rcall	.+686    	; 0x1900 <TWI_Master_Initialise>
    1652:	0e 94 c1 00 	call	0x182	; 0x182 <ADC_init>
    1656:	e4 dd       	rcall	.-1080   	; 0x1220 <gas_sensors_init>
    1658:	2a 9a       	sbi	0x05, 2	; 5
    165a:	2a 98       	cbi	0x05, 2	; 5
    165c:	78 94       	sei
    165e:	0e 94 aa 02 	call	0x554	; 0x554 <bme280basic_init>
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	91 e0       	ldi	r25, 0x01	; 1
    1666:	9f 93       	push	r25
    1668:	8f 93       	push	r24
    166a:	8a e3       	ldi	r24, 0x3A	; 58
    166c:	92 e0       	ldi	r25, 0x02	; 2
    166e:	9f 93       	push	r25
    1670:	8f 93       	push	r24
    1672:	a9 d4       	rcall	.+2386   	; 0x1fc6 <printf>
    1674:	95 b1       	in	r25, 0x05	; 5
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	98 27       	eor	r25, r24
    167a:	95 b9       	out	0x05, r25	; 5
    167c:	95 b1       	in	r25, 0x05	; 5
    167e:	89 27       	eor	r24, r25
    1680:	85 b9       	out	0x05, r24	; 5
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	0f 90       	pop	r0
    168a:	0f 2e       	mov	r0, r31
    168c:	fe e3       	ldi	r31, 0x3E	; 62
    168e:	af 2e       	mov	r10, r31
    1690:	f2 e0       	ldi	r31, 0x02	; 2
    1692:	bf 2e       	mov	r11, r31
    1694:	f0 2d       	mov	r31, r0
    1696:	0f 2e       	mov	r0, r31
    1698:	f1 e0       	ldi	r31, 0x01	; 1
    169a:	cf 2e       	mov	r12, r31
    169c:	f6 e0       	ldi	r31, 0x06	; 6
    169e:	df 2e       	mov	r13, r31
    16a0:	f0 2d       	mov	r31, r0
    16a2:	0f 2e       	mov	r0, r31
    16a4:	fa e3       	ldi	r31, 0x3A	; 58
    16a6:	ef 2e       	mov	r14, r31
    16a8:	f2 e0       	ldi	r31, 0x02	; 2
    16aa:	ff 2e       	mov	r15, r31
    16ac:	f0 2d       	mov	r31, r0
    16ae:	0c e4       	ldi	r16, 0x4C	; 76
    16b0:	12 e0       	ldi	r17, 0x02	; 2
    16b2:	cc e9       	ldi	r28, 0x9C	; 156
    16b4:	d4 e0       	ldi	r29, 0x04	; 4
    16b6:	0f 2e       	mov	r0, r31
    16b8:	f1 e6       	ldi	r31, 0x61	; 97
    16ba:	8f 2e       	mov	r8, r31
    16bc:	f2 e0       	ldi	r31, 0x02	; 2
    16be:	9f 2e       	mov	r9, r31
    16c0:	f0 2d       	mov	r31, r0
    16c2:	0f 2e       	mov	r0, r31
    16c4:	fa e6       	ldi	r31, 0x6A	; 106
    16c6:	2f 2e       	mov	r2, r31
    16c8:	f2 e0       	ldi	r31, 0x02	; 2
    16ca:	3f 2e       	mov	r3, r31
    16cc:	f0 2d       	mov	r31, r0
    16ce:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <ItsTime>
    16d2:	81 30       	cpi	r24, 0x01	; 1
    16d4:	e1 f7       	brne	.-8      	; 0x16ce <main+0xa6>
    16d6:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <ItsTime>
    16da:	80 91 ff 04 	lds	r24, 0x04FF	; 0x8004ff <seconds>
    16de:	90 91 00 05 	lds	r25, 0x0500	; 0x800500 <seconds+0x1>
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	90 93 00 05 	sts	0x0500, r25	; 0x800500 <seconds+0x1>
    16e8:	80 93 ff 04 	sts	0x04FF, r24	; 0x8004ff <seconds>
    16ec:	80 91 ff 04 	lds	r24, 0x04FF	; 0x8004ff <seconds>
    16f0:	90 91 00 05 	lds	r25, 0x0500	; 0x800500 <seconds+0x1>
    16f4:	9f 93       	push	r25
    16f6:	8f 93       	push	r24
    16f8:	bf 92       	push	r11
    16fa:	af 92       	push	r10
    16fc:	64 d4       	rcall	.+2248   	; 0x1fc6 <printf>
    16fe:	df 92       	push	r13
    1700:	cf 92       	push	r12
    1702:	ff 92       	push	r15
    1704:	ef 92       	push	r14
    1706:	5f d4       	rcall	.+2238   	; 0x1fc6 <printf>
    1708:	80 91 79 04 	lds	r24, 0x0479	; 0x800479 <distance+0x1>
    170c:	8f 93       	push	r24
    170e:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <distance>
    1712:	8f 93       	push	r24
    1714:	1f 93       	push	r17
    1716:	0f 93       	push	r16
    1718:	56 d4       	rcall	.+2220   	; 0x1fc6 <printf>
    171a:	02 de       	rcall	.-1020   	; 0x1320 <start_gas_sensor_read>
    171c:	89 81       	ldd	r24, Y+1	; 0x01
    171e:	8f 93       	push	r24
    1720:	88 81       	ld	r24, Y
    1722:	8f 93       	push	r24
    1724:	9f 92       	push	r9
    1726:	8f 92       	push	r8
    1728:	4e d4       	rcall	.+2204   	; 0x1fc6 <printf>
    172a:	8b 81       	ldd	r24, Y+3	; 0x03
    172c:	8f 93       	push	r24
    172e:	8a 81       	ldd	r24, Y+2	; 0x02
    1730:	8f 93       	push	r24
    1732:	3f 92       	push	r3
    1734:	2f 92       	push	r2
    1736:	47 d4       	rcall	.+2190   	; 0x1fc6 <printf>
    1738:	8d 81       	ldd	r24, Y+5	; 0x05
    173a:	8f 93       	push	r24
    173c:	8c 81       	ldd	r24, Y+4	; 0x04
    173e:	8f 93       	push	r24
    1740:	a2 e7       	ldi	r26, 0x72	; 114
    1742:	b2 e0       	ldi	r27, 0x02	; 2
    1744:	bf 93       	push	r27
    1746:	af 93       	push	r26
    1748:	3e d4       	rcall	.+2172   	; 0x1fc6 <printf>
    174a:	8f 81       	ldd	r24, Y+7	; 0x07
    174c:	8f 93       	push	r24
    174e:	8e 81       	ldd	r24, Y+6	; 0x06
    1750:	8f 93       	push	r24
    1752:	ab e7       	ldi	r26, 0x7B	; 123
    1754:	b2 e0       	ldi	r27, 0x02	; 2
    1756:	bf 93       	push	r27
    1758:	af 93       	push	r26
    175a:	35 d4       	rcall	.+2154   	; 0x1fc6 <printf>
    175c:	89 85       	ldd	r24, Y+9	; 0x09
    175e:	8f 93       	push	r24
    1760:	88 85       	ldd	r24, Y+8	; 0x08
    1762:	8f 93       	push	r24
    1764:	a5 e8       	ldi	r26, 0x85	; 133
    1766:	b2 e0       	ldi	r27, 0x02	; 2
    1768:	bf 93       	push	r27
    176a:	af 93       	push	r26
    176c:	2c d4       	rcall	.+2136   	; 0x1fc6 <printf>
    176e:	ad b7       	in	r26, 0x3d	; 61
    1770:	be b7       	in	r27, 0x3e	; 62
    1772:	90 96       	adiw	r26, 0x20	; 32
    1774:	0f b6       	in	r0, 0x3f	; 63
    1776:	f8 94       	cli
    1778:	be bf       	out	0x3e, r27	; 62
    177a:	0f be       	out	0x3f, r0	; 63
    177c:	ad bf       	out	0x3d, r26	; 61
    177e:	0e 94 13 03 	call	0x626	; 0x626 <bme280basic_bulk_data_read>
    1782:	60 91 72 04 	lds	r22, 0x0472	; 0x800472 <rawTemp>
    1786:	70 91 73 04 	lds	r23, 0x0473	; 0x800473 <rawTemp+0x1>
    178a:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <rawTemp+0x2>
    178e:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <rawTemp+0x3>
    1792:	38 d8       	rcall	.-3984   	; 0x804 <BME280_compensate_T_int32>
    1794:	60 93 69 04 	sts	0x0469, r22	; 0x800469 <tempCelsius>
    1798:	70 93 6a 04 	sts	0x046A, r23	; 0x80046a <tempCelsius+0x1>
    179c:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <tempCelsius+0x2>
    17a0:	90 93 6c 04 	sts	0x046C, r25	; 0x80046c <tempCelsius+0x3>
    17a4:	9f 93       	push	r25
    17a6:	8f 93       	push	r24
    17a8:	7f 93       	push	r23
    17aa:	6f 93       	push	r22
    17ac:	ae e8       	ldi	r26, 0x8E	; 142
    17ae:	b2 e0       	ldi	r27, 0x02	; 2
    17b0:	bf 93       	push	r27
    17b2:	af 93       	push	r26
    17b4:	08 d4       	rcall	.+2064   	; 0x1fc6 <printf>
    17b6:	60 91 aa 04 	lds	r22, 0x04AA	; 0x8004aa <rawPress>
    17ba:	70 91 ab 04 	lds	r23, 0x04AB	; 0x8004ab <rawPress+0x1>
    17be:	80 91 ac 04 	lds	r24, 0x04AC	; 0x8004ac <rawPress+0x2>
    17c2:	90 91 ad 04 	lds	r25, 0x04AD	; 0x8004ad <rawPress+0x3>
    17c6:	ac d8       	rcall	.-3752   	; 0x920 <BME280_compensate_P_int64>
    17c8:	60 93 8d 04 	sts	0x048D, r22	; 0x80048d <pressure>
    17cc:	70 93 8e 04 	sts	0x048E, r23	; 0x80048e <pressure+0x1>
    17d0:	80 93 8f 04 	sts	0x048F, r24	; 0x80048f <pressure+0x2>
    17d4:	90 93 90 04 	sts	0x0490, r25	; 0x800490 <pressure+0x3>
    17d8:	bb 27       	eor	r27, r27
    17da:	97 fd       	sbrc	r25, 7
    17dc:	ba 95       	dec	r27
    17de:	a9 2f       	mov	r26, r25
    17e0:	98 2f       	mov	r25, r24
    17e2:	87 2f       	mov	r24, r23
    17e4:	bf 93       	push	r27
    17e6:	af 93       	push	r26
    17e8:	9f 93       	push	r25
    17ea:	8f 93       	push	r24
    17ec:	ad e9       	ldi	r26, 0x9D	; 157
    17ee:	b2 e0       	ldi	r27, 0x02	; 2
    17f0:	bf 93       	push	r27
    17f2:	af 93       	push	r26
    17f4:	e8 d3       	rcall	.+2000   	; 0x1fc6 <printf>
    17f6:	60 91 ae 04 	lds	r22, 0x04AE	; 0x8004ae <rawHum>
    17fa:	70 91 af 04 	lds	r23, 0x04AF	; 0x8004af <rawHum+0x1>
    17fe:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <rawHum+0x2>
    1802:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <rawHum+0x3>
    1806:	f6 da       	rcall	.-2580   	; 0xdf4 <bme280_compensate_H_int32>
    1808:	2b 01       	movw	r4, r22
    180a:	3c 01       	movw	r6, r24
    180c:	60 93 97 04 	sts	0x0497, r22	; 0x800497 <humidity>
    1810:	70 93 98 04 	sts	0x0498, r23	; 0x800498 <humidity+0x1>
    1814:	80 93 99 04 	sts	0x0499, r24	; 0x800499 <humidity+0x2>
    1818:	90 93 9a 04 	sts	0x049A, r25	; 0x80049a <humidity+0x3>
    181c:	a8 ee       	ldi	r26, 0xE8	; 232
    181e:	b3 e0       	ldi	r27, 0x03	; 3
    1820:	9b 01       	movw	r18, r22
    1822:	ac 01       	movw	r20, r24
    1824:	3b d2       	rcall	.+1142   	; 0x1c9c <__muluhisi3>
    1826:	dc 01       	movw	r26, r24
    1828:	cb 01       	movw	r24, r22
    182a:	07 2e       	mov	r0, r23
    182c:	7a e0       	ldi	r23, 0x0A	; 10
    182e:	b5 95       	asr	r27
    1830:	a7 95       	ror	r26
    1832:	97 95       	ror	r25
    1834:	87 95       	ror	r24
    1836:	7a 95       	dec	r23
    1838:	d1 f7       	brne	.-12     	; 0x182e <main+0x206>
    183a:	70 2d       	mov	r23, r0
    183c:	bf 93       	push	r27
    183e:	af 93       	push	r26
    1840:	9f 93       	push	r25
    1842:	8f 93       	push	r24
    1844:	d3 01       	movw	r26, r6
    1846:	c2 01       	movw	r24, r4
    1848:	07 2e       	mov	r0, r23
    184a:	7a e0       	ldi	r23, 0x0A	; 10
    184c:	b5 95       	asr	r27
    184e:	a7 95       	ror	r26
    1850:	97 95       	ror	r25
    1852:	87 95       	ror	r24
    1854:	7a 95       	dec	r23
    1856:	d1 f7       	brne	.-12     	; 0x184c <main+0x224>
    1858:	70 2d       	mov	r23, r0
    185a:	bf 93       	push	r27
    185c:	af 93       	push	r26
    185e:	9f 93       	push	r25
    1860:	8f 93       	push	r24
    1862:	a3 eb       	ldi	r26, 0xB3	; 179
    1864:	b2 e0       	ldi	r27, 0x02	; 2
    1866:	bf 93       	push	r27
    1868:	af 93       	push	r26
    186a:	ad d3       	rcall	.+1882   	; 0x1fc6 <printf>
    186c:	ad b7       	in	r26, 0x3d	; 61
    186e:	be b7       	in	r27, 0x3e	; 62
    1870:	56 96       	adiw	r26, 0x16	; 22
    1872:	0f b6       	in	r0, 0x3f	; 63
    1874:	f8 94       	cli
    1876:	be bf       	out	0x3e, r27	; 62
    1878:	0f be       	out	0x3f, r0	; 63
    187a:	ad bf       	out	0x3d, r26	; 61
    187c:	80 e0       	ldi	r24, 0x00	; 0
    187e:	3a de       	rcall	.-908    	; 0x14f4 <convert_to_ppm>
    1880:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <ppmValue>
    1884:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <ppmValue+0x1>
    1888:	9f 93       	push	r25
    188a:	8f 93       	push	r24
    188c:	8a ec       	ldi	r24, 0xCA	; 202
    188e:	92 e0       	ldi	r25, 0x02	; 2
    1890:	9f 93       	push	r25
    1892:	8f 93       	push	r24
    1894:	98 d3       	rcall	.+1840   	; 0x1fc6 <printf>
    1896:	e9 ec       	ldi	r30, 0xC9	; 201
    1898:	f0 e0       	ldi	r31, 0x00	; 0
    189a:	80 81       	ld	r24, Z
    189c:	80 69       	ori	r24, 0x90	; 144
    189e:	80 83       	st	Z, r24
    18a0:	0f 90       	pop	r0
    18a2:	0f 90       	pop	r0
    18a4:	0f 90       	pop	r0
    18a6:	0f 90       	pop	r0
    18a8:	12 cf       	rjmp	.-476    	; 0x16ce <main+0xa6>

000018aa <__vector_default>:
    18aa:	1f 92       	push	r1
    18ac:	0f 92       	push	r0
    18ae:	0f b6       	in	r0, 0x3f	; 63
    18b0:	0f 92       	push	r0
    18b2:	11 24       	eor	r1, r1
    18b4:	2a 9a       	sbi	0x05, 2	; 5
    18b6:	0f 90       	pop	r0
    18b8:	0f be       	out	0x3f, r0	; 63
    18ba:	0f 90       	pop	r0
    18bc:	1f 90       	pop	r1
    18be:	18 95       	reti

000018c0 <initialize_timer_counter_1>:
    18c0:	8d e0       	ldi	r24, 0x0D	; 13
    18c2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    18c6:	8a e4       	ldi	r24, 0x4A	; 74
    18c8:	9c e4       	ldi	r25, 0x4C	; 76
    18ca:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    18ce:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    18d2:	08 95       	ret

000018d4 <__vector_16>:
    18d4:	18 95       	reti

000018d6 <__vector_13>:
    18d6:	1f 92       	push	r1
    18d8:	0f 92       	push	r0
    18da:	0f b6       	in	r0, 0x3f	; 63
    18dc:	0f 92       	push	r0
    18de:	11 24       	eor	r1, r1
    18e0:	8f 93       	push	r24
    18e2:	9f 93       	push	r25
    18e4:	95 b1       	in	r25, 0x05	; 5
    18e6:	82 e0       	ldi	r24, 0x02	; 2
    18e8:	89 27       	eor	r24, r25
    18ea:	85 b9       	out	0x05, r24	; 5
    18ec:	81 e0       	ldi	r24, 0x01	; 1
    18ee:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <ItsTime>
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	0f 90       	pop	r0
    18f8:	0f be       	out	0x3f, r0	; 63
    18fa:	0f 90       	pop	r0
    18fc:	1f 90       	pop	r1
    18fe:	18 95       	reti

00001900 <TWI_Master_Initialise>:
    1900:	81 e1       	ldi	r24, 0x11	; 17
    1902:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    1906:	8f ef       	ldi	r24, 0xFF	; 255
    1908:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    190c:	84 e0       	ldi	r24, 0x04	; 4
    190e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1912:	08 95       	ret

00001914 <TWI_Transceiver_Busy>:
    1914:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1918:	81 78       	andi	r24, 0x81	; 129
    191a:	08 95       	ret

0000191c <TWI_Start_Transceiver_With_Data>:
    191c:	cf 93       	push	r28
    191e:	df 93       	push	r29
    1920:	ec 01       	movw	r28, r24
    1922:	ec eb       	ldi	r30, 0xBC	; 188
    1924:	f0 e0       	ldi	r31, 0x00	; 0
    1926:	90 81       	ld	r25, Z
    1928:	91 78       	andi	r25, 0x81	; 129
    192a:	e9 f7       	brne	.-6      	; 0x1926 <TWI_Start_Transceiver_With_Data+0xa>
    192c:	60 93 e2 02 	sts	0x02E2, r22	; 0x8002e2 <TWI_msgSize>
    1930:	88 81       	ld	r24, Y
    1932:	80 93 e3 02 	sts	0x02E3, r24	; 0x8002e3 <TWI_buf>
    1936:	80 fd       	sbrc	r24, 0
    1938:	12 c0       	rjmp	.+36     	; 0x195e <TWI_Start_Transceiver_With_Data+0x42>
    193a:	62 30       	cpi	r22, 0x02	; 2
    193c:	80 f0       	brcs	.+32     	; 0x195e <TWI_Start_Transceiver_With_Data+0x42>
    193e:	fe 01       	movw	r30, r28
    1940:	31 96       	adiw	r30, 0x01	; 1
    1942:	a4 ee       	ldi	r26, 0xE4	; 228
    1944:	b2 e0       	ldi	r27, 0x02	; 2
    1946:	62 50       	subi	r22, 0x02	; 2
    1948:	26 2f       	mov	r18, r22
    194a:	30 e0       	ldi	r19, 0x00	; 0
    194c:	2e 5f       	subi	r18, 0xFE	; 254
    194e:	3f 4f       	sbci	r19, 0xFF	; 255
    1950:	2c 0f       	add	r18, r28
    1952:	3d 1f       	adc	r19, r29
    1954:	91 91       	ld	r25, Z+
    1956:	9d 93       	st	X+, r25
    1958:	e2 17       	cp	r30, r18
    195a:	f3 07       	cpc	r31, r19
    195c:	d9 f7       	brne	.-10     	; 0x1954 <TWI_Start_Transceiver_With_Data+0x38>
    195e:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <TWI_statusReg>
    1962:	88 ef       	ldi	r24, 0xF8	; 248
    1964:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <TWI_state>
    1968:	85 ea       	ldi	r24, 0xA5	; 165
    196a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    196e:	df 91       	pop	r29
    1970:	cf 91       	pop	r28
    1972:	08 95       	ret

00001974 <TWI_Get_Data_From_Transceiver>:
    1974:	ac 01       	movw	r20, r24
    1976:	ec eb       	ldi	r30, 0xBC	; 188
    1978:	f0 e0       	ldi	r31, 0x00	; 0
    197a:	90 81       	ld	r25, Z
    197c:	91 78       	andi	r25, 0x81	; 129
    197e:	e9 f7       	brne	.-6      	; 0x197a <TWI_Get_Data_From_Transceiver+0x6>
    1980:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <TWI_statusReg>
    1984:	80 ff       	sbrs	r24, 0
    1986:	11 c0       	rjmp	.+34     	; 0x19aa <TWI_Get_Data_From_Transceiver+0x36>
    1988:	66 23       	and	r22, r22
    198a:	79 f0       	breq	.+30     	; 0x19aa <TWI_Get_Data_From_Transceiver+0x36>
    198c:	a3 ee       	ldi	r26, 0xE3	; 227
    198e:	b2 e0       	ldi	r27, 0x02	; 2
    1990:	fa 01       	movw	r30, r20
    1992:	61 50       	subi	r22, 0x01	; 1
    1994:	26 2f       	mov	r18, r22
    1996:	30 e0       	ldi	r19, 0x00	; 0
    1998:	2f 5f       	subi	r18, 0xFF	; 255
    199a:	3f 4f       	sbci	r19, 0xFF	; 255
    199c:	24 0f       	add	r18, r20
    199e:	35 1f       	adc	r19, r21
    19a0:	9d 91       	ld	r25, X+
    19a2:	91 93       	st	Z+, r25
    19a4:	e2 17       	cp	r30, r18
    19a6:	f3 07       	cpc	r31, r19
    19a8:	d9 f7       	brne	.-10     	; 0x19a0 <TWI_Get_Data_From_Transceiver+0x2c>
    19aa:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <TWI_statusReg>
    19ae:	81 70       	andi	r24, 0x01	; 1
    19b0:	08 95       	ret

000019b2 <__vector_26>:
    19b2:	1f 92       	push	r1
    19b4:	0f 92       	push	r0
    19b6:	0f b6       	in	r0, 0x3f	; 63
    19b8:	0f 92       	push	r0
    19ba:	11 24       	eor	r1, r1
    19bc:	0b b6       	in	r0, 0x3b	; 59
    19be:	0f 92       	push	r0
    19c0:	2f 93       	push	r18
    19c2:	3f 93       	push	r19
    19c4:	8f 93       	push	r24
    19c6:	9f 93       	push	r25
    19c8:	af 93       	push	r26
    19ca:	bf 93       	push	r27
    19cc:	ef 93       	push	r30
    19ce:	ff 93       	push	r31
    19d0:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    19d4:	8e 2f       	mov	r24, r30
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	fc 01       	movw	r30, r24
    19da:	38 97       	sbiw	r30, 0x08	; 8
    19dc:	e1 35       	cpi	r30, 0x51	; 81
    19de:	f1 05       	cpc	r31, r1
    19e0:	08 f0       	brcs	.+2      	; 0x19e4 <__vector_26+0x32>
    19e2:	55 c0       	rjmp	.+170    	; 0x1a8e <__vector_26+0xdc>
    19e4:	ea 5b       	subi	r30, 0xBA	; 186
    19e6:	ff 4f       	sbci	r31, 0xFF	; 255
    19e8:	50 c1       	rjmp	.+672    	; 0x1c8a <__tablejump2__>
    19ea:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <TWI_bufPtr.1555>
    19ee:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <TWI_bufPtr.1555>
    19f2:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <TWI_msgSize>
    19f6:	e8 17       	cp	r30, r24
    19f8:	70 f4       	brcc	.+28     	; 0x1a16 <__vector_26+0x64>
    19fa:	81 e0       	ldi	r24, 0x01	; 1
    19fc:	8e 0f       	add	r24, r30
    19fe:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <TWI_bufPtr.1555>
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	ed 51       	subi	r30, 0x1D	; 29
    1a06:	fd 4f       	sbci	r31, 0xFD	; 253
    1a08:	80 81       	ld	r24, Z
    1a0a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1a0e:	85 e8       	ldi	r24, 0x85	; 133
    1a10:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a14:	43 c0       	rjmp	.+134    	; 0x1a9c <__vector_26+0xea>
    1a16:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <TWI_statusReg>
    1a1a:	81 60       	ori	r24, 0x01	; 1
    1a1c:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <TWI_statusReg>
    1a20:	84 e9       	ldi	r24, 0x94	; 148
    1a22:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a26:	3a c0       	rjmp	.+116    	; 0x1a9c <__vector_26+0xea>
    1a28:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <TWI_bufPtr.1555>
    1a2c:	81 e0       	ldi	r24, 0x01	; 1
    1a2e:	8e 0f       	add	r24, r30
    1a30:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <TWI_bufPtr.1555>
    1a34:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1a38:	f0 e0       	ldi	r31, 0x00	; 0
    1a3a:	ed 51       	subi	r30, 0x1D	; 29
    1a3c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a3e:	80 83       	st	Z, r24
    1a40:	20 91 e0 02 	lds	r18, 0x02E0	; 0x8002e0 <TWI_bufPtr.1555>
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	80 91 e2 02 	lds	r24, 0x02E2	; 0x8002e2 <TWI_msgSize>
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	01 97       	sbiw	r24, 0x01	; 1
    1a4e:	28 17       	cp	r18, r24
    1a50:	39 07       	cpc	r19, r25
    1a52:	24 f4       	brge	.+8      	; 0x1a5c <__vector_26+0xaa>
    1a54:	85 ec       	ldi	r24, 0xC5	; 197
    1a56:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a5a:	20 c0       	rjmp	.+64     	; 0x1a9c <__vector_26+0xea>
    1a5c:	85 e8       	ldi	r24, 0x85	; 133
    1a5e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a62:	1c c0       	rjmp	.+56     	; 0x1a9c <__vector_26+0xea>
    1a64:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    1a68:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <TWI_bufPtr.1555>
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	ed 51       	subi	r30, 0x1D	; 29
    1a70:	fd 4f       	sbci	r31, 0xFD	; 253
    1a72:	80 83       	st	Z, r24
    1a74:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <TWI_statusReg>
    1a78:	81 60       	ori	r24, 0x01	; 1
    1a7a:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <TWI_statusReg>
    1a7e:	84 e9       	ldi	r24, 0x94	; 148
    1a80:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a84:	0b c0       	rjmp	.+22     	; 0x1a9c <__vector_26+0xea>
    1a86:	85 ea       	ldi	r24, 0xA5	; 165
    1a88:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a8c:	07 c0       	rjmp	.+14     	; 0x1a9c <__vector_26+0xea>
    1a8e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    1a92:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <TWI_state>
    1a96:	84 e0       	ldi	r24, 0x04	; 4
    1a98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    1a9c:	ff 91       	pop	r31
    1a9e:	ef 91       	pop	r30
    1aa0:	bf 91       	pop	r27
    1aa2:	af 91       	pop	r26
    1aa4:	9f 91       	pop	r25
    1aa6:	8f 91       	pop	r24
    1aa8:	3f 91       	pop	r19
    1aaa:	2f 91       	pop	r18
    1aac:	0f 90       	pop	r0
    1aae:	0b be       	out	0x3b, r0	; 59
    1ab0:	0f 90       	pop	r0
    1ab2:	0f be       	out	0x3f, r0	; 63
    1ab4:	0f 90       	pop	r0
    1ab6:	1f 90       	pop	r1
    1ab8:	18 95       	reti

00001aba <USART0_init>:
    1aba:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    1abe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    1ac2:	88 e0       	ldi	r24, 0x08	; 8
    1ac4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1ac8:	86 e0       	ldi	r24, 0x06	; 6
    1aca:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    1ace:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <UART0_RxTail>
    1ad2:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <UART0_RxHead>
    1ad6:	10 92 f3 02 	sts	0x02F3, r1	; 0x8002f3 <UART0_TxTail>
    1ada:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <UART0_TxHead>
    1ade:	08 95       	ret

00001ae0 <USART0_Transmit_IO>:
    1ae0:	91 e0       	ldi	r25, 0x01	; 1
    1ae2:	90 93 f7 03 	sts	0x03F7, r25	; 0x8003f7 <UART0TransmitInProgress>
    1ae6:	20 91 f4 02 	lds	r18, 0x02F4	; 0x8002f4 <UART0_TxHead>
    1aea:	2f 5f       	subi	r18, 0xFF	; 255
    1aec:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <UART0_TxTail>
    1af0:	29 17       	cp	r18, r25
    1af2:	e1 f3       	breq	.-8      	; 0x1aec <USART0_Transmit_IO+0xc>
    1af4:	e2 2f       	mov	r30, r18
    1af6:	f0 e0       	ldi	r31, 0x00	; 0
    1af8:	eb 50       	subi	r30, 0x0B	; 11
    1afa:	fd 4f       	sbci	r31, 0xFD	; 253
    1afc:	80 83       	st	Z, r24
    1afe:	20 93 f4 02 	sts	0x02F4, r18	; 0x8002f4 <UART0_TxHead>
    1b02:	e1 ec       	ldi	r30, 0xC1	; 193
    1b04:	f0 e0       	ldi	r31, 0x00	; 0
    1b06:	80 81       	ld	r24, Z
    1b08:	80 62       	ori	r24, 0x20	; 32
    1b0a:	80 83       	st	Z, r24
    1b0c:	80 e0       	ldi	r24, 0x00	; 0
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	08 95       	ret

00001b12 <__vector_21>:
    1b12:	1f 92       	push	r1
    1b14:	0f 92       	push	r0
    1b16:	0f b6       	in	r0, 0x3f	; 63
    1b18:	0f 92       	push	r0
    1b1a:	11 24       	eor	r1, r1
    1b1c:	0b b6       	in	r0, 0x3b	; 59
    1b1e:	0f 92       	push	r0
    1b20:	8f 93       	push	r24
    1b22:	9f 93       	push	r25
    1b24:	ef 93       	push	r30
    1b26:	ff 93       	push	r31
    1b28:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <UART0_TxHead>
    1b2c:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <UART0_TxTail>
    1b30:	98 17       	cp	r25, r24
    1b32:	61 f0       	breq	.+24     	; 0x1b4c <__vector_21+0x3a>
    1b34:	e0 91 f3 02 	lds	r30, 0x02F3	; 0x8002f3 <UART0_TxTail>
    1b38:	ef 5f       	subi	r30, 0xFF	; 255
    1b3a:	e0 93 f3 02 	sts	0x02F3, r30	; 0x8002f3 <UART0_TxTail>
    1b3e:	f0 e0       	ldi	r31, 0x00	; 0
    1b40:	eb 50       	subi	r30, 0x0B	; 11
    1b42:	fd 4f       	sbci	r31, 0xFD	; 253
    1b44:	80 81       	ld	r24, Z
    1b46:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1b4a:	07 c0       	rjmp	.+14     	; 0x1b5a <__vector_21+0x48>
    1b4c:	e1 ec       	ldi	r30, 0xC1	; 193
    1b4e:	f0 e0       	ldi	r31, 0x00	; 0
    1b50:	80 81       	ld	r24, Z
    1b52:	8f 7d       	andi	r24, 0xDF	; 223
    1b54:	80 83       	st	Z, r24
    1b56:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <UART0TransmitInProgress>
    1b5a:	ff 91       	pop	r31
    1b5c:	ef 91       	pop	r30
    1b5e:	9f 91       	pop	r25
    1b60:	8f 91       	pop	r24
    1b62:	0f 90       	pop	r0
    1b64:	0b be       	out	0x3b, r0	; 59
    1b66:	0f 90       	pop	r0
    1b68:	0f be       	out	0x3f, r0	; 63
    1b6a:	0f 90       	pop	r0
    1b6c:	1f 90       	pop	r1
    1b6e:	18 95       	reti

00001b70 <USART1_init>:
    1b70:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
    1b74:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
    1b78:	80 e9       	ldi	r24, 0x90	; 144
    1b7a:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
    1b7e:	86 e0       	ldi	r24, 0x06	; 6
    1b80:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7e00ca>
    1b84:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <UART1_RxTail>
    1b88:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <UART1_RxHead>
    1b8c:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <UART1_TxTail>
    1b90:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <UART1_TxHead>
    1b94:	08 95       	ret

00001b96 <__vector_28>:
    1b96:	1f 92       	push	r1
    1b98:	0f 92       	push	r0
    1b9a:	0f b6       	in	r0, 0x3f	; 63
    1b9c:	0f 92       	push	r0
    1b9e:	11 24       	eor	r1, r1
    1ba0:	0b b6       	in	r0, 0x3b	; 59
    1ba2:	0f 92       	push	r0
    1ba4:	2f 93       	push	r18
    1ba6:	3f 93       	push	r19
    1ba8:	8f 93       	push	r24
    1baa:	9f 93       	push	r25
    1bac:	af 93       	push	r26
    1bae:	bf 93       	push	r27
    1bb0:	cf 93       	push	r28
    1bb2:	df 93       	push	r29
    1bb4:	ef 93       	push	r30
    1bb6:	ff 93       	push	r31
    1bb8:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
    1bbc:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <UART1_RxHead>
    1bc0:	8f 5f       	subi	r24, 0xFF	; 255
    1bc2:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <UART1_RxHead>
    1bc6:	20 91 fa 03 	lds	r18, 0x03FA	; 0x8003fa <UART1_RxTail>
    1bca:	e8 2f       	mov	r30, r24
    1bcc:	f0 e0       	ldi	r31, 0x00	; 0
    1bce:	ef 5f       	subi	r30, 0xFF	; 255
    1bd0:	fa 4f       	sbci	r31, 0xFA	; 250
    1bd2:	90 83       	st	Z, r25
    1bd4:	9a 30       	cpi	r25, 0x0A	; 10
    1bd6:	29 f5       	brne	.+74     	; 0x1c22 <__vector_28+0x8c>
    1bd8:	90 91 06 05 	lds	r25, 0x0506	; 0x800506 <UART1_RxBuf+0x5>
    1bdc:	97 34       	cpi	r25, 0x47	; 71
    1bde:	e9 f4       	brne	.+58     	; 0x1c1a <__vector_28+0x84>
    1be0:	e0 e0       	ldi	r30, 0x00	; 0
    1be2:	2e 2f       	mov	r18, r30
    1be4:	30 e0       	ldi	r19, 0x00	; 0
    1be6:	d9 01       	movw	r26, r18
    1be8:	af 5f       	subi	r26, 0xFF	; 255
    1bea:	b9 4f       	sbci	r27, 0xF9	; 249
    1bec:	e9 01       	movw	r28, r18
    1bee:	cf 5f       	subi	r28, 0xFF	; 255
    1bf0:	da 4f       	sbci	r29, 0xFA	; 250
    1bf2:	99 81       	ldd	r25, Y+1	; 0x01
    1bf4:	9c 93       	st	X, r25
    1bf6:	ef 5f       	subi	r30, 0xFF	; 255
    1bf8:	8e 17       	cp	r24, r30
    1bfa:	98 f7       	brcc	.-26     	; 0x1be2 <__vector_28+0x4c>
    1bfc:	f0 e0       	ldi	r31, 0x00	; 0
    1bfe:	e2 50       	subi	r30, 0x02	; 2
    1c00:	fa 4f       	sbci	r31, 0xFA	; 250
    1c02:	10 82       	st	Z, r1
    1c04:	e9 ec       	ldi	r30, 0xC9	; 201
    1c06:	f0 e0       	ldi	r31, 0x00	; 0
    1c08:	80 81       	ld	r24, Z
    1c0a:	10 82       	st	Z, r1
    1c0c:	81 e0       	ldi	r24, 0x01	; 1
    1c0e:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <ItsTime>
    1c12:	95 b1       	in	r25, 0x05	; 5
    1c14:	82 e0       	ldi	r24, 0x02	; 2
    1c16:	89 27       	eor	r24, r25
    1c18:	85 b9       	out	0x05, r24	; 5
    1c1a:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <UART1_RxTail>
    1c1e:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <UART1_RxHead>
    1c22:	ff 91       	pop	r31
    1c24:	ef 91       	pop	r30
    1c26:	df 91       	pop	r29
    1c28:	cf 91       	pop	r28
    1c2a:	bf 91       	pop	r27
    1c2c:	af 91       	pop	r26
    1c2e:	9f 91       	pop	r25
    1c30:	8f 91       	pop	r24
    1c32:	3f 91       	pop	r19
    1c34:	2f 91       	pop	r18
    1c36:	0f 90       	pop	r0
    1c38:	0b be       	out	0x3b, r0	; 59
    1c3a:	0f 90       	pop	r0
    1c3c:	0f be       	out	0x3f, r0	; 63
    1c3e:	0f 90       	pop	r0
    1c40:	1f 90       	pop	r1
    1c42:	18 95       	reti

00001c44 <__mulsi3>:
    1c44:	db 01       	movw	r26, r22
    1c46:	8f 93       	push	r24
    1c48:	9f 93       	push	r25
    1c4a:	28 d0       	rcall	.+80     	; 0x1c9c <__muluhisi3>
    1c4c:	bf 91       	pop	r27
    1c4e:	af 91       	pop	r26
    1c50:	a2 9f       	mul	r26, r18
    1c52:	80 0d       	add	r24, r0
    1c54:	91 1d       	adc	r25, r1
    1c56:	a3 9f       	mul	r26, r19
    1c58:	90 0d       	add	r25, r0
    1c5a:	b2 9f       	mul	r27, r18
    1c5c:	90 0d       	add	r25, r0
    1c5e:	11 24       	eor	r1, r1
    1c60:	08 95       	ret

00001c62 <__udivmodhi4>:
    1c62:	aa 1b       	sub	r26, r26
    1c64:	bb 1b       	sub	r27, r27
    1c66:	51 e1       	ldi	r21, 0x11	; 17
    1c68:	07 c0       	rjmp	.+14     	; 0x1c78 <__udivmodhi4_ep>

00001c6a <__udivmodhi4_loop>:
    1c6a:	aa 1f       	adc	r26, r26
    1c6c:	bb 1f       	adc	r27, r27
    1c6e:	a6 17       	cp	r26, r22
    1c70:	b7 07       	cpc	r27, r23
    1c72:	10 f0       	brcs	.+4      	; 0x1c78 <__udivmodhi4_ep>
    1c74:	a6 1b       	sub	r26, r22
    1c76:	b7 0b       	sbc	r27, r23

00001c78 <__udivmodhi4_ep>:
    1c78:	88 1f       	adc	r24, r24
    1c7a:	99 1f       	adc	r25, r25
    1c7c:	5a 95       	dec	r21
    1c7e:	a9 f7       	brne	.-22     	; 0x1c6a <__udivmodhi4_loop>
    1c80:	80 95       	com	r24
    1c82:	90 95       	com	r25
    1c84:	bc 01       	movw	r22, r24
    1c86:	cd 01       	movw	r24, r26
    1c88:	08 95       	ret

00001c8a <__tablejump2__>:
    1c8a:	ee 0f       	add	r30, r30
    1c8c:	ff 1f       	adc	r31, r31
    1c8e:	00 24       	eor	r0, r0
    1c90:	00 1c       	adc	r0, r0
    1c92:	0b be       	out	0x3b, r0	; 59
    1c94:	07 90       	elpm	r0, Z+
    1c96:	f6 91       	elpm	r31, Z
    1c98:	e0 2d       	mov	r30, r0
    1c9a:	09 94       	ijmp

00001c9c <__muluhisi3>:
    1c9c:	85 d1       	rcall	.+778    	; 0x1fa8 <__umulhisi3>
    1c9e:	a5 9f       	mul	r26, r21
    1ca0:	90 0d       	add	r25, r0
    1ca2:	b4 9f       	mul	r27, r20
    1ca4:	90 0d       	add	r25, r0
    1ca6:	a4 9f       	mul	r26, r20
    1ca8:	80 0d       	add	r24, r0
    1caa:	91 1d       	adc	r25, r1
    1cac:	11 24       	eor	r1, r1
    1cae:	08 95       	ret

00001cb0 <__mulshisi3>:
    1cb0:	b7 ff       	sbrs	r27, 7
    1cb2:	f4 cf       	rjmp	.-24     	; 0x1c9c <__muluhisi3>

00001cb4 <__mulohisi3>:
    1cb4:	f3 df       	rcall	.-26     	; 0x1c9c <__muluhisi3>
    1cb6:	82 1b       	sub	r24, r18
    1cb8:	93 0b       	sbc	r25, r19
    1cba:	08 95       	ret

00001cbc <__muldi3>:
    1cbc:	df 93       	push	r29
    1cbe:	cf 93       	push	r28
    1cc0:	1f 93       	push	r17
    1cc2:	0f 93       	push	r16
    1cc4:	9a 9d       	mul	r25, r10
    1cc6:	f0 2d       	mov	r31, r0
    1cc8:	21 9f       	mul	r18, r17
    1cca:	f0 0d       	add	r31, r0
    1ccc:	8b 9d       	mul	r24, r11
    1cce:	f0 0d       	add	r31, r0
    1cd0:	8a 9d       	mul	r24, r10
    1cd2:	e0 2d       	mov	r30, r0
    1cd4:	f1 0d       	add	r31, r1
    1cd6:	03 9f       	mul	r16, r19
    1cd8:	f0 0d       	add	r31, r0
    1cda:	02 9f       	mul	r16, r18
    1cdc:	e0 0d       	add	r30, r0
    1cde:	f1 1d       	adc	r31, r1
    1ce0:	4e 9d       	mul	r20, r14
    1ce2:	e0 0d       	add	r30, r0
    1ce4:	f1 1d       	adc	r31, r1
    1ce6:	5e 9d       	mul	r21, r14
    1ce8:	f0 0d       	add	r31, r0
    1cea:	4f 9d       	mul	r20, r15
    1cec:	f0 0d       	add	r31, r0
    1cee:	7f 93       	push	r23
    1cf0:	6f 93       	push	r22
    1cf2:	bf 92       	push	r11
    1cf4:	af 92       	push	r10
    1cf6:	5f 93       	push	r21
    1cf8:	4f 93       	push	r20
    1cfa:	d5 01       	movw	r26, r10
    1cfc:	55 d1       	rcall	.+682    	; 0x1fa8 <__umulhisi3>
    1cfe:	8b 01       	movw	r16, r22
    1d00:	ac 01       	movw	r20, r24
    1d02:	d7 01       	movw	r26, r14
    1d04:	51 d1       	rcall	.+674    	; 0x1fa8 <__umulhisi3>
    1d06:	eb 01       	movw	r28, r22
    1d08:	e8 0f       	add	r30, r24
    1d0a:	f9 1f       	adc	r31, r25
    1d0c:	d6 01       	movw	r26, r12
    1d0e:	1f d0       	rcall	.+62     	; 0x1d4e <__muldi3_6>
    1d10:	2f 91       	pop	r18
    1d12:	3f 91       	pop	r19
    1d14:	d6 01       	movw	r26, r12
    1d16:	48 d1       	rcall	.+656    	; 0x1fa8 <__umulhisi3>
    1d18:	c6 0f       	add	r28, r22
    1d1a:	d7 1f       	adc	r29, r23
    1d1c:	e8 1f       	adc	r30, r24
    1d1e:	f9 1f       	adc	r31, r25
    1d20:	af 91       	pop	r26
    1d22:	bf 91       	pop	r27
    1d24:	14 d0       	rcall	.+40     	; 0x1d4e <__muldi3_6>
    1d26:	2f 91       	pop	r18
    1d28:	3f 91       	pop	r19
    1d2a:	3e d1       	rcall	.+636    	; 0x1fa8 <__umulhisi3>
    1d2c:	c6 0f       	add	r28, r22
    1d2e:	d7 1f       	adc	r29, r23
    1d30:	e8 1f       	adc	r30, r24
    1d32:	f9 1f       	adc	r31, r25
    1d34:	d6 01       	movw	r26, r12
    1d36:	38 d1       	rcall	.+624    	; 0x1fa8 <__umulhisi3>
    1d38:	e6 0f       	add	r30, r22
    1d3a:	f7 1f       	adc	r31, r23
    1d3c:	98 01       	movw	r18, r16
    1d3e:	be 01       	movw	r22, r28
    1d40:	cf 01       	movw	r24, r30
    1d42:	11 24       	eor	r1, r1
    1d44:	0f 91       	pop	r16
    1d46:	1f 91       	pop	r17
    1d48:	cf 91       	pop	r28
    1d4a:	df 91       	pop	r29
    1d4c:	08 95       	ret

00001d4e <__muldi3_6>:
    1d4e:	2c d1       	rcall	.+600    	; 0x1fa8 <__umulhisi3>
    1d50:	46 0f       	add	r20, r22
    1d52:	57 1f       	adc	r21, r23
    1d54:	c8 1f       	adc	r28, r24
    1d56:	d9 1f       	adc	r29, r25
    1d58:	08 f4       	brcc	.+2      	; 0x1d5c <__muldi3_6+0xe>
    1d5a:	31 96       	adiw	r30, 0x01	; 1
    1d5c:	08 95       	ret

00001d5e <__moddi3>:
    1d5e:	68 94       	set
    1d60:	01 c0       	rjmp	.+2      	; 0x1d64 <__divdi3_moddi3>

00001d62 <__divdi3>:
    1d62:	e8 94       	clt

00001d64 <__divdi3_moddi3>:
    1d64:	f9 2f       	mov	r31, r25
    1d66:	f1 2b       	or	r31, r17
    1d68:	0a f0       	brmi	.+2      	; 0x1d6c <__divdi3_moddi3+0x8>
    1d6a:	27 c0       	rjmp	.+78     	; 0x1dba <__udivdi3_umoddi3>
    1d6c:	a0 e0       	ldi	r26, 0x00	; 0
    1d6e:	b0 e0       	ldi	r27, 0x00	; 0
    1d70:	eb eb       	ldi	r30, 0xBB	; 187
    1d72:	fe e0       	ldi	r31, 0x0E	; 14
    1d74:	93 c0       	rjmp	.+294    	; 0x1e9c <__prologue_saves__+0xc>
    1d76:	09 2e       	mov	r0, r25
    1d78:	05 94       	asr	r0
    1d7a:	1a f4       	brpl	.+6      	; 0x1d82 <__divdi3_moddi3+0x1e>
    1d7c:	79 d0       	rcall	.+242    	; 0x1e70 <__negdi2>
    1d7e:	11 23       	and	r17, r17
    1d80:	92 f4       	brpl	.+36     	; 0x1da6 <__divdi3_moddi3+0x42>
    1d82:	f0 e8       	ldi	r31, 0x80	; 128
    1d84:	0f 26       	eor	r0, r31
    1d86:	ff ef       	ldi	r31, 0xFF	; 255
    1d88:	e0 94       	com	r14
    1d8a:	f0 94       	com	r15
    1d8c:	00 95       	com	r16
    1d8e:	10 95       	com	r17
    1d90:	b0 94       	com	r11
    1d92:	c0 94       	com	r12
    1d94:	d0 94       	com	r13
    1d96:	a1 94       	neg	r10
    1d98:	bf 0a       	sbc	r11, r31
    1d9a:	cf 0a       	sbc	r12, r31
    1d9c:	df 0a       	sbc	r13, r31
    1d9e:	ef 0a       	sbc	r14, r31
    1da0:	ff 0a       	sbc	r15, r31
    1da2:	0f 0b       	sbc	r16, r31
    1da4:	1f 0b       	sbc	r17, r31
    1da6:	13 d0       	rcall	.+38     	; 0x1dce <__udivmod64>
    1da8:	07 fc       	sbrc	r0, 7
    1daa:	62 d0       	rcall	.+196    	; 0x1e70 <__negdi2>
    1dac:	cd b7       	in	r28, 0x3d	; 61
    1dae:	de b7       	in	r29, 0x3e	; 62
    1db0:	ec e0       	ldi	r30, 0x0C	; 12
    1db2:	90 c0       	rjmp	.+288    	; 0x1ed4 <__epilogue_restores__+0xc>

00001db4 <__umoddi3>:
    1db4:	68 94       	set
    1db6:	01 c0       	rjmp	.+2      	; 0x1dba <__udivdi3_umoddi3>

00001db8 <__udivdi3>:
    1db8:	e8 94       	clt

00001dba <__udivdi3_umoddi3>:
    1dba:	8f 92       	push	r8
    1dbc:	9f 92       	push	r9
    1dbe:	cf 93       	push	r28
    1dc0:	df 93       	push	r29
    1dc2:	05 d0       	rcall	.+10     	; 0x1dce <__udivmod64>
    1dc4:	df 91       	pop	r29
    1dc6:	cf 91       	pop	r28
    1dc8:	9f 90       	pop	r9
    1dca:	8f 90       	pop	r8
    1dcc:	08 95       	ret

00001dce <__udivmod64>:
    1dce:	88 24       	eor	r8, r8
    1dd0:	99 24       	eor	r9, r9
    1dd2:	f4 01       	movw	r30, r8
    1dd4:	e4 01       	movw	r28, r8
    1dd6:	b0 e4       	ldi	r27, 0x40	; 64
    1dd8:	9f 93       	push	r25
    1dda:	aa 27       	eor	r26, r26
    1ddc:	9a 15       	cp	r25, r10
    1dde:	8b 04       	cpc	r8, r11
    1de0:	9c 04       	cpc	r9, r12
    1de2:	ed 05       	cpc	r30, r13
    1de4:	fe 05       	cpc	r31, r14
    1de6:	cf 05       	cpc	r28, r15
    1de8:	d0 07       	cpc	r29, r16
    1dea:	a1 07       	cpc	r26, r17
    1dec:	98 f4       	brcc	.+38     	; 0x1e14 <__udivmod64+0x46>
    1dee:	ad 2f       	mov	r26, r29
    1df0:	dc 2f       	mov	r29, r28
    1df2:	cf 2f       	mov	r28, r31
    1df4:	fe 2f       	mov	r31, r30
    1df6:	e9 2d       	mov	r30, r9
    1df8:	98 2c       	mov	r9, r8
    1dfa:	89 2e       	mov	r8, r25
    1dfc:	98 2f       	mov	r25, r24
    1dfe:	87 2f       	mov	r24, r23
    1e00:	76 2f       	mov	r23, r22
    1e02:	65 2f       	mov	r22, r21
    1e04:	54 2f       	mov	r21, r20
    1e06:	43 2f       	mov	r20, r19
    1e08:	32 2f       	mov	r19, r18
    1e0a:	22 27       	eor	r18, r18
    1e0c:	b8 50       	subi	r27, 0x08	; 8
    1e0e:	31 f7       	brne	.-52     	; 0x1ddc <__udivmod64+0xe>
    1e10:	bf 91       	pop	r27
    1e12:	27 c0       	rjmp	.+78     	; 0x1e62 <__udivmod64+0x94>
    1e14:	1b 2e       	mov	r1, r27
    1e16:	bf 91       	pop	r27
    1e18:	bb 27       	eor	r27, r27
    1e1a:	22 0f       	add	r18, r18
    1e1c:	33 1f       	adc	r19, r19
    1e1e:	44 1f       	adc	r20, r20
    1e20:	55 1f       	adc	r21, r21
    1e22:	66 1f       	adc	r22, r22
    1e24:	77 1f       	adc	r23, r23
    1e26:	88 1f       	adc	r24, r24
    1e28:	99 1f       	adc	r25, r25
    1e2a:	88 1c       	adc	r8, r8
    1e2c:	99 1c       	adc	r9, r9
    1e2e:	ee 1f       	adc	r30, r30
    1e30:	ff 1f       	adc	r31, r31
    1e32:	cc 1f       	adc	r28, r28
    1e34:	dd 1f       	adc	r29, r29
    1e36:	aa 1f       	adc	r26, r26
    1e38:	bb 1f       	adc	r27, r27
    1e3a:	8a 14       	cp	r8, r10
    1e3c:	9b 04       	cpc	r9, r11
    1e3e:	ec 05       	cpc	r30, r12
    1e40:	fd 05       	cpc	r31, r13
    1e42:	ce 05       	cpc	r28, r14
    1e44:	df 05       	cpc	r29, r15
    1e46:	a0 07       	cpc	r26, r16
    1e48:	b1 07       	cpc	r27, r17
    1e4a:	48 f0       	brcs	.+18     	; 0x1e5e <__udivmod64+0x90>
    1e4c:	8a 18       	sub	r8, r10
    1e4e:	9b 08       	sbc	r9, r11
    1e50:	ec 09       	sbc	r30, r12
    1e52:	fd 09       	sbc	r31, r13
    1e54:	ce 09       	sbc	r28, r14
    1e56:	df 09       	sbc	r29, r15
    1e58:	a0 0b       	sbc	r26, r16
    1e5a:	b1 0b       	sbc	r27, r17
    1e5c:	21 60       	ori	r18, 0x01	; 1
    1e5e:	1a 94       	dec	r1
    1e60:	e1 f6       	brne	.-72     	; 0x1e1a <__udivmod64+0x4c>
    1e62:	2e f4       	brtc	.+10     	; 0x1e6e <__udivmod64+0xa0>
    1e64:	94 01       	movw	r18, r8
    1e66:	af 01       	movw	r20, r30
    1e68:	be 01       	movw	r22, r28
    1e6a:	cd 01       	movw	r24, r26
    1e6c:	00 0c       	add	r0, r0
    1e6e:	08 95       	ret

00001e70 <__negdi2>:
    1e70:	60 95       	com	r22
    1e72:	70 95       	com	r23
    1e74:	80 95       	com	r24
    1e76:	90 95       	com	r25
    1e78:	30 95       	com	r19
    1e7a:	40 95       	com	r20
    1e7c:	50 95       	com	r21
    1e7e:	21 95       	neg	r18
    1e80:	3f 4f       	sbci	r19, 0xFF	; 255
    1e82:	4f 4f       	sbci	r20, 0xFF	; 255
    1e84:	5f 4f       	sbci	r21, 0xFF	; 255
    1e86:	6f 4f       	sbci	r22, 0xFF	; 255
    1e88:	7f 4f       	sbci	r23, 0xFF	; 255
    1e8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1e8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8e:	08 95       	ret

00001e90 <__prologue_saves__>:
    1e90:	2f 92       	push	r2
    1e92:	3f 92       	push	r3
    1e94:	4f 92       	push	r4
    1e96:	5f 92       	push	r5
    1e98:	6f 92       	push	r6
    1e9a:	7f 92       	push	r7
    1e9c:	8f 92       	push	r8
    1e9e:	9f 92       	push	r9
    1ea0:	af 92       	push	r10
    1ea2:	bf 92       	push	r11
    1ea4:	cf 92       	push	r12
    1ea6:	df 92       	push	r13
    1ea8:	ef 92       	push	r14
    1eaa:	ff 92       	push	r15
    1eac:	0f 93       	push	r16
    1eae:	1f 93       	push	r17
    1eb0:	cf 93       	push	r28
    1eb2:	df 93       	push	r29
    1eb4:	cd b7       	in	r28, 0x3d	; 61
    1eb6:	de b7       	in	r29, 0x3e	; 62
    1eb8:	ca 1b       	sub	r28, r26
    1eba:	db 0b       	sbc	r29, r27
    1ebc:	0f b6       	in	r0, 0x3f	; 63
    1ebe:	f8 94       	cli
    1ec0:	de bf       	out	0x3e, r29	; 62
    1ec2:	0f be       	out	0x3f, r0	; 63
    1ec4:	cd bf       	out	0x3d, r28	; 61
    1ec6:	09 94       	ijmp

00001ec8 <__epilogue_restores__>:
    1ec8:	2a 88       	ldd	r2, Y+18	; 0x12
    1eca:	39 88       	ldd	r3, Y+17	; 0x11
    1ecc:	48 88       	ldd	r4, Y+16	; 0x10
    1ece:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ed0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ed2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ed4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ed6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ed8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1eda:	b9 84       	ldd	r11, Y+9	; 0x09
    1edc:	c8 84       	ldd	r12, Y+8	; 0x08
    1ede:	df 80       	ldd	r13, Y+7	; 0x07
    1ee0:	ee 80       	ldd	r14, Y+6	; 0x06
    1ee2:	fd 80       	ldd	r15, Y+5	; 0x05
    1ee4:	0c 81       	ldd	r16, Y+4	; 0x04
    1ee6:	1b 81       	ldd	r17, Y+3	; 0x03
    1ee8:	aa 81       	ldd	r26, Y+2	; 0x02
    1eea:	b9 81       	ldd	r27, Y+1	; 0x01
    1eec:	ce 0f       	add	r28, r30
    1eee:	d1 1d       	adc	r29, r1
    1ef0:	0f b6       	in	r0, 0x3f	; 63
    1ef2:	f8 94       	cli
    1ef4:	de bf       	out	0x3e, r29	; 62
    1ef6:	0f be       	out	0x3f, r0	; 63
    1ef8:	cd bf       	out	0x3d, r28	; 61
    1efa:	ed 01       	movw	r28, r26
    1efc:	08 95       	ret

00001efe <__ashldi3>:
    1efe:	0f 93       	push	r16
    1f00:	08 30       	cpi	r16, 0x08	; 8
    1f02:	90 f0       	brcs	.+36     	; 0x1f28 <__ashldi3+0x2a>
    1f04:	98 2f       	mov	r25, r24
    1f06:	87 2f       	mov	r24, r23
    1f08:	76 2f       	mov	r23, r22
    1f0a:	65 2f       	mov	r22, r21
    1f0c:	54 2f       	mov	r21, r20
    1f0e:	43 2f       	mov	r20, r19
    1f10:	32 2f       	mov	r19, r18
    1f12:	22 27       	eor	r18, r18
    1f14:	08 50       	subi	r16, 0x08	; 8
    1f16:	f4 cf       	rjmp	.-24     	; 0x1f00 <__ashldi3+0x2>
    1f18:	22 0f       	add	r18, r18
    1f1a:	33 1f       	adc	r19, r19
    1f1c:	44 1f       	adc	r20, r20
    1f1e:	55 1f       	adc	r21, r21
    1f20:	66 1f       	adc	r22, r22
    1f22:	77 1f       	adc	r23, r23
    1f24:	88 1f       	adc	r24, r24
    1f26:	99 1f       	adc	r25, r25
    1f28:	0a 95       	dec	r16
    1f2a:	b2 f7       	brpl	.-20     	; 0x1f18 <__ashldi3+0x1a>
    1f2c:	0f 91       	pop	r16
    1f2e:	08 95       	ret

00001f30 <__ashrdi3>:
    1f30:	97 fb       	bst	r25, 7
    1f32:	10 f8       	bld	r1, 0

00001f34 <__lshrdi3>:
    1f34:	16 94       	lsr	r1
    1f36:	00 08       	sbc	r0, r0
    1f38:	0f 93       	push	r16
    1f3a:	08 30       	cpi	r16, 0x08	; 8
    1f3c:	98 f0       	brcs	.+38     	; 0x1f64 <__lshrdi3+0x30>
    1f3e:	08 50       	subi	r16, 0x08	; 8
    1f40:	23 2f       	mov	r18, r19
    1f42:	34 2f       	mov	r19, r20
    1f44:	45 2f       	mov	r20, r21
    1f46:	56 2f       	mov	r21, r22
    1f48:	67 2f       	mov	r22, r23
    1f4a:	78 2f       	mov	r23, r24
    1f4c:	89 2f       	mov	r24, r25
    1f4e:	90 2d       	mov	r25, r0
    1f50:	f4 cf       	rjmp	.-24     	; 0x1f3a <__lshrdi3+0x6>
    1f52:	05 94       	asr	r0
    1f54:	97 95       	ror	r25
    1f56:	87 95       	ror	r24
    1f58:	77 95       	ror	r23
    1f5a:	67 95       	ror	r22
    1f5c:	57 95       	ror	r21
    1f5e:	47 95       	ror	r20
    1f60:	37 95       	ror	r19
    1f62:	27 95       	ror	r18
    1f64:	0a 95       	dec	r16
    1f66:	aa f7       	brpl	.-22     	; 0x1f52 <__lshrdi3+0x1e>
    1f68:	0f 91       	pop	r16
    1f6a:	08 95       	ret

00001f6c <__adddi3>:
    1f6c:	2a 0d       	add	r18, r10
    1f6e:	3b 1d       	adc	r19, r11
    1f70:	4c 1d       	adc	r20, r12
    1f72:	5d 1d       	adc	r21, r13
    1f74:	6e 1d       	adc	r22, r14
    1f76:	7f 1d       	adc	r23, r15
    1f78:	80 1f       	adc	r24, r16
    1f7a:	91 1f       	adc	r25, r17
    1f7c:	08 95       	ret

00001f7e <__subdi3>:
    1f7e:	2a 19       	sub	r18, r10
    1f80:	3b 09       	sbc	r19, r11
    1f82:	4c 09       	sbc	r20, r12
    1f84:	5d 09       	sbc	r21, r13
    1f86:	6e 09       	sbc	r22, r14
    1f88:	7f 09       	sbc	r23, r15
    1f8a:	80 0b       	sbc	r24, r16
    1f8c:	91 0b       	sbc	r25, r17
    1f8e:	08 95       	ret

00001f90 <__cmpdi2_s8>:
    1f90:	00 24       	eor	r0, r0
    1f92:	a7 fd       	sbrc	r26, 7
    1f94:	00 94       	com	r0
    1f96:	2a 17       	cp	r18, r26
    1f98:	30 05       	cpc	r19, r0
    1f9a:	40 05       	cpc	r20, r0
    1f9c:	50 05       	cpc	r21, r0
    1f9e:	60 05       	cpc	r22, r0
    1fa0:	70 05       	cpc	r23, r0
    1fa2:	80 05       	cpc	r24, r0
    1fa4:	90 05       	cpc	r25, r0
    1fa6:	08 95       	ret

00001fa8 <__umulhisi3>:
    1fa8:	a2 9f       	mul	r26, r18
    1faa:	b0 01       	movw	r22, r0
    1fac:	b3 9f       	mul	r27, r19
    1fae:	c0 01       	movw	r24, r0
    1fb0:	a3 9f       	mul	r26, r19
    1fb2:	70 0d       	add	r23, r0
    1fb4:	81 1d       	adc	r24, r1
    1fb6:	11 24       	eor	r1, r1
    1fb8:	91 1d       	adc	r25, r1
    1fba:	b2 9f       	mul	r27, r18
    1fbc:	70 0d       	add	r23, r0
    1fbe:	81 1d       	adc	r24, r1
    1fc0:	11 24       	eor	r1, r1
    1fc2:	91 1d       	adc	r25, r1
    1fc4:	08 95       	ret

00001fc6 <printf>:
    1fc6:	cf 93       	push	r28
    1fc8:	df 93       	push	r29
    1fca:	cd b7       	in	r28, 0x3d	; 61
    1fcc:	de b7       	in	r29, 0x3e	; 62
    1fce:	ae 01       	movw	r20, r28
    1fd0:	4b 5f       	subi	r20, 0xFB	; 251
    1fd2:	5f 4f       	sbci	r21, 0xFF	; 255
    1fd4:	fa 01       	movw	r30, r20
    1fd6:	61 91       	ld	r22, Z+
    1fd8:	71 91       	ld	r23, Z+
    1fda:	af 01       	movw	r20, r30
    1fdc:	80 91 03 07 	lds	r24, 0x0703	; 0x800703 <__iob+0x2>
    1fe0:	90 91 04 07 	lds	r25, 0x0704	; 0x800704 <__iob+0x3>
    1fe4:	03 d0       	rcall	.+6      	; 0x1fec <vfprintf>
    1fe6:	df 91       	pop	r29
    1fe8:	cf 91       	pop	r28
    1fea:	08 95       	ret

00001fec <vfprintf>:
    1fec:	2f 92       	push	r2
    1fee:	3f 92       	push	r3
    1ff0:	4f 92       	push	r4
    1ff2:	5f 92       	push	r5
    1ff4:	6f 92       	push	r6
    1ff6:	7f 92       	push	r7
    1ff8:	8f 92       	push	r8
    1ffa:	9f 92       	push	r9
    1ffc:	af 92       	push	r10
    1ffe:	bf 92       	push	r11
    2000:	cf 92       	push	r12
    2002:	df 92       	push	r13
    2004:	ef 92       	push	r14
    2006:	ff 92       	push	r15
    2008:	0f 93       	push	r16
    200a:	1f 93       	push	r17
    200c:	cf 93       	push	r28
    200e:	df 93       	push	r29
    2010:	cd b7       	in	r28, 0x3d	; 61
    2012:	de b7       	in	r29, 0x3e	; 62
    2014:	2c 97       	sbiw	r28, 0x0c	; 12
    2016:	0f b6       	in	r0, 0x3f	; 63
    2018:	f8 94       	cli
    201a:	de bf       	out	0x3e, r29	; 62
    201c:	0f be       	out	0x3f, r0	; 63
    201e:	cd bf       	out	0x3d, r28	; 61
    2020:	7c 01       	movw	r14, r24
    2022:	6b 01       	movw	r12, r22
    2024:	8a 01       	movw	r16, r20
    2026:	fc 01       	movw	r30, r24
    2028:	17 82       	std	Z+7, r1	; 0x07
    202a:	16 82       	std	Z+6, r1	; 0x06
    202c:	83 81       	ldd	r24, Z+3	; 0x03
    202e:	81 ff       	sbrs	r24, 1
    2030:	b0 c1       	rjmp	.+864    	; 0x2392 <vfprintf+0x3a6>
    2032:	ce 01       	movw	r24, r28
    2034:	01 96       	adiw	r24, 0x01	; 1
    2036:	4c 01       	movw	r8, r24
    2038:	f7 01       	movw	r30, r14
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	f6 01       	movw	r30, r12
    203e:	93 fd       	sbrc	r25, 3
    2040:	85 91       	lpm	r24, Z+
    2042:	93 ff       	sbrs	r25, 3
    2044:	81 91       	ld	r24, Z+
    2046:	6f 01       	movw	r12, r30
    2048:	88 23       	and	r24, r24
    204a:	09 f4       	brne	.+2      	; 0x204e <vfprintf+0x62>
    204c:	9e c1       	rjmp	.+828    	; 0x238a <vfprintf+0x39e>
    204e:	85 32       	cpi	r24, 0x25	; 37
    2050:	39 f4       	brne	.+14     	; 0x2060 <vfprintf+0x74>
    2052:	93 fd       	sbrc	r25, 3
    2054:	85 91       	lpm	r24, Z+
    2056:	93 ff       	sbrs	r25, 3
    2058:	81 91       	ld	r24, Z+
    205a:	6f 01       	movw	r12, r30
    205c:	85 32       	cpi	r24, 0x25	; 37
    205e:	21 f4       	brne	.+8      	; 0x2068 <vfprintf+0x7c>
    2060:	b7 01       	movw	r22, r14
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	c7 d1       	rcall	.+910    	; 0x23f4 <fputc>
    2066:	e8 cf       	rjmp	.-48     	; 0x2038 <vfprintf+0x4c>
    2068:	51 2c       	mov	r5, r1
    206a:	31 2c       	mov	r3, r1
    206c:	20 e0       	ldi	r18, 0x00	; 0
    206e:	20 32       	cpi	r18, 0x20	; 32
    2070:	a0 f4       	brcc	.+40     	; 0x209a <vfprintf+0xae>
    2072:	8b 32       	cpi	r24, 0x2B	; 43
    2074:	69 f0       	breq	.+26     	; 0x2090 <vfprintf+0xa4>
    2076:	30 f4       	brcc	.+12     	; 0x2084 <vfprintf+0x98>
    2078:	80 32       	cpi	r24, 0x20	; 32
    207a:	59 f0       	breq	.+22     	; 0x2092 <vfprintf+0xa6>
    207c:	83 32       	cpi	r24, 0x23	; 35
    207e:	69 f4       	brne	.+26     	; 0x209a <vfprintf+0xae>
    2080:	20 61       	ori	r18, 0x10	; 16
    2082:	2c c0       	rjmp	.+88     	; 0x20dc <vfprintf+0xf0>
    2084:	8d 32       	cpi	r24, 0x2D	; 45
    2086:	39 f0       	breq	.+14     	; 0x2096 <vfprintf+0xaa>
    2088:	80 33       	cpi	r24, 0x30	; 48
    208a:	39 f4       	brne	.+14     	; 0x209a <vfprintf+0xae>
    208c:	21 60       	ori	r18, 0x01	; 1
    208e:	26 c0       	rjmp	.+76     	; 0x20dc <vfprintf+0xf0>
    2090:	22 60       	ori	r18, 0x02	; 2
    2092:	24 60       	ori	r18, 0x04	; 4
    2094:	23 c0       	rjmp	.+70     	; 0x20dc <vfprintf+0xf0>
    2096:	28 60       	ori	r18, 0x08	; 8
    2098:	21 c0       	rjmp	.+66     	; 0x20dc <vfprintf+0xf0>
    209a:	27 fd       	sbrc	r18, 7
    209c:	27 c0       	rjmp	.+78     	; 0x20ec <vfprintf+0x100>
    209e:	30 ed       	ldi	r19, 0xD0	; 208
    20a0:	38 0f       	add	r19, r24
    20a2:	3a 30       	cpi	r19, 0x0A	; 10
    20a4:	78 f4       	brcc	.+30     	; 0x20c4 <vfprintf+0xd8>
    20a6:	26 ff       	sbrs	r18, 6
    20a8:	06 c0       	rjmp	.+12     	; 0x20b6 <vfprintf+0xca>
    20aa:	fa e0       	ldi	r31, 0x0A	; 10
    20ac:	5f 9e       	mul	r5, r31
    20ae:	30 0d       	add	r19, r0
    20b0:	11 24       	eor	r1, r1
    20b2:	53 2e       	mov	r5, r19
    20b4:	13 c0       	rjmp	.+38     	; 0x20dc <vfprintf+0xf0>
    20b6:	8a e0       	ldi	r24, 0x0A	; 10
    20b8:	38 9e       	mul	r3, r24
    20ba:	30 0d       	add	r19, r0
    20bc:	11 24       	eor	r1, r1
    20be:	33 2e       	mov	r3, r19
    20c0:	20 62       	ori	r18, 0x20	; 32
    20c2:	0c c0       	rjmp	.+24     	; 0x20dc <vfprintf+0xf0>
    20c4:	8e 32       	cpi	r24, 0x2E	; 46
    20c6:	21 f4       	brne	.+8      	; 0x20d0 <vfprintf+0xe4>
    20c8:	26 fd       	sbrc	r18, 6
    20ca:	5f c1       	rjmp	.+702    	; 0x238a <vfprintf+0x39e>
    20cc:	20 64       	ori	r18, 0x40	; 64
    20ce:	06 c0       	rjmp	.+12     	; 0x20dc <vfprintf+0xf0>
    20d0:	8c 36       	cpi	r24, 0x6C	; 108
    20d2:	11 f4       	brne	.+4      	; 0x20d8 <vfprintf+0xec>
    20d4:	20 68       	ori	r18, 0x80	; 128
    20d6:	02 c0       	rjmp	.+4      	; 0x20dc <vfprintf+0xf0>
    20d8:	88 36       	cpi	r24, 0x68	; 104
    20da:	41 f4       	brne	.+16     	; 0x20ec <vfprintf+0x100>
    20dc:	f6 01       	movw	r30, r12
    20de:	93 fd       	sbrc	r25, 3
    20e0:	85 91       	lpm	r24, Z+
    20e2:	93 ff       	sbrs	r25, 3
    20e4:	81 91       	ld	r24, Z+
    20e6:	6f 01       	movw	r12, r30
    20e8:	81 11       	cpse	r24, r1
    20ea:	c1 cf       	rjmp	.-126    	; 0x206e <vfprintf+0x82>
    20ec:	98 2f       	mov	r25, r24
    20ee:	9f 7d       	andi	r25, 0xDF	; 223
    20f0:	95 54       	subi	r25, 0x45	; 69
    20f2:	93 30       	cpi	r25, 0x03	; 3
    20f4:	28 f4       	brcc	.+10     	; 0x2100 <vfprintf+0x114>
    20f6:	0c 5f       	subi	r16, 0xFC	; 252
    20f8:	1f 4f       	sbci	r17, 0xFF	; 255
    20fa:	ff e3       	ldi	r31, 0x3F	; 63
    20fc:	f9 83       	std	Y+1, r31	; 0x01
    20fe:	0d c0       	rjmp	.+26     	; 0x211a <vfprintf+0x12e>
    2100:	83 36       	cpi	r24, 0x63	; 99
    2102:	31 f0       	breq	.+12     	; 0x2110 <vfprintf+0x124>
    2104:	83 37       	cpi	r24, 0x73	; 115
    2106:	71 f0       	breq	.+28     	; 0x2124 <vfprintf+0x138>
    2108:	83 35       	cpi	r24, 0x53	; 83
    210a:	09 f0       	breq	.+2      	; 0x210e <vfprintf+0x122>
    210c:	57 c0       	rjmp	.+174    	; 0x21bc <vfprintf+0x1d0>
    210e:	21 c0       	rjmp	.+66     	; 0x2152 <vfprintf+0x166>
    2110:	f8 01       	movw	r30, r16
    2112:	80 81       	ld	r24, Z
    2114:	89 83       	std	Y+1, r24	; 0x01
    2116:	0e 5f       	subi	r16, 0xFE	; 254
    2118:	1f 4f       	sbci	r17, 0xFF	; 255
    211a:	44 24       	eor	r4, r4
    211c:	43 94       	inc	r4
    211e:	51 2c       	mov	r5, r1
    2120:	54 01       	movw	r10, r8
    2122:	14 c0       	rjmp	.+40     	; 0x214c <vfprintf+0x160>
    2124:	38 01       	movw	r6, r16
    2126:	f2 e0       	ldi	r31, 0x02	; 2
    2128:	6f 0e       	add	r6, r31
    212a:	71 1c       	adc	r7, r1
    212c:	f8 01       	movw	r30, r16
    212e:	a0 80       	ld	r10, Z
    2130:	b1 80       	ldd	r11, Z+1	; 0x01
    2132:	26 ff       	sbrs	r18, 6
    2134:	03 c0       	rjmp	.+6      	; 0x213c <vfprintf+0x150>
    2136:	65 2d       	mov	r22, r5
    2138:	70 e0       	ldi	r23, 0x00	; 0
    213a:	02 c0       	rjmp	.+4      	; 0x2140 <vfprintf+0x154>
    213c:	6f ef       	ldi	r22, 0xFF	; 255
    213e:	7f ef       	ldi	r23, 0xFF	; 255
    2140:	c5 01       	movw	r24, r10
    2142:	2c 87       	std	Y+12, r18	; 0x0c
    2144:	4c d1       	rcall	.+664    	; 0x23de <strnlen>
    2146:	2c 01       	movw	r4, r24
    2148:	83 01       	movw	r16, r6
    214a:	2c 85       	ldd	r18, Y+12	; 0x0c
    214c:	2f 77       	andi	r18, 0x7F	; 127
    214e:	22 2e       	mov	r2, r18
    2150:	16 c0       	rjmp	.+44     	; 0x217e <vfprintf+0x192>
    2152:	38 01       	movw	r6, r16
    2154:	f2 e0       	ldi	r31, 0x02	; 2
    2156:	6f 0e       	add	r6, r31
    2158:	71 1c       	adc	r7, r1
    215a:	f8 01       	movw	r30, r16
    215c:	a0 80       	ld	r10, Z
    215e:	b1 80       	ldd	r11, Z+1	; 0x01
    2160:	26 ff       	sbrs	r18, 6
    2162:	03 c0       	rjmp	.+6      	; 0x216a <vfprintf+0x17e>
    2164:	65 2d       	mov	r22, r5
    2166:	70 e0       	ldi	r23, 0x00	; 0
    2168:	02 c0       	rjmp	.+4      	; 0x216e <vfprintf+0x182>
    216a:	6f ef       	ldi	r22, 0xFF	; 255
    216c:	7f ef       	ldi	r23, 0xFF	; 255
    216e:	c5 01       	movw	r24, r10
    2170:	2c 87       	std	Y+12, r18	; 0x0c
    2172:	2a d1       	rcall	.+596    	; 0x23c8 <strnlen_P>
    2174:	2c 01       	movw	r4, r24
    2176:	2c 85       	ldd	r18, Y+12	; 0x0c
    2178:	20 68       	ori	r18, 0x80	; 128
    217a:	22 2e       	mov	r2, r18
    217c:	83 01       	movw	r16, r6
    217e:	23 fc       	sbrc	r2, 3
    2180:	19 c0       	rjmp	.+50     	; 0x21b4 <vfprintf+0x1c8>
    2182:	83 2d       	mov	r24, r3
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	48 16       	cp	r4, r24
    2188:	59 06       	cpc	r5, r25
    218a:	a0 f4       	brcc	.+40     	; 0x21b4 <vfprintf+0x1c8>
    218c:	b7 01       	movw	r22, r14
    218e:	80 e2       	ldi	r24, 0x20	; 32
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	30 d1       	rcall	.+608    	; 0x23f4 <fputc>
    2194:	3a 94       	dec	r3
    2196:	f5 cf       	rjmp	.-22     	; 0x2182 <vfprintf+0x196>
    2198:	f5 01       	movw	r30, r10
    219a:	27 fc       	sbrc	r2, 7
    219c:	85 91       	lpm	r24, Z+
    219e:	27 fe       	sbrs	r2, 7
    21a0:	81 91       	ld	r24, Z+
    21a2:	5f 01       	movw	r10, r30
    21a4:	b7 01       	movw	r22, r14
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	25 d1       	rcall	.+586    	; 0x23f4 <fputc>
    21aa:	31 10       	cpse	r3, r1
    21ac:	3a 94       	dec	r3
    21ae:	f1 e0       	ldi	r31, 0x01	; 1
    21b0:	4f 1a       	sub	r4, r31
    21b2:	51 08       	sbc	r5, r1
    21b4:	41 14       	cp	r4, r1
    21b6:	51 04       	cpc	r5, r1
    21b8:	79 f7       	brne	.-34     	; 0x2198 <vfprintf+0x1ac>
    21ba:	de c0       	rjmp	.+444    	; 0x2378 <vfprintf+0x38c>
    21bc:	84 36       	cpi	r24, 0x64	; 100
    21be:	11 f0       	breq	.+4      	; 0x21c4 <vfprintf+0x1d8>
    21c0:	89 36       	cpi	r24, 0x69	; 105
    21c2:	31 f5       	brne	.+76     	; 0x2210 <vfprintf+0x224>
    21c4:	f8 01       	movw	r30, r16
    21c6:	27 ff       	sbrs	r18, 7
    21c8:	07 c0       	rjmp	.+14     	; 0x21d8 <vfprintf+0x1ec>
    21ca:	60 81       	ld	r22, Z
    21cc:	71 81       	ldd	r23, Z+1	; 0x01
    21ce:	82 81       	ldd	r24, Z+2	; 0x02
    21d0:	93 81       	ldd	r25, Z+3	; 0x03
    21d2:	0c 5f       	subi	r16, 0xFC	; 252
    21d4:	1f 4f       	sbci	r17, 0xFF	; 255
    21d6:	08 c0       	rjmp	.+16     	; 0x21e8 <vfprintf+0x1fc>
    21d8:	60 81       	ld	r22, Z
    21da:	71 81       	ldd	r23, Z+1	; 0x01
    21dc:	07 2e       	mov	r0, r23
    21de:	00 0c       	add	r0, r0
    21e0:	88 0b       	sbc	r24, r24
    21e2:	99 0b       	sbc	r25, r25
    21e4:	0e 5f       	subi	r16, 0xFE	; 254
    21e6:	1f 4f       	sbci	r17, 0xFF	; 255
    21e8:	2f 76       	andi	r18, 0x6F	; 111
    21ea:	72 2e       	mov	r7, r18
    21ec:	97 ff       	sbrs	r25, 7
    21ee:	09 c0       	rjmp	.+18     	; 0x2202 <vfprintf+0x216>
    21f0:	90 95       	com	r25
    21f2:	80 95       	com	r24
    21f4:	70 95       	com	r23
    21f6:	61 95       	neg	r22
    21f8:	7f 4f       	sbci	r23, 0xFF	; 255
    21fa:	8f 4f       	sbci	r24, 0xFF	; 255
    21fc:	9f 4f       	sbci	r25, 0xFF	; 255
    21fe:	20 68       	ori	r18, 0x80	; 128
    2200:	72 2e       	mov	r7, r18
    2202:	2a e0       	ldi	r18, 0x0A	; 10
    2204:	30 e0       	ldi	r19, 0x00	; 0
    2206:	a4 01       	movw	r20, r8
    2208:	2d d1       	rcall	.+602    	; 0x2464 <__ultoa_invert>
    220a:	a8 2e       	mov	r10, r24
    220c:	a8 18       	sub	r10, r8
    220e:	43 c0       	rjmp	.+134    	; 0x2296 <vfprintf+0x2aa>
    2210:	85 37       	cpi	r24, 0x75	; 117
    2212:	29 f4       	brne	.+10     	; 0x221e <vfprintf+0x232>
    2214:	2f 7e       	andi	r18, 0xEF	; 239
    2216:	b2 2e       	mov	r11, r18
    2218:	2a e0       	ldi	r18, 0x0A	; 10
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	25 c0       	rjmp	.+74     	; 0x2268 <vfprintf+0x27c>
    221e:	f2 2f       	mov	r31, r18
    2220:	f9 7f       	andi	r31, 0xF9	; 249
    2222:	bf 2e       	mov	r11, r31
    2224:	8f 36       	cpi	r24, 0x6F	; 111
    2226:	c1 f0       	breq	.+48     	; 0x2258 <vfprintf+0x26c>
    2228:	18 f4       	brcc	.+6      	; 0x2230 <vfprintf+0x244>
    222a:	88 35       	cpi	r24, 0x58	; 88
    222c:	79 f0       	breq	.+30     	; 0x224c <vfprintf+0x260>
    222e:	ad c0       	rjmp	.+346    	; 0x238a <vfprintf+0x39e>
    2230:	80 37       	cpi	r24, 0x70	; 112
    2232:	19 f0       	breq	.+6      	; 0x223a <vfprintf+0x24e>
    2234:	88 37       	cpi	r24, 0x78	; 120
    2236:	21 f0       	breq	.+8      	; 0x2240 <vfprintf+0x254>
    2238:	a8 c0       	rjmp	.+336    	; 0x238a <vfprintf+0x39e>
    223a:	2f 2f       	mov	r18, r31
    223c:	20 61       	ori	r18, 0x10	; 16
    223e:	b2 2e       	mov	r11, r18
    2240:	b4 fe       	sbrs	r11, 4
    2242:	0d c0       	rjmp	.+26     	; 0x225e <vfprintf+0x272>
    2244:	8b 2d       	mov	r24, r11
    2246:	84 60       	ori	r24, 0x04	; 4
    2248:	b8 2e       	mov	r11, r24
    224a:	09 c0       	rjmp	.+18     	; 0x225e <vfprintf+0x272>
    224c:	24 ff       	sbrs	r18, 4
    224e:	0a c0       	rjmp	.+20     	; 0x2264 <vfprintf+0x278>
    2250:	9f 2f       	mov	r25, r31
    2252:	96 60       	ori	r25, 0x06	; 6
    2254:	b9 2e       	mov	r11, r25
    2256:	06 c0       	rjmp	.+12     	; 0x2264 <vfprintf+0x278>
    2258:	28 e0       	ldi	r18, 0x08	; 8
    225a:	30 e0       	ldi	r19, 0x00	; 0
    225c:	05 c0       	rjmp	.+10     	; 0x2268 <vfprintf+0x27c>
    225e:	20 e1       	ldi	r18, 0x10	; 16
    2260:	30 e0       	ldi	r19, 0x00	; 0
    2262:	02 c0       	rjmp	.+4      	; 0x2268 <vfprintf+0x27c>
    2264:	20 e1       	ldi	r18, 0x10	; 16
    2266:	32 e0       	ldi	r19, 0x02	; 2
    2268:	f8 01       	movw	r30, r16
    226a:	b7 fe       	sbrs	r11, 7
    226c:	07 c0       	rjmp	.+14     	; 0x227c <vfprintf+0x290>
    226e:	60 81       	ld	r22, Z
    2270:	71 81       	ldd	r23, Z+1	; 0x01
    2272:	82 81       	ldd	r24, Z+2	; 0x02
    2274:	93 81       	ldd	r25, Z+3	; 0x03
    2276:	0c 5f       	subi	r16, 0xFC	; 252
    2278:	1f 4f       	sbci	r17, 0xFF	; 255
    227a:	06 c0       	rjmp	.+12     	; 0x2288 <vfprintf+0x29c>
    227c:	60 81       	ld	r22, Z
    227e:	71 81       	ldd	r23, Z+1	; 0x01
    2280:	80 e0       	ldi	r24, 0x00	; 0
    2282:	90 e0       	ldi	r25, 0x00	; 0
    2284:	0e 5f       	subi	r16, 0xFE	; 254
    2286:	1f 4f       	sbci	r17, 0xFF	; 255
    2288:	a4 01       	movw	r20, r8
    228a:	ec d0       	rcall	.+472    	; 0x2464 <__ultoa_invert>
    228c:	a8 2e       	mov	r10, r24
    228e:	a8 18       	sub	r10, r8
    2290:	fb 2d       	mov	r31, r11
    2292:	ff 77       	andi	r31, 0x7F	; 127
    2294:	7f 2e       	mov	r7, r31
    2296:	76 fe       	sbrs	r7, 6
    2298:	0b c0       	rjmp	.+22     	; 0x22b0 <vfprintf+0x2c4>
    229a:	37 2d       	mov	r19, r7
    229c:	3e 7f       	andi	r19, 0xFE	; 254
    229e:	a5 14       	cp	r10, r5
    22a0:	50 f4       	brcc	.+20     	; 0x22b6 <vfprintf+0x2ca>
    22a2:	74 fe       	sbrs	r7, 4
    22a4:	0a c0       	rjmp	.+20     	; 0x22ba <vfprintf+0x2ce>
    22a6:	72 fc       	sbrc	r7, 2
    22a8:	08 c0       	rjmp	.+16     	; 0x22ba <vfprintf+0x2ce>
    22aa:	37 2d       	mov	r19, r7
    22ac:	3e 7e       	andi	r19, 0xEE	; 238
    22ae:	05 c0       	rjmp	.+10     	; 0x22ba <vfprintf+0x2ce>
    22b0:	ba 2c       	mov	r11, r10
    22b2:	37 2d       	mov	r19, r7
    22b4:	03 c0       	rjmp	.+6      	; 0x22bc <vfprintf+0x2d0>
    22b6:	ba 2c       	mov	r11, r10
    22b8:	01 c0       	rjmp	.+2      	; 0x22bc <vfprintf+0x2d0>
    22ba:	b5 2c       	mov	r11, r5
    22bc:	34 ff       	sbrs	r19, 4
    22be:	0d c0       	rjmp	.+26     	; 0x22da <vfprintf+0x2ee>
    22c0:	fe 01       	movw	r30, r28
    22c2:	ea 0d       	add	r30, r10
    22c4:	f1 1d       	adc	r31, r1
    22c6:	80 81       	ld	r24, Z
    22c8:	80 33       	cpi	r24, 0x30	; 48
    22ca:	11 f4       	brne	.+4      	; 0x22d0 <vfprintf+0x2e4>
    22cc:	39 7e       	andi	r19, 0xE9	; 233
    22ce:	09 c0       	rjmp	.+18     	; 0x22e2 <vfprintf+0x2f6>
    22d0:	32 ff       	sbrs	r19, 2
    22d2:	06 c0       	rjmp	.+12     	; 0x22e0 <vfprintf+0x2f4>
    22d4:	b3 94       	inc	r11
    22d6:	b3 94       	inc	r11
    22d8:	04 c0       	rjmp	.+8      	; 0x22e2 <vfprintf+0x2f6>
    22da:	83 2f       	mov	r24, r19
    22dc:	86 78       	andi	r24, 0x86	; 134
    22de:	09 f0       	breq	.+2      	; 0x22e2 <vfprintf+0x2f6>
    22e0:	b3 94       	inc	r11
    22e2:	33 fd       	sbrc	r19, 3
    22e4:	12 c0       	rjmp	.+36     	; 0x230a <vfprintf+0x31e>
    22e6:	30 ff       	sbrs	r19, 0
    22e8:	06 c0       	rjmp	.+12     	; 0x22f6 <vfprintf+0x30a>
    22ea:	5a 2c       	mov	r5, r10
    22ec:	b3 14       	cp	r11, r3
    22ee:	18 f4       	brcc	.+6      	; 0x22f6 <vfprintf+0x30a>
    22f0:	53 0c       	add	r5, r3
    22f2:	5b 18       	sub	r5, r11
    22f4:	b3 2c       	mov	r11, r3
    22f6:	b3 14       	cp	r11, r3
    22f8:	60 f4       	brcc	.+24     	; 0x2312 <vfprintf+0x326>
    22fa:	b7 01       	movw	r22, r14
    22fc:	80 e2       	ldi	r24, 0x20	; 32
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	3c 87       	std	Y+12, r19	; 0x0c
    2302:	78 d0       	rcall	.+240    	; 0x23f4 <fputc>
    2304:	b3 94       	inc	r11
    2306:	3c 85       	ldd	r19, Y+12	; 0x0c
    2308:	f6 cf       	rjmp	.-20     	; 0x22f6 <vfprintf+0x30a>
    230a:	b3 14       	cp	r11, r3
    230c:	10 f4       	brcc	.+4      	; 0x2312 <vfprintf+0x326>
    230e:	3b 18       	sub	r3, r11
    2310:	01 c0       	rjmp	.+2      	; 0x2314 <vfprintf+0x328>
    2312:	31 2c       	mov	r3, r1
    2314:	34 ff       	sbrs	r19, 4
    2316:	11 c0       	rjmp	.+34     	; 0x233a <vfprintf+0x34e>
    2318:	b7 01       	movw	r22, r14
    231a:	80 e3       	ldi	r24, 0x30	; 48
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	3c 87       	std	Y+12, r19	; 0x0c
    2320:	69 d0       	rcall	.+210    	; 0x23f4 <fputc>
    2322:	3c 85       	ldd	r19, Y+12	; 0x0c
    2324:	32 ff       	sbrs	r19, 2
    2326:	16 c0       	rjmp	.+44     	; 0x2354 <vfprintf+0x368>
    2328:	31 fd       	sbrc	r19, 1
    232a:	03 c0       	rjmp	.+6      	; 0x2332 <vfprintf+0x346>
    232c:	88 e7       	ldi	r24, 0x78	; 120
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	02 c0       	rjmp	.+4      	; 0x2336 <vfprintf+0x34a>
    2332:	88 e5       	ldi	r24, 0x58	; 88
    2334:	90 e0       	ldi	r25, 0x00	; 0
    2336:	b7 01       	movw	r22, r14
    2338:	0c c0       	rjmp	.+24     	; 0x2352 <vfprintf+0x366>
    233a:	83 2f       	mov	r24, r19
    233c:	86 78       	andi	r24, 0x86	; 134
    233e:	51 f0       	breq	.+20     	; 0x2354 <vfprintf+0x368>
    2340:	31 ff       	sbrs	r19, 1
    2342:	02 c0       	rjmp	.+4      	; 0x2348 <vfprintf+0x35c>
    2344:	8b e2       	ldi	r24, 0x2B	; 43
    2346:	01 c0       	rjmp	.+2      	; 0x234a <vfprintf+0x35e>
    2348:	80 e2       	ldi	r24, 0x20	; 32
    234a:	37 fd       	sbrc	r19, 7
    234c:	8d e2       	ldi	r24, 0x2D	; 45
    234e:	b7 01       	movw	r22, r14
    2350:	90 e0       	ldi	r25, 0x00	; 0
    2352:	50 d0       	rcall	.+160    	; 0x23f4 <fputc>
    2354:	a5 14       	cp	r10, r5
    2356:	30 f4       	brcc	.+12     	; 0x2364 <vfprintf+0x378>
    2358:	b7 01       	movw	r22, r14
    235a:	80 e3       	ldi	r24, 0x30	; 48
    235c:	90 e0       	ldi	r25, 0x00	; 0
    235e:	4a d0       	rcall	.+148    	; 0x23f4 <fputc>
    2360:	5a 94       	dec	r5
    2362:	f8 cf       	rjmp	.-16     	; 0x2354 <vfprintf+0x368>
    2364:	aa 94       	dec	r10
    2366:	f4 01       	movw	r30, r8
    2368:	ea 0d       	add	r30, r10
    236a:	f1 1d       	adc	r31, r1
    236c:	80 81       	ld	r24, Z
    236e:	b7 01       	movw	r22, r14
    2370:	90 e0       	ldi	r25, 0x00	; 0
    2372:	40 d0       	rcall	.+128    	; 0x23f4 <fputc>
    2374:	a1 10       	cpse	r10, r1
    2376:	f6 cf       	rjmp	.-20     	; 0x2364 <vfprintf+0x378>
    2378:	33 20       	and	r3, r3
    237a:	09 f4       	brne	.+2      	; 0x237e <vfprintf+0x392>
    237c:	5d ce       	rjmp	.-838    	; 0x2038 <vfprintf+0x4c>
    237e:	b7 01       	movw	r22, r14
    2380:	80 e2       	ldi	r24, 0x20	; 32
    2382:	90 e0       	ldi	r25, 0x00	; 0
    2384:	37 d0       	rcall	.+110    	; 0x23f4 <fputc>
    2386:	3a 94       	dec	r3
    2388:	f7 cf       	rjmp	.-18     	; 0x2378 <vfprintf+0x38c>
    238a:	f7 01       	movw	r30, r14
    238c:	86 81       	ldd	r24, Z+6	; 0x06
    238e:	97 81       	ldd	r25, Z+7	; 0x07
    2390:	02 c0       	rjmp	.+4      	; 0x2396 <vfprintf+0x3aa>
    2392:	8f ef       	ldi	r24, 0xFF	; 255
    2394:	9f ef       	ldi	r25, 0xFF	; 255
    2396:	2c 96       	adiw	r28, 0x0c	; 12
    2398:	0f b6       	in	r0, 0x3f	; 63
    239a:	f8 94       	cli
    239c:	de bf       	out	0x3e, r29	; 62
    239e:	0f be       	out	0x3f, r0	; 63
    23a0:	cd bf       	out	0x3d, r28	; 61
    23a2:	df 91       	pop	r29
    23a4:	cf 91       	pop	r28
    23a6:	1f 91       	pop	r17
    23a8:	0f 91       	pop	r16
    23aa:	ff 90       	pop	r15
    23ac:	ef 90       	pop	r14
    23ae:	df 90       	pop	r13
    23b0:	cf 90       	pop	r12
    23b2:	bf 90       	pop	r11
    23b4:	af 90       	pop	r10
    23b6:	9f 90       	pop	r9
    23b8:	8f 90       	pop	r8
    23ba:	7f 90       	pop	r7
    23bc:	6f 90       	pop	r6
    23be:	5f 90       	pop	r5
    23c0:	4f 90       	pop	r4
    23c2:	3f 90       	pop	r3
    23c4:	2f 90       	pop	r2
    23c6:	08 95       	ret

000023c8 <strnlen_P>:
    23c8:	fc 01       	movw	r30, r24
    23ca:	05 90       	lpm	r0, Z+
    23cc:	61 50       	subi	r22, 0x01	; 1
    23ce:	70 40       	sbci	r23, 0x00	; 0
    23d0:	01 10       	cpse	r0, r1
    23d2:	d8 f7       	brcc	.-10     	; 0x23ca <strnlen_P+0x2>
    23d4:	80 95       	com	r24
    23d6:	90 95       	com	r25
    23d8:	8e 0f       	add	r24, r30
    23da:	9f 1f       	adc	r25, r31
    23dc:	08 95       	ret

000023de <strnlen>:
    23de:	fc 01       	movw	r30, r24
    23e0:	61 50       	subi	r22, 0x01	; 1
    23e2:	70 40       	sbci	r23, 0x00	; 0
    23e4:	01 90       	ld	r0, Z+
    23e6:	01 10       	cpse	r0, r1
    23e8:	d8 f7       	brcc	.-10     	; 0x23e0 <strnlen+0x2>
    23ea:	80 95       	com	r24
    23ec:	90 95       	com	r25
    23ee:	8e 0f       	add	r24, r30
    23f0:	9f 1f       	adc	r25, r31
    23f2:	08 95       	ret

000023f4 <fputc>:
    23f4:	0f 93       	push	r16
    23f6:	1f 93       	push	r17
    23f8:	cf 93       	push	r28
    23fa:	df 93       	push	r29
    23fc:	fb 01       	movw	r30, r22
    23fe:	23 81       	ldd	r18, Z+3	; 0x03
    2400:	21 fd       	sbrc	r18, 1
    2402:	03 c0       	rjmp	.+6      	; 0x240a <fputc+0x16>
    2404:	8f ef       	ldi	r24, 0xFF	; 255
    2406:	9f ef       	ldi	r25, 0xFF	; 255
    2408:	28 c0       	rjmp	.+80     	; 0x245a <fputc+0x66>
    240a:	22 ff       	sbrs	r18, 2
    240c:	16 c0       	rjmp	.+44     	; 0x243a <fputc+0x46>
    240e:	46 81       	ldd	r20, Z+6	; 0x06
    2410:	57 81       	ldd	r21, Z+7	; 0x07
    2412:	24 81       	ldd	r18, Z+4	; 0x04
    2414:	35 81       	ldd	r19, Z+5	; 0x05
    2416:	42 17       	cp	r20, r18
    2418:	53 07       	cpc	r21, r19
    241a:	44 f4       	brge	.+16     	; 0x242c <fputc+0x38>
    241c:	a0 81       	ld	r26, Z
    241e:	b1 81       	ldd	r27, Z+1	; 0x01
    2420:	9d 01       	movw	r18, r26
    2422:	2f 5f       	subi	r18, 0xFF	; 255
    2424:	3f 4f       	sbci	r19, 0xFF	; 255
    2426:	31 83       	std	Z+1, r19	; 0x01
    2428:	20 83       	st	Z, r18
    242a:	8c 93       	st	X, r24
    242c:	26 81       	ldd	r18, Z+6	; 0x06
    242e:	37 81       	ldd	r19, Z+7	; 0x07
    2430:	2f 5f       	subi	r18, 0xFF	; 255
    2432:	3f 4f       	sbci	r19, 0xFF	; 255
    2434:	37 83       	std	Z+7, r19	; 0x07
    2436:	26 83       	std	Z+6, r18	; 0x06
    2438:	10 c0       	rjmp	.+32     	; 0x245a <fputc+0x66>
    243a:	eb 01       	movw	r28, r22
    243c:	09 2f       	mov	r16, r25
    243e:	18 2f       	mov	r17, r24
    2440:	00 84       	ldd	r0, Z+8	; 0x08
    2442:	f1 85       	ldd	r31, Z+9	; 0x09
    2444:	e0 2d       	mov	r30, r0
    2446:	09 95       	icall
    2448:	89 2b       	or	r24, r25
    244a:	e1 f6       	brne	.-72     	; 0x2404 <fputc+0x10>
    244c:	8e 81       	ldd	r24, Y+6	; 0x06
    244e:	9f 81       	ldd	r25, Y+7	; 0x07
    2450:	01 96       	adiw	r24, 0x01	; 1
    2452:	9f 83       	std	Y+7, r25	; 0x07
    2454:	8e 83       	std	Y+6, r24	; 0x06
    2456:	81 2f       	mov	r24, r17
    2458:	90 2f       	mov	r25, r16
    245a:	df 91       	pop	r29
    245c:	cf 91       	pop	r28
    245e:	1f 91       	pop	r17
    2460:	0f 91       	pop	r16
    2462:	08 95       	ret

00002464 <__ultoa_invert>:
    2464:	fa 01       	movw	r30, r20
    2466:	aa 27       	eor	r26, r26
    2468:	28 30       	cpi	r18, 0x08	; 8
    246a:	51 f1       	breq	.+84     	; 0x24c0 <__ultoa_invert+0x5c>
    246c:	20 31       	cpi	r18, 0x10	; 16
    246e:	81 f1       	breq	.+96     	; 0x24d0 <__ultoa_invert+0x6c>
    2470:	e8 94       	clt
    2472:	6f 93       	push	r22
    2474:	6e 7f       	andi	r22, 0xFE	; 254
    2476:	6e 5f       	subi	r22, 0xFE	; 254
    2478:	7f 4f       	sbci	r23, 0xFF	; 255
    247a:	8f 4f       	sbci	r24, 0xFF	; 255
    247c:	9f 4f       	sbci	r25, 0xFF	; 255
    247e:	af 4f       	sbci	r26, 0xFF	; 255
    2480:	b1 e0       	ldi	r27, 0x01	; 1
    2482:	3e d0       	rcall	.+124    	; 0x2500 <__ultoa_invert+0x9c>
    2484:	b4 e0       	ldi	r27, 0x04	; 4
    2486:	3c d0       	rcall	.+120    	; 0x2500 <__ultoa_invert+0x9c>
    2488:	67 0f       	add	r22, r23
    248a:	78 1f       	adc	r23, r24
    248c:	89 1f       	adc	r24, r25
    248e:	9a 1f       	adc	r25, r26
    2490:	a1 1d       	adc	r26, r1
    2492:	68 0f       	add	r22, r24
    2494:	79 1f       	adc	r23, r25
    2496:	8a 1f       	adc	r24, r26
    2498:	91 1d       	adc	r25, r1
    249a:	a1 1d       	adc	r26, r1
    249c:	6a 0f       	add	r22, r26
    249e:	71 1d       	adc	r23, r1
    24a0:	81 1d       	adc	r24, r1
    24a2:	91 1d       	adc	r25, r1
    24a4:	a1 1d       	adc	r26, r1
    24a6:	20 d0       	rcall	.+64     	; 0x24e8 <__ultoa_invert+0x84>
    24a8:	09 f4       	brne	.+2      	; 0x24ac <__ultoa_invert+0x48>
    24aa:	68 94       	set
    24ac:	3f 91       	pop	r19
    24ae:	2a e0       	ldi	r18, 0x0A	; 10
    24b0:	26 9f       	mul	r18, r22
    24b2:	11 24       	eor	r1, r1
    24b4:	30 19       	sub	r19, r0
    24b6:	30 5d       	subi	r19, 0xD0	; 208
    24b8:	31 93       	st	Z+, r19
    24ba:	de f6       	brtc	.-74     	; 0x2472 <__ultoa_invert+0xe>
    24bc:	cf 01       	movw	r24, r30
    24be:	08 95       	ret
    24c0:	46 2f       	mov	r20, r22
    24c2:	47 70       	andi	r20, 0x07	; 7
    24c4:	40 5d       	subi	r20, 0xD0	; 208
    24c6:	41 93       	st	Z+, r20
    24c8:	b3 e0       	ldi	r27, 0x03	; 3
    24ca:	0f d0       	rcall	.+30     	; 0x24ea <__ultoa_invert+0x86>
    24cc:	c9 f7       	brne	.-14     	; 0x24c0 <__ultoa_invert+0x5c>
    24ce:	f6 cf       	rjmp	.-20     	; 0x24bc <__ultoa_invert+0x58>
    24d0:	46 2f       	mov	r20, r22
    24d2:	4f 70       	andi	r20, 0x0F	; 15
    24d4:	40 5d       	subi	r20, 0xD0	; 208
    24d6:	4a 33       	cpi	r20, 0x3A	; 58
    24d8:	18 f0       	brcs	.+6      	; 0x24e0 <__ultoa_invert+0x7c>
    24da:	49 5d       	subi	r20, 0xD9	; 217
    24dc:	31 fd       	sbrc	r19, 1
    24de:	40 52       	subi	r20, 0x20	; 32
    24e0:	41 93       	st	Z+, r20
    24e2:	02 d0       	rcall	.+4      	; 0x24e8 <__ultoa_invert+0x84>
    24e4:	a9 f7       	brne	.-22     	; 0x24d0 <__ultoa_invert+0x6c>
    24e6:	ea cf       	rjmp	.-44     	; 0x24bc <__ultoa_invert+0x58>
    24e8:	b4 e0       	ldi	r27, 0x04	; 4
    24ea:	a6 95       	lsr	r26
    24ec:	97 95       	ror	r25
    24ee:	87 95       	ror	r24
    24f0:	77 95       	ror	r23
    24f2:	67 95       	ror	r22
    24f4:	ba 95       	dec	r27
    24f6:	c9 f7       	brne	.-14     	; 0x24ea <__ultoa_invert+0x86>
    24f8:	00 97       	sbiw	r24, 0x00	; 0
    24fa:	61 05       	cpc	r22, r1
    24fc:	71 05       	cpc	r23, r1
    24fe:	08 95       	ret
    2500:	9b 01       	movw	r18, r22
    2502:	ac 01       	movw	r20, r24
    2504:	0a 2e       	mov	r0, r26
    2506:	06 94       	lsr	r0
    2508:	57 95       	ror	r21
    250a:	47 95       	ror	r20
    250c:	37 95       	ror	r19
    250e:	27 95       	ror	r18
    2510:	ba 95       	dec	r27
    2512:	c9 f7       	brne	.-14     	; 0x2506 <__ultoa_invert+0xa2>
    2514:	62 0f       	add	r22, r18
    2516:	73 1f       	adc	r23, r19
    2518:	84 1f       	adc	r24, r20
    251a:	95 1f       	adc	r25, r21
    251c:	a0 1d       	adc	r26, r0
    251e:	08 95       	ret

00002520 <eeprom_read_word>:
    2520:	a8 e1       	ldi	r26, 0x18	; 24
    2522:	b0 e0       	ldi	r27, 0x00	; 0
    2524:	42 e0       	ldi	r20, 0x02	; 2
    2526:	50 e0       	ldi	r21, 0x00	; 0
    2528:	02 c0       	rjmp	.+4      	; 0x252e <eeprom_read_blraw>

0000252a <eeprom_read_block>:
    252a:	dc 01       	movw	r26, r24
    252c:	cb 01       	movw	r24, r22

0000252e <eeprom_read_blraw>:
    252e:	fc 01       	movw	r30, r24
    2530:	f9 99       	sbic	0x1f, 1	; 31
    2532:	fe cf       	rjmp	.-4      	; 0x2530 <eeprom_read_blraw+0x2>
    2534:	06 c0       	rjmp	.+12     	; 0x2542 <eeprom_read_blraw+0x14>
    2536:	f2 bd       	out	0x22, r31	; 34
    2538:	e1 bd       	out	0x21, r30	; 33
    253a:	f8 9a       	sbi	0x1f, 0	; 31
    253c:	31 96       	adiw	r30, 0x01	; 1
    253e:	00 b4       	in	r0, 0x20	; 32
    2540:	0d 92       	st	X+, r0
    2542:	41 50       	subi	r20, 0x01	; 1
    2544:	50 40       	sbci	r21, 0x00	; 0
    2546:	b8 f7       	brcc	.-18     	; 0x2536 <eeprom_read_blraw+0x8>
    2548:	08 95       	ret

0000254a <_exit>:
    254a:	f8 94       	cli

0000254c <__stop_program>:
    254c:	ff cf       	rjmp	.-2      	; 0x254c <__stop_program>
